{
    "UtilTest": "UtilTest",
    "java.util.Iterator<String>": "typing.Iterator[str]",
    "java.util.ArrayList<Object>": "typing.List[typing.Any]",
    "PatternOptionBuilderTest": "PatternOptionBuilderTest",
    "java.net.MalformedURLException": "typing.Union[urllib.error.URLError, ValueError]",
    "java.util.Comparator<Option>": "typing.Callable[[Option, Option], int]",
    "java.lang.Cloneable": "typing.Any",
    "java.lang.Class<String>": "typing.Type[str]",
    "java.lang.Long": "int",
    "Long": "int",
    "java.util.LinkedHashMap<String,OptionGroup>": "typing.OrderedDict[str, OptionGroup]",
    "AlreadySelectedException": "AlreadySelectedException",
    "ValuesTest": "ValuesTest",
    "NotInstantiable": "NotInstantiable",
    "java.net.URL": "typing.Union[urllib.parse.ParseResult, urllib.parse.SplitResult, urllib.parse.DefragResult, str]",
    "TestOption": "TestOption",
    "java.lang.Appendable": "typing.Union[typing.List, io.TextIOBase]",
    "java.lang.String": "str",
    "?": "typing.Any",
    "V[]": "typing.List[typing.Any]",
    "String": "str",
    "PosixParser": "PosixParser",
    "GnuParser": "GnuParser",
    "java.util.ArrayList<Option>": "typing.List[Option]",
    "java.util.ListIterator<String>": "typing.Iterator[str]",
    "long": "int",
    "Instantiable": "Instantiable",
    "OptionsTest": "OptionsTest",
    "java.io.ByteArrayOutputStream": "typing.Union[io.BytesIO, bytearray]",
    "ValueTest": "ValueTest",
    "java.lang.Class<>": "typing.Type[typing.Any]",
    "java.util.Iterator<?>": "typing.Iterator[typing.Any]",
    "PosixParserTest": "PosixParserTest",
    "java.util.List<Object>": "typing.List[typing.Any]",
    "java.util.List<StringBuffer>": "typing.List[io.StringIO]",
    "java.lang.Exception": "Exception",
    "TypeHandler": "TypeHandler",
    "Option[]": "typing.List[Option]",
    "java.io.IOException": "typing.Union[IOError, OSError]",
    "UnrecognizedOptionException": "UnrecognizedOptionException",
    "ApplicationTest": "ApplicationTest",
    "java.lang.Class<File>": "typing.Type[pathlib.Path]",
    "java.io.BufferedReader": "io.BufferedReader",
    "BugCLI252Test": "BugCLI252Test",
    "java.util.Map<String,Option>": "typing.Dict[str, Option]",
    "Options": "Options",
    "TypeHandlerTest": "TypeHandlerTest",
    "java.lang.Integer": "int",
    "java.io.File[]": "typing.List[pathlib.Path]",
    "java.lang.Number": "typing.Union[int, float, numbers.Number]",
    "BugCLI265Test": "BugCLI265Test",
    "ArgumentIsOptionTest": "ArgumentIsOptionTest",
    "java.util.HashSet<OptionGroup>": "typing.Set[OptionGroup]",
    "java.util.Enumeration<?>": "typing.Union[typing.Iterator[typing.Any], typing.Generator[typing.Any, typing.Any, typing.Any]]",
    "java.lang.Boolean": "bool",
    "BugCLI162Test": "BugCLI162Test",
    "OptionValidator": "OptionValidator",
    "MissingArgumentException": "MissingArgumentException",
    "PatternOptionBuilder": "PatternOptionBuilder",
    "java.lang.Class<FileInputStream>": "typing.Type[typing.Union[io.FileIO, io.BufferedReader, io.TextIOWrapper]]",
    "java.lang.Class<?>": "typing.Type[typing.Any]",
    "java.lang.Character": "str",
    "DefaultParserTest": "DefaultParserTest",
    "OptionGroupTest": "OptionGroupTest",
    "Builder": "Builder",
    "DefaultParser": "DefaultParser",
    "BasicParser": "BasicParser",
    "BugsTest": "BugsTest",
    "CommandLineParser": "CommandLineParser",
    "java.lang.Class<File[]>": "typing.Type[typing.List[pathlib.Path]]",
    "java.util.LinkedList<String>": "typing.List[str]",
    "java.util.Arrays": "typing.List",
    "ParserTestCase": "ParserTestCase",
    "java.util.Collections": "typing.Collection",
    "java.lang.UnsupportedOperationException": "typing.Union[RuntimeError, NotImplementedError, NameError]",
    "HelpFormatterTest": "HelpFormatterTest",
    "java.util.ArrayList<>": "typing.List[typing.Any]",
    "T": "typing.Any",
    "GnuParserTest": "GnuParserTest",
    "BugCLI71Test": "BugCLI71Test",
    "java.util.ArrayList<StringBuffer>": "typing.List[io.StringIO]",
    "BugCLI133Test": "BugCLI133Test",
    "DisablePartialMatchingTest": "DisablePartialMatchingTest",
    "BugCLI148Test": "BugCLI148Test",
    "OptionComparator": "OptionComparator",
    "OptionTest": "OptionTest",
    "java.util.List<?>": "typing.List[typing.Any]",
    "java.lang.Class<Date>": "typing.Type[typing.Union[datetime.date, datetime.datetime]]",
    "java.lang.Object": "typing.Any",
    "Object": "typing.Any",
    "java.lang.String[]": "typing.List[str]",
    "java.io.File": "pathlib.Path",
    "java.lang.RuntimeException": "RuntimeError",
    "Util": "Util",
    "BasicParserTest": "BasicParserTest",
    "Assert": "unittest.TestCase",
    "java.util.LinkedHashMap<String,Option>": "typing.OrderedDict[str, Option]",
    "java.lang.StringBuilder": "typing.Union[typing.List[str], io.StringIO]",
    "java.util.List<Option>": "typing.List[Option]",
    "HelpFormatter": "HelpFormatter",
    "MissingOptionException": "MissingOptionException",
    "java.io.Serializable": "typing.Any",
    "java.io.StringReader": "io.StringIO",
    "java.lang.CloneNotSupportedException": "TypeError",
    "DefaultOption": "DefaultOption",
    "ParseException": "ParseException",
    "char": "str",
    "CommandLine": "CommandLine",
    "CommandLineTest": "CommandLineTest",
    "BugCLI18Test": "BugCLI18Test",
    "AmbiguousOptionException": "AmbiguousOptionException",
    "java.util.Iterator<Option>": "typing.Iterator[Option]",
    "java.util.Calendar": "typing.Union[datetime.datetime, datetime.date, datetime.time, datetime.timedelta, datetime.timezone]",
    "OptionBuilder": "OptionBuilder",
    "java.util.Collection<String>": "typing.Collection[str]",
    "OptionBuilderTest": "OptionBuilderTest",
    "java.lang.Class<URL>": "typing.Type[typing.Union[urllib.parse.ParseResult, urllib.parse.SplitResult, urllib.parse.DefragResult, str]]",
    "OptionGroup": "OptionGroup",
    "java.util.ArrayList<OptionGroup>": "typing.List[OptionGroup]",
    "java.util.List<String>": "typing.List[str]",
    "java.lang.StringBuffer": "io.StringIO",
    "java.io.PrintStream": "typing.IO",
    "java.lang.Class<Number>": "typing.Type[typing.Union[int, float, numbers.Number]]",
    "java.io.StringWriter": "io.StringIO",
    "boolean": "bool",
    "BugCLI13Test": "BugCLI13Test",
    "java.lang.Class<T>": "typing.Type[typing.Any]",
    "java.util.Collection<Option>": "typing.Collection[Option]",
    "java.util.List<>": "typing.List[typing.Any]",
    "java.lang.Double": "float",
    "java.io.FileNotFoundException": "FileNotFoundError",
    "java.util.Properties": "typing.Union[configparser.ConfigParser, typing.Dict]",
    "BugCLI266Test": "BugCLI266Test",
    "java.io.FileInputStream": "typing.Union[io.FileIO, io.BufferedReader]",
    "java.lang.System": "typing.ModuleType",
    "java.lang.NumberFormatException": "typing.Union[ValueError, TypeError]",
    "java.util.Map<String,OptionGroup>": "typing.Dict[str, OptionGroup]",
    "java.lang.IllegalArgumentException": "ValueError",
    "Parser": "Parser",
    "java.util.Vector<Object>": "typing.List[typing.Any]",
    "java.util.ArrayList<String>": "typing.List[str]",
    "java.util.Collection<OptionGroup>": "typing.Collection[OptionGroup]",
    "java.lang.ClassNotFoundException": "typing.Union[ModuleNotFoundError, ImportError]",
    "void": "None",
    "Option": "Option",
    "int": "int",
    "java.io.PrintWriter": "typing.Union[io.TextIOWrapper, io.StringIO]",
    "java.util.Date": "typing.Union[datetime.datetime, datetime.date]",
    "java.util.Objects": "typing.Any",
    "java.lang.Float": "float",
    "Float": "float",
    "java.lang.Class<Object>": "typing.Type[typing.Any]",
    "AllocateDirectHexTest": "AllocateDirectHexTest",
    "Caverphone2": "Caverphone2",
    "java.util.regex.Matcher": "re.Match",
    "Base16OutputStream": "Base16OutputStream",
    "Nysiis": "Nysiis",
    "Base64InputStream": "Base64InputStream",
    "DecoderException": "DecoderException",
    "java.util.Map<String,Map<String,List<Rule>>>": "typing.Dict[str, typing.Dict[str, typing.List[Rule]]]",
    "BinaryCodec": "BinaryCodec",
    "java.util.BitSet": "typing.List[bool]",
    "Charsets": "Charsets",
    "java.util.HashSet<String>": "typing.Set[str]",
    "java.nio.charset.Charset": "str",
    "StringDecoder": "StringDecoder",
    "NameType": "NameType",
    "StringEncoderAbstractTest": "StringEncoderAbstractTest",
    "ComparisonFailure": "AssertionError",
    "Encoder": "Encoder",
    "Blake3": "Blake3",
    "Base64Test": "Base64Test",
    "StringEncoderAbstractTest<Soundex>": "StringEncoderAbstractTest[Soundex]",
    "byte[][]": "typing.List[typing.List[int]]",
    "java.util.List<Object[]>": "typing.List[typing.List[typing.Any]]",
    "Base16TestData": "Base16TestData",
    "BaseNCodecTest": "BaseNCodecTest",
    "java.util.Set<Branch>": "typing.Set[Branch]",
    "RuleType": "RuleType",
    "Phoneme": "Phoneme",
    "Base16": "Base16",
    "StringEncoderAbstractTest<ColognePhonetic>": "StringEncoderAbstractTest[ColognePhonetic]",
    "java.util.LinkedHashSet<Branch>": "typing.OrderedDict[Branch, None]",
    "B64Test": "B64Test",
    "java.lang.Runtime": "subprocess.Popen",
    "BaseNCodecOutputStream": "BaseNCodecOutputStream",
    "java.lang.Math": "typing.Any",
    "EngineState": "EngineState",
    "java.util.EnumMap<NameType,Lang>": "typing.Dict[NameType, Lang]",
    "java.util.Comparator<>": "typing.Callable[[typing.Any, typing.Any], int]",
    "Context": "Context",
    "RunTest": "RunTest",
    "java.util.ArrayList<BenchResult>": "typing.List[BenchResult]",
    "PhoneticEngineRegressionTest": "PhoneticEngineRegressionTest",
    "BaseNTestData": "BaseNTestData",
    "BinaryCodecTest": "BinaryCodecTest",
    "Parameterized": "typing.Generic[typing.TypeVar('T')]",
    "long[]": "typing.List[int]",
    "long[][]": "typing.List[typing.List[int]]",
    "RefinedSoundex": "RefinedSoundex",
    "ResourceConstants": "ResourceConstants",
    "RFC1522Codec": "RFC1522Codec",
    "BaseNCodec": "BaseNCodec",
    "NoOpBaseNCodec": "NoOpBaseNCodec",
    "Resources": "Resources",
    "MetaphoneTest": "MetaphoneTest",
    "java.util.LinkedHashSet<Phoneme>": "typing.OrderedDict[Phoneme, None]",
    "java.util.Map<NameType,Map<RuleType,Map<String,Map<String,List<Rule>>>>>": "typing.Dict[NameType, typing.Dict[RuleType, typing.Dict[str, typing.Dict[str, typing.List[Rule]]]]]",
    "QuotedPrintableCodec": "QuotedPrintableCodec",
    "java.util.HashMap<Character,Character>": "typing.Dict[str, str]",
    "java.util.Comparator<Phoneme>": "typing.Callable[[Phoneme, Phoneme], int]",
    "java.util.Set<String>": "typing.Set[str]",
    "StringEncoderAbstractTest<DaitchMokotoffSoundex>": "StringEncoderAbstractTest[DaitchMokotoffSoundex]",
    "Table": "Table",
    "BinaryDecoder": "BinaryDecoder",
    "java.util.List<Phoneme>": "typing.List[Phoneme]",
    "java.util.TreeMap<Phoneme,Phoneme>": "typing.Dict[Phoneme, Phoneme]",
    "java.lang.AssertionError": "AssertionError",
    "java.util.Map<Phoneme,Phoneme>": "typing.Dict[Phoneme, Phoneme]",
    "Base16InputStreamTest": "Base16InputStreamTest",
    "MurmurHash2": "MurmurHash2",
    "Decoder": "Decoder",
    "java.io.UnsupportedEncodingException": "typing.Union[UnicodeEncodeError, ValueError]",
    "HmacAlgorithms": "HmacAlgorithms",
    "Caverphone2Test": "Caverphone2Test",
    "Caverphone1": "Caverphone1",
    "java.lang.Class<? extends Checksum>": "typing.Type[typing.Any]",
    "StringEncoderAbstractTest<Nysiis>": "StringEncoderAbstractTest[Nysiis]",
    "Hex": "Hex",
    "java.lang.reflect.Constructor<? extends Checksum>": "typing.Callable[..., typing.Any]",
    "SoundexTest": "SoundexTest",
    "RPattern": "RPattern",
    "java.lang.String[][]": "typing.List[typing.List[str]]",
    "java.lang.Short": "int",
    "java.lang.IndexOutOfBoundsException": "IndexError",
    "java.util.List<BenchResult>": "typing.List[BenchResult]",
    "java.util.zip.CRC32": "typing.Any",
    "java.util.Scanner": "typing.Any",
    "Rule": "Rule",
    "Base16InputStream": "Base16InputStream",
    "java.net.URISyntaxException": "typing.Union[urllib.error.URLError, ValueError]",
    "short": "int",
    "short[]": "typing.List[int]",
    "java.io.OutputStream": "typing.Union[io.BytesIO, io.StringIO, io.BufferedWriter]",
    "SomeLanguages": "SomeLanguages",
    "java.util.EnumMap<NameType,Languages>": "typing.Dict[NameType, Languages]",
    "java.util.Map<RuleType,Map<String,Map<String,List<Rule>>>>": "typing.Dict[RuleType, typing.Dict[str, typing.Dict[str, typing.List[Rule]]]]",
    "CologneInputBuffer": "CologneInputBuffer",
    "NysiisTest": "NysiisTest",
    "java.util.Set<Phoneme>": "typing.Set[Phoneme]",
    "java.lang.Throwable": "BaseException",
    "IncrementalHash32x86": "IncrementalHash32x86",
    "MatchRatingApproachEncoderTest": "MatchRatingApproachEncoderTest",
    "PhoneticEngineTest": "PhoneticEngineTest",
    "HexTest": "HexTest",
    "CologneOutputBuffer": "CologneOutputBuffer",
    "StringEncoderAbstractTest<Caverphone2>": "StringEncoderAbstractTest[Caverphone2]",
    "java.lang.ClassCastException": "typing.Union[TypeError, ValueError]",
    "java.util.ArrayList<Phoneme>": "typing.List[Phoneme]",
    "LangRule": "LangRule",
    "Sha2CryptTest": "Sha2CryptTest",
    "java.io.ByteArrayInputStream": "typing.Union[io.BytesIO, bytearray]",
    "java.lang.Object[][]": "typing.List[typing.List[typing.Any]]",
    "CologneBuffer": "CologneBuffer",
    "java.lang.Iterable<Phoneme>": "typing.Iterable[Phoneme]",
    "java.util.ArrayList<Branch>": "typing.List[Branch]",
    "java.nio.charset.UnsupportedCharsetException": "typing.Union[LookupError, UnicodeError]",
    "Base32Test": "Base32Test",
    "java.util.Map<Character,Character>": "typing.Dict[str, str]",
    "PhonemeExpr": "PhonemeExpr",
    "java.lang.Thread": "threading.Thread",
    "java.util.Locale": "typing.Any",
    "MessageDigestAlgorithms": "MessageDigestAlgorithms",
    "IncrementalHash32": "IncrementalHash32",
    "MatchRatingApproachEncoder": "MatchRatingApproachEncoder",
    "PureJavaCrc32Test": "PureJavaCrc32Test",
    "java.io.FilterOutputStream": "typing.Union[io.BufferedWriter, io.RawIOBase]",
    "DoubleMetaphone2Test": "DoubleMetaphone2Test",
    "byte[]": "typing.List[int]",
    "java.util.List<Class<? extends Checksum>>": "typing.List[typing.Type[typing.Any]]",
    "XXHash32Test": "XXHash32Test",
    "DoubleMetaphoneResult": "DoubleMetaphoneResult",
    "TestData": "TestData",
    "java.lang.Iterable<String>": "typing.Iterable[str]",
    "Base64TestData": "Base64TestData",
    "PercentCodec": "PercentCodec",
    "java.util.HashMap<String,List<Rule>>": "typing.Dict[str, typing.List[Rule]]",
    "java.util.regex.Pattern": "re.Pattern",
    "Base32InputStreamTest": "Base32InputStreamTest",
    "Base16Test": "Base16Test",
    "java.util.List<LangRule>": "typing.List[LangRule]",
    "AbstractCaverphone": "AbstractCaverphone",
    "QuotedPrintableCodecTest": "QuotedPrintableCodecTest",
    "B64": "B64",
    "java.util.Map<>": "typing.Dict[typing.Any, typing.Any]",
    "RefinedSoundexTest": "RefinedSoundexTest",
    "java.lang.Error": "Exception",
    "RuleTest": "RuleTest",
    "QCodecTest": "QCodecTest",
    "Base32": "Base32",
    "java.lang.Comparable<Comparable<?>>": "typing.Generic[typing.TypeVar('T', bound=typing.Any)]",
    "java.io.InputStream": "typing.Union[io.BytesIO, io.StringIO, io.BufferedReader]",
    "java.util.HashMap<Character,List<Rule>>": "typing.Dict[str, typing.List[Rule]]",
    "java.lang.IllegalStateException": "RuntimeError",
    "UnixCrypt": "UnixCrypt",
    "int[][]": "typing.List[typing.List[int]]",
    "StringUtilsTest": "StringUtilsTest",
    "java.lang.Comparable<?>": "typing.Generic[typing.TypeVar('T', boud=typing.Any)]",
    "java.util.ArrayList<LangRule>": "typing.List[LangRule]",
    "java.nio.charset.StandardCharsets": "codecs.Codec",
    "BaseNCodecInputStream": "BaseNCodecInputStream",
    "Assume": "typing.Any",
    "java.lang.Class<? extends Throwable>": "typing.Type[BaseException]",
    "HmacUtils": "HmacUtils",
    "DaitchMokotoffSoundex": "DaitchMokotoffSoundex",
    "DecoderExceptionTest": "DecoderExceptionTest",
    "EncoderExceptionTest": "EncoderExceptionTest",
    "BeiderMorseEncoderTest": "BeiderMorseEncoderTest",
    "DaitchMokotoffSoundexTest": "DaitchMokotoffSoundexTest",
    "java.lang.NullPointerException": "typing.Union[TypeError, AttributeError, ValueError]",
    "PhoneticEnginePerformanceTest": "PhoneticEnginePerformanceTest",
    "CharEncoding": "CharEncoding",
    "Branch": "Branch",
    "Phoneme[][]": "typing.List[typing.List[Phoneme]]",
    "java.lang.ArrayIndexOutOfBoundsException": "IndexError",
    "CharSequenceUtils": "CharSequenceUtils",
    "CacheSubSequencePerformanceTest": "CacheSubSequencePerformanceTest",
    "java.util.Collection<Object[]>": "typing.Collection[typing.List[typing.Any]]",
    "MurmurHash3": "MurmurHash3",
    "java.util.EnumMap<NameType,Map<RuleType,Map<String,Map<String,List<Rule>>>>>": "typing.Dict[NameType, typing.Dict[RuleType, typing.Dict[str, typing.Dict[str, typing.List[Rule]]]]]",
    "BCodec": "BCodec",
    "ChunkState": "ChunkState",
    "CharsetsTest": "CharsetsTest",
    "BeiderMorseEncoder": "BeiderMorseEncoder",
    "java.lang.CharSequence": "str",
    "PureJavaCrc32": "PureJavaCrc32",
    "java.util.HashSet<E>": "typing.Set[typing.Any]",
    "Base64": "Base64",
    "boolean[]": "typing.List[bool]",
    "java.util.Map<NameType,Set<String>>": "typing.Dict[NameType, typing.Set[str]]",
    "Md5Crypt": "Md5Crypt",
    "Metaphone": "Metaphone",
    "PhonemeList": "PhonemeList",
    "java.util.EnumMap<RuleType,Map<String,Map<String,List<Rule>>>>": "typing.Dict[RuleType, typing.Dict[str, typing.Dict[str, typing.List[Rule]]]]",
    "EncoderException": "EncoderException",
    "java.util.ArrayList<Class<? extends Checksum>>": "typing.List[typing.Type[typing.Any]]",
    "Sha2Crypt": "Sha2Crypt",
    "java.util.Random": "random.Random",
    "Base32OutputStream": "Base32OutputStream",
    "java.util.NoSuchElementException": "StopIteration",
    "BinaryEncoder": "BinaryEncoder",
    "BCodecTest": "BCodecTest",
    "BenchResult": "BenchResult",
    "Base64OutputStream": "Base64OutputStream",
    "QCodec": "QCodec",
    "java.util.ArrayList<Rule>": "typing.List[Rule]",
    "java.util.Map<String,List<Rule>>": "typing.Dict[str, typing.List[Rule]]",
    "UtilsTest": "UtilsTest",
    "Base32InputStream": "Base32InputStream",
    "java.util.EnumMap<NameType,Set<String>>": "typing.Dict[NameType, typing.Set[str]]",
    "StringEncoderAbstractTest<MatchRatingApproachEncoder>": "StringEncoderAbstractTest[MatchRatingApproachEncoder]",
    "Soundex": "Soundex",
    "StringUtils": "StringUtils",
    "RulesApplication": "RulesApplication",
    "Crypt": "Crypt",
    "MurmurHash3Test": "MurmurHash3Test",
    "TestData[]": "typing.List[TestData]",
    "PureJavaCrc32CTest": "PureJavaCrc32CTest",
    "java.io.FileOutputStream": "typing.Union[io.FileIO, io.BufferedWriter]",
    "java.util.Map<String,String>": "typing.Dict[str, str]",
    "PhoneticEngine": "PhoneticEngine",
    "URLCodecTest": "URLCodecTest",
    "CharSequenceUtilsTest": "CharSequenceUtilsTest",
    "DoubleMetaphoneTest": "DoubleMetaphoneTest",
    "RFC1522CodecTest": "RFC1522CodecTest",
    "PureJavaCrc32C": "PureJavaCrc32C",
    "java.util.concurrent.ThreadLocalRandom": "random.Random",
    "ColognePhonetic": "ColognePhonetic",
    "Base16OutputStreamTest": "Base16OutputStreamTest",
    "PhonemeBuilder": "PhonemeBuilder",
    "java.util.Map<>.Entry<Character,List<Rule>>": "typing.Dict[str, typing.List[Rule]]",
    "MurmurHash2Test": "MurmurHash2Test",
    "XXHash32OverflowTest": "XXHash32OverflowTest",
    "Base64Codec13Test": "Base64Codec13Test",
    "Blake3Test": "Blake3Test",
    "ColognePhoneticTest": "ColognePhoneticTest",
    "CodecPolicy": "CodecPolicy",
    "java.util.TreeMap<String,String>": "typing.Dict[str, str]",
    "java.util.Map<NameType,Languages>": "typing.Dict[NameType, Languages]",
    "StringEncoderAbstractTest<Metaphone>": "StringEncoderAbstractTest[Metaphone]",
    "StringEncoderAbstractTest<Caverphone1>": "StringEncoderAbstractTest[Caverphone1]",
    "StringEncoder": "StringEncoder",
    "RFC1522TestCodec": "RFC1522TestCodec",
    "StringEncoderAbstractTest<StringEncoder>": "StringEncoderAbstractTest[StringEncoder]",
    "Caverphone": "Caverphone",
    "CharEncodingTest": "CharEncodingTest",
    "StringEncoderAbstractTest<DoubleMetaphone>": "StringEncoderAbstractTest[DoubleMetaphone]",
    "Output": "Output",
    "java.util.List<Rule>": "typing.List[Rule]",
    "java.util.List<Branch>": "typing.List[Branch]",
    "StringEncoderComparatorTest": "StringEncoderComparatorTest",
    "Base64OutputStreamTest": "Base64OutputStreamTest",
    "java.io.InputStreamReader": "io.TextIOWrapper",
    "Base32OutputStreamTest": "Base32OutputStreamTest",
    "java.math.BigInteger": "int",
    "StringEncoderComparator": "StringEncoderComparator",
    "Codec105ErrorInputStream": "Codec105ErrorInputStream",
    "java.io.FilterInputStream": "typing.Union[io.BufferedReader, io.RawIOBase]",
    "Caverphone1Test": "Caverphone1Test",
    "Utils": "Utils",
    "java.lang.OutOfMemoryError": "MemoryError",
    "URLCodec": "URLCodec",
    "java.util.Comparator<Rule>": "typing.Callable[[Rule, Rule], int]",
    "java.nio.ByteBuffer": "typing.Union[bytearray, memoryview]",
    "Languages": "Languages",
    "LanguageGuessingTest": "LanguageGuessingTest",
    "double": "float",
    "double[]": "typing.List[float]",
    "SoundexUtils": "SoundexUtils",
    "Blake3TestVectorsTest": "Blake3TestVectorsTest",
    "DoubleMetaphone": "DoubleMetaphone",
    "PerformanceTest": "PerformanceTest",
    "XXHash32": "XXHash32",
    "Base64InputStreamTest": "Base64InputStreamTest",
    "byte": "int",
    "char[]": "typing.List[str]",
    "java.util.Map<Character,List<Rule>>": "typing.Dict[str, typing.List[Rule]]",
    "StringEncoderAbstractTest<RefinedSoundex>": "StringEncoderAbstractTest[RefinedSoundex]",
    "Digest": "Digest",
    "BinaryEncoderAbstractTest": "BinaryEncoderAbstractTest",
    "java.net.URI": "typing.Union[urllib.parse.ParseResult, urllib.parse.SplitResult, urllib.parse.DefragResult, str]",
    "PercentCodecTest": "PercentCodecTest",
    "java.util.Map<NameType,Lang>": "typing.Dict[NameType, Lang]",
    "java.util.HashMap<String,Map<String,List<Rule>>>": "typing.Dict[str, typing.Dict[str, typing.List[Rule]]]",
    "LanguageSet": "LanguageSet",
    "Lang": "Lang",
    "Base32TestData": "Base32TestData",
    "java.util.zip.Checksum": "typing.Any",
    "java.lang.Byte": "int",
    "int[]": "typing.List[int]",
    "java.util.function.Function<Object[],Arguments>": "typing.Callable[[typing.List[typing.Any]], typing.List]",
    "java.lang.Object[]": "typing.List[typing.Any]",
    "java.util.E": "typing.Any",
    "java.util.stream.Stream<CSVRecord>": "typing.Iterable[CSVRecord]",
    "java.util.function.Predicate<Arguments>": "typing.Callable[[typing.List], bool]",
    "java.util.function.Function<CSVRecord,List<String>>": "typing.Callable[[CSVRecord], typing.List[str]]",
    "Predefined": "Predefined",
    "java.lang.Iterable<CSVRecord>": "typing.Iterable[CSVRecord]",
    "java.util.Spliterator<>": "typing.Iterator[typing.Any]",
    "java.nio.file.Paths": "pathlib.Path",
    "java.util.stream.Stream<String>": "typing.Iterable[str]",
    "JiraCsv203Test": "JiraCsv203Test",
    "java.io.PipedReader": "typing.Union[io.StringIO, multiprocessing.Queue, multiprocessing.Pipe]",
    "IOUtils": "IOUtils",
    "java.io.FileReader": "io.TextIOWrapper",
    "JiraCsv148Test": "JiraCsv148Test",
    "JiraCsv263Test": "JiraCsv263Test",
    "Stats": "Stats",
    "JiraCsv288Test": "JiraCsv288Test",
    "CSVRecord": "CSVRecord",
    "java.io.ObjectOutputStream": "pickle.Pickler",
    "java.util.stream.Stream<Arguments>": "typing.Iterable[typing.List]",
    "JiraCsv93Test": "JiraCsv93Test",
    "java.util.function.IntFunction<String>": "typing.Callable[[int], str]",
    "java.util.function.BiConsumer<String,Integer>": "typing.Callable[[str, int], None]",
    "java.util.stream.Stream<>": "typing.Iterable[typing.Any]",
    "CSVPrinter": "CSVPrinter",
    "java.util.stream.Stream<File>": "typing.Iterable[pathlib.Path]",
    "java.nio.file.Path": "pathlib.Path",
    "JiraCsv271Test": "JiraCsv271Test",
    "CSVPrinterTest": "CSVPrinterTest",
    "java.util.Iterator<CSVRecord>": "typing.Iterator[CSVRecord]",
    "java.io.FilenameFilter": "os.DirEntry",
    "EmptyEnum": "EmptyEnum",
    "java.util.LinkedHashMap<K,V>": "typing.OrderedDict[typing.Any, typing.Any]",
    "java.nio.CharBuffer": "typing.Union[str, typing.List[str], io.StringIO]",
    "java.util.ArrayList<CSVRecord>": "typing.List[CSVRecord]",
    "CSVParserFactory": "CSVParserFactory",
    "java.io.ObjectInputStream": "pickle.Unpickler",
    "java.io.Flushable": "io.BufferedIOBase",
    "java.lang.ClassLoader": "typing.Any",
    "CSVFormatTest": "CSVFormatTest",
    "java.util.stream.Stream<?>": "typing.Iterable[typing.Any]",
    "java.util.zip.GZIPInputStream": "gzip.GzipFile",
    "Token": "Token",
    "CSVParser": "CSVParser",
    "Assertions": "Assertions",
    "java.util.List<List<String>>": "typing.List[typing.List[str]]",
    "CSVParserTest": "CSVParserTest",
    "java.util.function.Consumer<CSVRecord>": "typing.Callable[[CSVRecord], None]",
    "Header": "Header",
    "java.util.function.Function<Arguments,Stream<? extends Arguments>>": "typing.Callable[[typing.List], typing.Iterable[typing.List]]",
    "CSVRecordIterator": "CSVRecordIterator",
    "java.io.PipedWriter": "typing.Union[io.StringIO, multiprocessing.Queue, multiprocessing.Pipe]",
    "IOUtilsTest": "IOUtilsTest",
    "java.util.Spliterators": "typing.Iterator",
    "java.lang.Iterable<>": "typing.Iterable[typing.Any]",
    "java.util.LinkedHashMap<String,Integer>": "typing.OrderedDict[str, int]",
    "java.util.Map<String,Integer>": "typing.Dict[str, int]",
    "java.util.TreeMap<String,Integer>": "typing.Dict[str, int]",
    "Arguments": "typing.List",
    "java.lang.reflect.Method": "typing.Union[inspect.Signature, typing.Callable]",
    "ExtendedBufferedReaderTest": "ExtendedBufferedReaderTest",
    "java.io.Writer": "typing.Union[io.TextIOWrapper, io.BufferedWriter, io.TextIOBase]",
    "java.lang.Iterable<?>": "typing.Iterable[typing.Any]",
    "JiraCsv253Test": "JiraCsv253Test",
    "Type": "Type",
    "CSVFormatPredefinedTest": "CSVFormatPredefinedTest",
    "Lexer": "Lexer",
    "JiraCsv248Test": "JiraCsv248Test",
    "java.io.Reader": "typing.Union[io.TextIOWrapper, io.BufferedReader, io.TextIOBase]",
    "CSVFormat": "CSVFormat",
    "java.lang.Class<Lexer>": "typing.Type[Lexer]",
    "CSVFileParserTest": "CSVFileParserTest",
    "java.util.List<CSVRecord>": "typing.List[CSVRecord]",
    "Constants": "Constants",
    "JiraCsv249Test": "JiraCsv249Test",
    "java.lang.reflect.Modifier": "typing.Any",
    "Headers": "Headers",
    "java.nio.file.Files": "typing.Union[os.PathLike, os.DirEntry]",
    "java.util.stream.Stream<? extends Arguments>": "typing.Iterable[typing.List]",
    "ExtendedBufferedReader": "ExtendedBufferedReader",
    "M": "typing.Any",
    "java.util.ArrayList<List<String>>": "typing.List[typing.List[str]]",
    "java.io.OutputStreamWriter": "io.TextIOWrapper",
    "QuoteMode": "QuoteMode",
    "java.util.stream.StreamSupport": "typing.Any",
    "java.util.function.Consumer<?>": "typing.Callable[[typing.Any], None]",
    "LexerTest": "LexerTest",
    "java.util.stream.Collectors": "typing.Any",
    "java.nio.Buffer": "typing.Union[bytearray, array.array, memoryview]",
    "T[]": "typing.List[typing.Any]",
    "java.io.Closeable": "io.IOBase",
    "java.io.UncheckedIOException": "typing.Union[IOError, OSError]",
    "Executable": "typing.Callable",
    "JiraCsv290Test": "JiraCsv290Test",
    "java.lang.reflect.Constructor<Lexer>": "typing.Callable[..., Lexer]",
    "CSVDuplicateHeaderTest": "CSVDuplicateHeaderTest",
    "java.lang.Enum<?>": "enum.Enum",
    "Enum<?>": "enum.Enum",
    "DuplicateHeaderMode": "DuplicateHeaderMode",
    "java.text.ParsePosition": "collections.namedtuple",
    "Form": "Form",
    "IBANValidator": "IBANValidator",
    "CurrencyValidatorTest": "CurrencyValidatorTest",
    "CurrencyValidator": "CurrencyValidator",
    "java.util.concurrent.ConcurrentHashMap<String,Validator>": "typing.Dict[str, Validator]",
    "java.net.HttpURLConnection": "http.client.HTTPConnection",
    "ISSNValidator": "ISSNValidator",
    "java.util.HashMap<String,String[]>": "typing.Dict[str, typing.List[str]]",
    "java.util.TimeZone": "typing.Union[zoneinfo.ZoneInfo, datetime.timezone]",
    "IBANCheckDigit": "IBANCheckDigit",
    "Item": "Item",
    "java.text.DateFormatSymbols": "calendar.TextCalendar",
    "DomainValidatorTest": "DomainValidatorTest",
    "java.util.Map<String,ResultStatus>": "typing.Dict[str, ResultStatus]",
    "ResultPair[]": "typing.List[ResultPair]",
    "java.util.Map<String,Arg>[]": "typing.List[typing.Dict[str, Arg]]",
    "java.util.Iterator<Entry<String,String>>": "typing.Iterator[typing.Tuple[str, str]]",
    "Validator": "Validator",
    "ValidatorResults": "ValidatorResults",
    "SedolCheckDigitTest": "SedolCheckDigitTest",
    "EAN13CheckDigit": "EAN13CheckDigit",
    "CreditCardValidatorTest": "CreditCardValidatorTest",
    "TypeBean": "TypeBean",
    "Mastercard": "Mastercard",
    "CUSIPCheckDigit": "CUSIPCheckDigit",
    "TimeValidator": "TimeValidator",
    "java.util.Map<>.Entry<String,String>": "typing.Dict[str, str]",
    "PercentValidator": "PercentValidator",
    "ShortValidator": "ShortValidator",
    "AbstractFormatValidator": "AbstractFormatValidator",
    "AbstractNumberValidator": "AbstractNumberValidator",
    "java.util.Iterator<Field>": "typing.Iterator[Field]",
    "ModulusTenABACheckDigitTest": "ModulusTenABACheckDigitTest",
    "ArrayType": "ArrayType",
    "VerhoeffCheckDigitTest": "VerhoeffCheckDigitTest",
    "AbstractCheckDigitTest": "AbstractCheckDigitTest",
    "UrlTest": "UrlTest",
    "FloatValidatorTest": "FloatValidatorTest",
    "UrlValidator": "UrlValidator",
    "ModulusTenCUSIPCheckDigitTest": "ModulusTenCUSIPCheckDigitTest",
    "FieldTest": "FieldTest",
    "ISBNCheckDigit": "ISBNCheckDigit",
    "java.util.Iterator<Entry<String,Object>>": "typing.Iterator[typing.Tuple[str, typing.Any]]",
    "FloatValidator": "FloatValidator",
    "java.text.DecimalFormat": "typing.Any",
    "Arg": "Arg",
    "java.util.HashMap<String,ResultStatus>": "typing.Dict[str, ResultStatus]",
    "VerhoeffCheckDigit": "VerhoeffCheckDigit",
    "float": "float",
    "CodeValidatorTest": "CodeValidatorTest",
    "java.util.HashMap<String,Object>": "typing.Dict[str, typing.Any]",
    "java.util.TreeMap<String,String[]>": "typing.Dict[str, typing.List[str]]",
    "java.util.Map<String,String[]>": "typing.Dict[str, typing.List[str]]",
    "ISINValidatorTest": "ISINValidatorTest",
    "EmailValidator": "EmailValidator",
    "IntegerValidatorTest": "IntegerValidatorTest",
    "ModulusTenLuhnCheckDigitTest": "ModulusTenLuhnCheckDigitTest",
    "Validator[]": "typing.List[Validator]",
    "java.util.Map<String,ValidatorResult>": "typing.Dict[str, ValidatorResult]",
    "ByteValidator": "ByteValidator",
    "java.util.HashMap<String,Form>": "typing.Dict[str, Form]",
    "ResultPair": "ResultPair",
    "ValidatorResources": "ValidatorResources",
    "TimeValidatorTest": "TimeValidatorTest",
    "InetAddressValidatorTest": "InetAddressValidatorTest",
    "DinersClub": "DinersClub",
    "IBANValidatorTest": "IBANValidatorTest",
    "CustomValidatorResourcesTest": "CustomValidatorResourcesTest",
    "ModulusTenEAN13CheckDigitTest": "ModulusTenEAN13CheckDigitTest",
    "ValidatorResult": "ValidatorResult",
    "CheckDigit": "CheckDigit",
    "ModulusTenSedolCheckDigitTest": "ModulusTenSedolCheckDigitTest",
    "DoubleValidator": "DoubleValidator",
    "BigDecimalValidator": "BigDecimalValidator",
    "Amex": "Amex",
    "java.util.StringTokenizer": "str",
    "java.util.ArrayList<Item>": "typing.List[Item]",
    "BigDecimalValidatorTest": "BigDecimalValidatorTest",
    "ClassLoaderPerTestRunner": "typing.Any",
    "SedolCheckDigit": "SedolCheckDigit",
    "ISSNCheckDigit": "ISSNCheckDigit",
    "ValidatorException": "ValidatorException",
    "CheckDigitException": "CheckDigitException",
    "BigIntegerValidator": "BigIntegerValidator",
    "DomainValidatorStartupTest": "DomainValidatorStartupTest",
    "AbstractCalendarValidator": "AbstractCalendarValidator",
    "java.util.ArrayList<CreditCardType>": "typing.List[CreditCardType]",
    "CreditCardType": "CreditCardType",
    "LuhnCheckDigit": "LuhnCheckDigit",
    "java.lang.Number[]": "typing.List[typing.Union[int, float, numbers.Number]]",
    "RegexValidator": "RegexValidator",
    "java.text.NumberFormat": "typing.Any",
    "java.text.ParseException": "typing.Union[ValueError, SyntaxError]",
    "java.lang.NoSuchMethodException": "typing.Union[AttributeError, TypeError]",
    "ISBN10CheckDigit": "ISBN10CheckDigit",
    "ByteValidatorTest": "ByteValidatorTest",
    "Field": "Field",
    "CalendarValidator": "CalendarValidator",
    "java.text.SimpleDateFormat": "datetime.datetime",
    "java.util.List<CodeValidator>": "typing.List[CodeValidator]",
    "Visa": "Visa",
    "java.lang.InstantiationException": "typing.Union[TypeError, AttributeError, RuntimeError]",
    "java.util.ArrayList<CodeValidator>": "typing.List[CodeValidator]",
    "java.util.Entry<String,Object>": "typing.Tuple[str, typing.Any]",
    "ISBNValidator": "ISBNValidator",
    "FormSet": "FormSet",
    "ABANumberCheckDigit": "ABANumberCheckDigit",
    "java.text.Format": "typing.Union[str, datetime.datetime]",
    "ISINValidator": "ISINValidator",
    "java.lang.reflect.Field": "typing.Any",
    "Msg": "Msg",
    "java.text.DecimalFormatSymbols": "typing.Union[decimal.Decimal, str]",
    "LuhnCheckDigitTest": "LuhnCheckDigitTest",
    "ValidatorAction": "ValidatorAction",
    "ISINCheckDigit": "ISINCheckDigit",
    "java.util.Date[]": "typing.List[typing.Union[datetime.date, datetime.datetime]]",
    "TestCase": "unittest.TestCase",
    "InetAddressValidator": "InetAddressValidator",
    "ValidatorUtils": "ValidatorUtils",
    "java.util.regex.Pattern[]": "typing.List[re.Pattern]",
    "CreditCardValidator": "CreditCardValidator",
    "java.net.IDN": "typing.Any",
    "CUSIPCheckDigitTest": "CUSIPCheckDigitTest",
    "ISINCheckDigitTest": "ISINCheckDigitTest",
    "ModulusTenCheckDigit": "ModulusTenCheckDigit",
    "Discover": "Discover",
    "java.text.DateFormat": "datetime.datetime",
    "NameBean": "NameBean",
    "GenericValidatorTest": "GenericValidatorTest",
    "AbstractCalendarValidatorTest": "AbstractCalendarValidatorTest",
    "ISBNValidatorTest": "ISBNValidatorTest",
    "LongValidator": "LongValidator",
    "java.util.Collection<CreditCardType>": "typing.Collection[CreditCardType]",
    "ResultStatus": "ResultStatus",
    "java.lang.Class<?>[]": "typing.List[typing.Type[typing.Any]]",
    "CreditCardRange[]": "typing.List[CreditCardRange]",
    "java.math.BigDecimal": "decimal.Decimal",
    "BigDecimal": "decimal.Decimal",
    "ISSNValidatorTest": "ISSNValidatorTest",
    "GenericValidator": "GenericValidator",
    "UrlValidatorTest": "UrlValidatorTest",
    "java.util.Map<String,Form>": "typing.Dict[str, Form]",
    "EmailValidatorTest": "EmailValidatorTest",
    "java.util.List<Item>": "typing.List[Item]",
    "ABANumberCheckDigitTest": "ABANumberCheckDigitTest",
    "DateValidatorTest": "DateValidatorTest",
    "PercentValidatorTest": "PercentValidatorTest",
    "java.util.Map<String,Object>": "typing.Dict[str, typing.Any]",
    "EAN13CheckDigitTest": "EAN13CheckDigitTest",
    "ModulusCheckDigit": "ModulusCheckDigit",
    "ShortValidatorTest": "ShortValidatorTest",
    "IBANCheckDigitTest": "IBANCheckDigitTest",
    "java.util.HashMap<String,Arg>": "typing.Dict[str, Arg]",
    "Flags": "Flags",
    "java.util.ArrayList<Field>": "typing.List[Field]",
    "CreditCardRange": "CreditCardRange",
    "ISSNCheckDigitTest": "ISSNCheckDigitTest",
    "java.util.Iterator<Arg>": "typing.Iterator[Arg]",
    "java.util.Map<String,? super Object>": "typing.Dict[str, typing.Any]",
    "AbstractNumberValidatorTest": "AbstractNumberValidatorTest",
    "java.util.List<Field>": "typing.List[Field]",
    "java.util.regex.PatternSyntaxException": "re.error",
    "RegexValidatorTest": "RegexValidatorTest",
    "Log": "logging.Logger",
    "IDNBUGHOLDER": "IDNBUGHOLDER",
    "LazyHolder": "LazyHolder",
    "ParameterValidatorImpl": "ParameterValidatorImpl",
    "LogFactory": "logging.Logger",
    "IntegerValidator": "IntegerValidator",
    "BigIntegerValidatorTest": "BigIntegerValidatorTest",
    "java.util.Map<String,Arg>": "typing.Dict[str, Arg]",
    "ValueBean": "ValueBean",
    "LongValidatorTest": "LongValidatorTest",
    "DateValidator": "DateValidator",
    "DomainValidator": "DomainValidator",
    "ISBN10CheckDigitTest": "ISBN10CheckDigitTest",
    "GenericTypeValidator": "GenericTypeValidator",
    "DoubleValidatorTest": "DoubleValidatorTest",
    "java.util.Map<String,Validator>": "typing.Dict[str, Validator]",
    "FlagsTest": "FlagsTest",
    "java.util.HashMap<String,String>": "typing.Dict[str, str]",
    "Var": "Var",
    "CalendarValidatorTest": "CalendarValidatorTest",
    "java.util.HashMap<String,ValidatorResult>": "typing.Dict[str, ValidatorResult]",
    "CodeValidator": "CodeValidator",
    "CodeValidator[]": "typing.List[CodeValidator]",
    "java.lang.IllegalAccessException": "AttributeError",
    "ISBNCheckDigitTest": "ISBNCheckDigitTest",
    "Arg[]": "typing.List[Arg]",
    "MultipartStreamTest": "MultipartStreamTest",
    "ItemInputStream": "ItemInputStream",
    "DefaultFileItemFactory": "DefaultFileItemFactory",
    "IOFileUploadException": "IOFileUploadException",
    "FileItemIteratorImpl": "FileItemIteratorImpl",
    "MyServletInputStream": "MyServletInputStream",
    "FileItemHeaders": "FileItemHeaders",
    "FileUploadBase": "FileUploadBase",
    "MalformedStreamException": "MalformedStreamException",
    "FileUpload": "FileUpload",
    "DefaultFileItem": "DefaultFileItem",
    "Streams": "Streams",
    "SizeException": "SizeException",
    "ItemSkippedException": "ItemSkippedException",
    "Closeable": "Closeable",
    "FileItemStreamImpl": "FileItemStreamImpl",
    "java.util.Map<String,List<String>>": "typing.Dict[str, typing.List[str]]",
    "ProgressListener": "ProgressListener",
    "ServletRequestContext": "ServletRequestContext",
    "FileItem": "FileItem",
    "java.util.Enumeration<>": "typing.Union[typing.Iterator[typing.Any], typing.Generator[typing.Any, typing.Any, typing.Any]]",
    "FileUploadException": "FileUploadException",
    "QuotedPrintableDecoder": "QuotedPrintableDecoder",
    "java.util.Hashtable<String,Object>": "typing.Dict[str, typing.Any]",
    "MimeUtilityTestCase": "MimeUtilityTestCase",
    "Base64Decoder": "Base64Decoder",
    "ProgressListenerImpl": "ProgressListenerImpl",
    "DiskFileItemSerializeTest": "DiskFileItemSerializeTest",
    "RequestContext": "RequestContext",
    "FileUploadIOException": "FileUploadIOException",
    "MockPortletActionRequest": "MockPortletActionRequest",
    "ProgressListenerTest": "ProgressListenerTest",
    "java.util.concurrent.atomic.AtomicInteger": "int",
    "ParameterParserTest": "ParameterParserTest",
    "FileItemStream": "FileItemStream",
    "FileItemHeadersImpl": "FileItemHeadersImpl",
    "QuotedPrintableDecoderTestCase": "QuotedPrintableDecoderTestCase",
    "ParameterParser": "ParameterParser",
    "MultipartStream": "MultipartStream",
    "DiskFileItem": "DiskFileItem",
    "UploadContext": "UploadContext",
    "FileItemIterator": "FileItemIterator",
    "java.util.UUID": "uuid.UUID",
    "ProgressNotifier": "ProgressNotifier",
    "PortletFileUpload": "PortletFileUpload",
    "MimeUtility": "MimeUtility",
    "IllegalBoundaryException": "IllegalBoundaryException",
    "LimitedInputStream": "LimitedInputStream",
    "UnknownSizeException": "UnknownSizeException",
    "FileItemFactory": "FileItemFactory",
    "DiskFileItemFactory": "DiskFileItemFactory",
    "InvalidContentTypeException": "InvalidContentTypeException",
    "FileItemHeadersTest": "FileItemHeadersTest",
    "java.util.Enumeration<String>": "typing.Union[typing.Iterator[typing.Any], typing.Generator[str, typing.Any, typing.Any]]",
    "MockHttpServletRequest": "MockHttpServletRequest",
    "SizeLimitExceededException": "SizeLimitExceededException",
    "FileItemHeadersSupport": "FileItemHeadersSupport",
    "FileCountLimitExceededException": "FileCountLimitExceededException",
    "FileSizeLimitExceededException": "FileSizeLimitExceededException",
    "java.util.Enumeration<Locale>": "typing.Union[typing.Iterator[typing.Any], typing.Generator[typing.Any, typing.Any, typing.Any]]",
    "InvalidFileNameException": "InvalidFileNameException",
    "java.util.LinkedHashMap<String,List<String>>": "typing.OrderedDict[str, typing.List[str]]",
    "DefaultFileItemTest": "DefaultFileItemTest",
    "Base64DecoderTestCase": "Base64DecoderTestCase",
    "DefaultPooledObject<Object>": "DefaultPooledObject[typing.Any]",
    "EvictionConfig": "EvictionConfig",
    "BaseObjectPool": "BaseObjectPool",
    "TestKeyedObjectPool": "TestKeyedObjectPool",
    "java.util.HashMap<K,TimerTask>": "typing.Dict[typing.Any, typing.Union[sched.scheduler, threading.Timer]]",
    "java.util.Collection<>": "typing.Collection[typing.Any]",
    "SynchronizedKeyedObjectPool": "SynchronizedKeyedObjectPool",
    "BaseObjectPoolConfig": "BaseObjectPoolConfig",
    "FailingKeyedPooledObjectFactory": "FailingKeyedPooledObjectFactory",
    "ErodingFactor": "ErodingFactor",
    "ObjectPool<>": "ObjectPool[typing.Any]",
    "java.util.TimerTask": "typing.Union[sched.scheduler, threading.Timer]",
    "java.lang.ref.WeakReference<>": "weakref.ref",
    "CallStack": "CallStack",
    "Waiter": "Waiter",
    "EvictionIterator": "EvictionIterator",
    "PooledObject<V>": "PooledObject[typing.Any]",
    "MethodCall": "MethodCall",
    "java.util.concurrent.locks.ReentrantReadWriteLock": "threading.RLock",
    "PooledObjectFactory<T>": "PooledObjectFactory[typing.Any]",
    "UsageTracking<T>": "UsageTracking[typing.Any]",
    "FactoryDE": "FactoryDE",
    "BasePooledObjectFactory<B>": "BasePooledObjectFactory[typing.Any]",
    "java.lang.ThreadDeath": "SystemExit",
    "java.lang.reflect.InvocationTargetException": "Exception",
    "KeyedObjectPool<>": "KeyedObjectPool[typing.Any]",
    "BasePooledObjectFactory<String>": "BasePooledObjectFactory[str]",
    "TestObjectPool": "TestObjectPool",
    "TestBaseKeyedPoolableObjectFactory": "TestBaseKeyedPoolableObjectFactory",
    "E": "typing.Any",
    "java.util.HashMap<WeakReference<Runnable>,WeakRunner>": "typing.Dict[weakref.ref, weakRunner]",
    "VisitTracker<K>": "VisitTracker[typing.Any]",
    "KeyedObjectPool": "KeyedObjectPool",
    "PooledObject<Foo>": "PooledObject[Foo]",
    "java.lang.reflect.ParameterizedType": "typing.Generic[typing.TypeVar('T')]",
    "SleepingObjectFactory": "SleepingObjectFactory",
    "ProxySource<T>": "ProxySource[typing.Any]",
    "LinkedBlockingDeque": "LinkedBlockingDeque",
    "KeyedObjectPoolMinIdleTimerTask<K,V>": "KeyedObjectPoolMinIdleTimerTask[typing.Any, typing.Any]",
    "SynchronizedKeyedPooledObjectFactory<K,V>": "SynchronizedKeyedPooledObjectFactory[typing.Any, typing.Any]",
    "java.util.HashMap<K,Integer>": "typing.Dict[typing.Any, int]",
    "PooledSoftReference<String>": "PooledSoftReference[str]",
    "D": "typing.Any",
    "java.util.Collection<Integer>": "typing.Collection[int]",
    "GenericKeyedObjectPoolMXBean": "GenericKeyedObjectPoolMXBean",
    "TestConstants": "TestConstants",
    "TestPoolImplUtils": "TestPoolImplUtils",
    "AbandonedConfig": "AbandonedConfig",
    "NotSimpleFactory": "NotSimpleFactory",
    "GenericObjectPoolConfig": "GenericObjectPoolConfig",
    "ErodingPerKeyKeyedObjectPool<K,V>": "ErodingPerKeyKeyedObjectPool[typing.Any, typing.Any]",
    "BaseGenericObjectPool<?>": "BaseGenericObjectPool[typing.Any]",
    "EvictionTimer": "EvictionTimer",
    "PooledObjectFactory": "PooledObjectFactory",
    "SynchronizedKeyedObjectPool<K,V>": "SynchronizedKeyedObjectPool[typing.Any, typing.Any]",
    "StatsStore": "StatsStore",
    "PooledObjectFactory<Object>": "PooledObjectFactory[typing.Any]",
    "java.lang.Comparable<PooledObject>": "typing.Generic[typing.TypeVar('T', bound=PooledObject)]",
    "JdkProxyHandler<T>": "JdkProxyHandler[typing.Any]",
    "java.util.HashMap<K,V>": "typing.Dict[typing.Any, typing.Any]",
    "UsageTracking<>": "UsageTracking[typing.Any]",
    "DefaultPooledObject": "DefaultPooledObject",
    "java.lang.ref.SoftReference<T>": "weakref.ref",
    "V": "typing.Any",
    "AssertionFailedError": "AssertionError",
    "InterruptibleReentrantLock": "InterruptibleReentrantLock",
    "java.util.Set<DefaultPooledObjectInfo>": "typing.Set[DefaultPooledObjectInfo]",
    "ProxiedKeyedObjectPool": "ProxiedKeyedObjectPool",
    "DefaultPooledObjectInfoMBean": "DefaultPooledObjectInfoMBean",
    "java.util.function.Predicate<MethodCall>": "typing.Callable[[MethodCall], bool]",
    "GenericKeyedObjectPoolConfig<>": "GenericKeyedObjectPoolConfig[typing.Any]",
    "K": "typing.Any",
    "IdentityWrapper<>": "IdentityWrapper",
    "Foo": "Foo",
    "ObjectPool<String>": "ObjectPool[str]",
    "PooledObjectFactory<>": "PooledObjectFactory[typing.Any]",
    "VisitTracker": "VisitTracker",
    "SynchronizedPooledObjectFactory": "SynchronizedPooledObjectFactory",
    "GenericObjectPoolMXBean": "GenericObjectPoolMXBean",
    "PooledObject<Long>": "PooledObject[int]",
    "java.lang.SecurityManager": "typing.Any",
    "KeyedObjectPool<K,V>": "KeyedObjectPool[typing.Any, typing.Any]",
    "java.lang.reflect.Type": "typing.Type",
    "PrivateException": "PrivateException",
    "java.util.concurrent.atomic.AtomicLong[]": "typing.List[int]",
    "DefaultPooledObjectInfo": "DefaultPooledObjectInfo",
    "java.lang.InternalError": "typing.Union[RuntimeError, SystemError]",
    "BaseObjectPoolConfig<T>": "BaseObjectPoolConfig[typing.Any]",
    "KeyedObjectPool<String,TestObject>": "KeyedObjectPool[str, TestObject]",
    "ObjectPool": "ObjectPool",
    "FactoryF<Integer>": "FactoryF[int]",
    "DefaultTrackedUse": "DefaultTrackedUse",
    "FactoryAB": "FactoryAB",
    "DestroyMode": "DestroyMode",
    "MethodCallPoolableObjectFactory": "MethodCallPoolableObjectFactory",
    "PooledObject<?>": "PooledObject[typing.Any]",
    "ErodingObjectPool": "ErodingObjectPool",
    "AbstractItr": "AbstractItr",
    "GenericKeyedObjectPoolConfig": "GenericKeyedObjectPoolConfig",
    "A": "typing.Any",
    "BaseProxyHandler": "BaseProxyHandler",
    "java.util.Timer": "threading.Timer",
    "ErodingKeyedObjectPool<>": "ErodingKeyedObjectPool[typing.Any]",
    "SynchronizedPooledObjectFactory<T>": "SynchronizedPooledObjectFactory[typing.Any]",
    "java.util.List<MethodCall>": "typing.List[MethodCall]",
    "PoolUtils": "PoolUtils",
    "BaseGenericObjectPool": "BaseGenericObjectPool",
    "TestObject": "TestObject",
    "FactoryAB<B,A>": "FactoryAB[typing.Any, typing.Any]",
    "Node": "Node",
    "java.lang.reflect.Proxy": "typing.Any",
    "EvictionPolicy": "EvictionPolicy",
    "PooledSoftReference": "PooledSoftReference",
    "java.util.concurrent.atomic.AtomicBoolean": "bool",
    "java.util.Deque<PooledObject>": "typing.Deque[PooledObject]",
    "java.time.Instant": "datetime.datetime",
    "WeakRunner": "WeakRunner",
    "NoOpCallStack": "NoOpCallStack",
    "BaseObject": "BaseObject",
    "ObjectPoolMinIdleTimerTask": "ObjectPoolMinIdleTimerTask",
    "ProxySource<V>": "ProxySource[typing.Any]",
    "CglibProxySource": "CglibProxySource",
    "NoOpCallStackTest": "NoOpCallStackTest",
    "EvictionPolicy<T>": "EvictionPolicy[typing.Any]",
    "java.lang.reflect.TypeVariable<>": "typing.TypeVar('T', bound=typing.Any)",
    "java.util.concurrent.ExecutorService": "concurrent.futures.Executor",
    "java.lang.reflect.InvocationHandler": "typing.Callable",
    "CallStackTest": "CallStackTest",
    "TestGenericObjectPoolClassLoaders": "TestGenericObjectPoolClassLoaders",
    "DefaultPooledObject<T>": "DefaultPooledObject[typing.Any]",
    "IdentityWrapper<T>": "IdentityWrapper[typing.Any]",
    "java.util.stream.Stream<WeakReference<Class<?>>>": "typing.Iterable[weakref.ref]",
    "java.util.Map<String,List<DefaultPooledObjectInfo>>": "typing.Dict[str, typing.List[DefaultPooledObjectInfo]]",
    "KeyedPooledObjectFactory<K,V>": "KeyedPooledObjectFactory[typing.Any, typing.Any]",
    "EvictionPolicy<>": "EvictionPolicy[typing.Any]",
    "PooledObject<Object>": "PooledObject[typing.Any]",
    "PooledObject<Integer>": "PooledObject[int]",
    "java.util.Deque<E>": "typing.Deque[typing.Any]",
    "ObjectPool<Object>": "ObjectPool[object]",
    "FactoryC": "FactoryC",
    "LinkedBlockingDeque<Object>": "LinkedBlockingDeque[typing.Any]",
    "java.lang.Runnable": "typing.Callable",
    "java.util.concurrent.Executors": "concurrent.futures.Executor",
    "java.util.ArrayList<Integer>": "typing.List[int]",
    "KeyedPooledObjectFactory<Object,Object>": "KeyedPooledObjectFactory[typing.Any, typing.Any]",
    "SynchronizedKeyedPooledObjectFactory": "SynchronizedKeyedPooledObjectFactory",
    "TimerHolder": "TimerHolder",
    "Snapshot": "Snapshot",
    "java.util.concurrent.locks.ReadLock": "typing.Union[threading.RLock, threading.Lock]",
    "ProxiedObjectPool": "ProxiedObjectPool",
    "java.util.Collection<K>": "typing.Collection[typing.Any]",
    "PoolImplUtils": "PoolImplUtils",
    "java.util.Map<K,TimerTask>": "typing.Dict[typing.Any, typing.Union[sched.scheduler, threading.Timer]]",
    "ThrowableCallStack": "ThrowableCallStack",
    "java.lang.ref.WeakReference<Class<?>>": "weakref.ref",
    "java.time.Duration": "datetime.timedelta",
    "UsageTracking<V>": "UsageTracking[typing.Any]",
    "TestSynchronizedPooledObjectFactory": "TestSynchronizedPooledObjectFactory",
    "java.util.concurrent.locks.Condition": "threading.Condition",
    "ProxySource": "ProxySource",
    "java.util.function.Consumer<PooledObject<T>>": "typing.Callable[[PooledObject[typing.Any]], None]",
    "PooledObject<String>": "PooledObject[str]",
    "java.util.List<DefaultPooledObjectInfo>": "typing.List[DefaultPooledObjectInfo]",
    "TestBaseObjectPool": "TestBaseObjectPool",
    "DefaultEvictionPolicy": "DefaultEvictionPolicy",
    "PoolTest": "PoolTest",
    "ObjectPool<TestObject>": "typing.List[TestObject]",
    "java.util.concurrent.atomic.AtomicReference<Duration>": "typing.Generic[typing.TypeVar('T', bound=datetime.timedelta)]",
    "TestDefaultPooledObject": "TestDefaultPooledObject",
    "CallStackUtils": "CallStackUtils",
    "PooledObject<T>": "PooledObject[typing.Any]",
    "java.lang.ref.SoftReference<String>": "weakref.ref",
    "F": "typing.Any",
    "java.util.concurrent.Future<?>": "concurrent.futures.Future[typing.Any]",
    "PrivateSecurityManager": "PrivateSecurityManager",
    "DescendingItr": "DescendingItr",
    "BaseKeyedPooledObjectFactory": "BaseKeyedPooledObjectFactory",
    "java.util.Iterator<K>": "typing.Iterator[typing.Any]",
    "KeyedObjectPool<String,Object>": "KeyedObjectPool[str, object]",
    "java.util.List<WeakReference<Class<?>>>": "typing.List[weakref.ref]",
    "LinkedBlockingDeque<Integer>": "LinkedBlockingDeque[int]",
    "java.util.Map<IdentityWrapper<T>,PooledObject<T>>": "typing.Dict[IdentityWrapper[typing.Any], PooledObject[typing.Any]]",
    "Itr": "Itr",
    "java.net.URLClassLoader": "typing.Any",
    "ErodingObjectPool<T>": "ErodingObjectPool[typing.Any]",
    "java.util.Iterator<PooledObject<T>>": "typing.Iterator[PooledObject[typing.Any]]",
    "BaseObjectPoolConfig<>": "BaseObjectPoolConfig[typing.Any]",
    "java.util.Iterator<Integer>": "typing.Iterator[int]",
    "FactoryF": "FactoryF",
    "SwallowedExceptionListener": "SwallowedExceptionListener",
    "java.util.concurrent.ScheduledFuture<?>": "concurrent.futures.Future[typing.Any]",
    "CustomClassLoader": "CustomClassLoader",
    "ProxySource<TestObject>": "ProxySource[TestObject]",
    "BaseTestProxiedObjectPool": "BaseTestProxiedObjectPool",
    "DefaultEvictionPolicy<>": "DefaultEvictionPolicy[typing.Any]",
    "ErodingKeyedObjectPool<K,V>": "ErodingKeyedObjectPool[typing.Any, typing.Any]",
    "Evictor": "Evictor",
    "Evictor<>": "Evictor[typing.Any]",
    "C": "typing.Any",
    "TestLinkedBlockingDeque": "TestLinkedBlockingDeque",
    "java.util.Entry<WeakReference<Runnable>,WeakRunner>": "typing.Tuple[weakref.ref, WeakRunner]",
    "ErodingPerKeyKeyedObjectPool": "ErodingPerKeyKeyedObjectPool",
    "java.lang.ref.WeakReference<Runnable>": "weakref.ref",
    "FactoryDE<Long,F>": "FactoryDE[int, typing.Any]",
    "PooledObject<VisitTracker<K>>": "PooledObject[VisitTracker[typing.Any]]",
    "PooledObject": "PooledObject",
    "KeyedObjectPool<Object,Object>": "KeyedObjectPool[object, typing.Any]",
    "java.util.List<AtomicLong>": "typing.List[int]",
    "java.lang.reflect.Array": "typing.Union[array.array, typing.List]",
    "java.util.ArrayList<MethodCall>": "typing.List[MethodCall]",
    "java.util.AbstractQueue<E>": "collections.abc.Queue[typing.Any]",
    "TestPoolUtils": "TestPoolUtils",
    "java.util.Map<K,Integer>": "typing.Dict[typing.Any, int]",
    "PooledObject<Waiter>": "PooledObject[Waiter]",
    "FactoryC<D>": "FactoryC[typing.Any]",
    "FactoryBA<C,String>": "FactoryBA[typing.Any, str]",
    "Reaper": "Reaper",
    "PooledFooFactory": "PooledFooFactory",
    "TestObjectImpl": "TestObjectImpl",
    "java.util.Iterator<E>": "typing.Iterator[typing.Any]",
    "java.lang.Class<? extends PooledObjectFactory<>>": "typing.Type[PooledObjectFactory[typing.Any]]",
    "java.util.Collection<? super E>": "typing.Collection[typing.Any]",
    "java.util.concurrent.atomic.AtomicLong": "int",
    "VisitTrackerFactory": "VisitTrackerFactory",
    "TestEvictionConfig": "TestEvictionConfig",
    "java.lang.Class<? extends T>": "typing.Type[typing.Any]",
    "WaiterFactory<>": "WaiterFactory[typing.Any]",
    "PooledObjectState": "PooledObjectState",
    "java.util.function.Function<Class<?>,WeakReference<Class<?>>>": "typing.Callable[[typing.Type[typing.Any]], weakref.ref]",
    "java.util.Deque<PooledObject<T>>": "typing.Deque[PooledObject[typing.Any]]",
    "java.lang.InterruptedException": "typing.Union[InterruptedError, KeyboardInterrupt, asyncio.CancelledError, BlockingIOError]",
    "SimpleFactory": "SimpleFactory",
    "TestPooledSoftReference": "TestPooledSoftReference",
    "SynchronizedObjectPool": "SynchronizedObjectPool",
    "java.util.concurrent.ScheduledThreadPoolExecutor": "typing.Union[concurrent.futures.ThreadPoolExecutor, concurrent.futures.Future]",
    "java.time.Clock": "datetime.datetime",
    "java.util.Map<K,ErodingFactor>": "typing.Dict[typing.Any, ErodingFactor]",
    "java.util.Collection<? extends E>": "typing.Collection[typing.Any]",
    "B": "typing.Any",
    "java.util.concurrent.TimeUnit": "datetime.timedelta",
    "JdkProxyHandler": "JdkProxyHandler",
    "ObjectPool<T>": "ObjectPool[typing.Any]",
    "java.util.ArrayList<PooledObject<T>>": "typing.List[PooledObject[typing.Any]]",
    "java.lang.VirtualMachineError": "typing.Union[MemoryError, SystemError, RuntimeError, RecursionError, InterruptedError, SIGTERM]",
    "java.util.Collection<?>": "typing.Collection[typing.Any]",
    "IdentityWrapper": "IdentityWrapper",
    "WaiterFactory": "WaiterFactory",
    "SynchronizedObjectPool<T>": "SynchronizedObjectPool[typing.Any]",
    "TestTrackedUse": "TestTrackedUse",
    "java.util.function.Consumer<Thread>": "typing.Callable[[threading.Thread], None]",
    "LinkedBlockingDeque<>": "LinkedBlockingDeque[typing.Any]",
    "TrackedUse": "TrackedUse",
    "ErodingKeyedObjectPool": "ErodingKeyedObjectPool",
    "java.util.List<Future<?>>": "typing.List[concurrent.futures.Future[typing.Any]]",
    "BaseProxyHandler<T>": "BaseProxyHandler[typing.Any]",
    "BaseObjectPool<Object>": "BaseObjectPool[typing.Any]",
    "java.lang.Class<PooledObjectFactory<>>": "typing.Type[PooledObjectFactory[typing.Any]]",
    "java.time.temporal.ChronoUnit": "datetime.timedelta",
    "ObjectPoolMinIdleTimerTask<T>": "ObjectPoolMinIdleTimerTask[typing.Any]",
    "Node<E>": "Node[typing.Any]",
    "java.util.ArrayList<Future<?>>": "typing.List[concurrent.futures.Future[typing.Any]]",
    "FactoryBA": "FactoryBA",
    "UsageTracking": "UsageTracking",
    "java.util.concurrent.locks.ReentrantLock": "threading.RLock",
    "KeyedPooledObjectFactory": "KeyedPooledObjectFactory",
    "BaseTestProxiedKeyedObjectPool": "BaseTestProxiedKeyedObjectPool",
    "java.util.concurrent.locks.WriteLock": "typing.Union[threading.RLock, threading.Lock]",
    "MethodCallLogger": "MethodCallLogger",
    "PooledObject<>": "PooledObject[typing.Any]",
    "java.util.Map<String,TimerTask>": "typing.Dict[str, typing.Union[sched.scheduler, threading.Timer]]",
    "KeyedObjectPool<String,String>": "KeyedObjectPool[str, str]",
    "JdkProxySource": "JdkProxySource",
    "java.lang.reflect.TypeVariable<?>": "typing.TypeVar('T', bound=typing.Any)",
    "BasePooledObjectFactory": "BasePooledObjectFactory",
    "SecurityManagerCallStack": "SecurityManagerCallStack",
    "KeyedObjectPoolMinIdleTimerTask": "KeyedObjectPoolMinIdleTimerTask",
    "BidirDijkstraTestCase": "BidirDijkstraTestCase",
    "DisjointSetNode": "DisjointSetNode",
    "NodeSequenceVisitor": "NodeSequenceVisitor",
    "Monoid<M>": "Monoid[typing.Any]",
    "java.util.HashMap<VertexPair<V>,V>": "typing.Dict[VertexPair[typing.Any], typing.Any]",
    "java.util.Collection<V>": "typing.Collection[typing.Any]",
    "java.util.Comparator<V>": "typing.Callable[[typing.Any, typing.Any], int]",
    "TarjanAlgorithm": "TarjanAlgorithm",
    "java.util.LinkedList<VertexPair<V>>": "typing.List[VertexPair[typing.Any]]",
    "java.util.HashMap<String,Mapper<V,?>>": "typing.Dict[str, Mapper[typing.Any, typing.Any]]",
    "Monoid": "Monoid",
    "Mapper<EdgeWrapper<WE>,W>": "Mapper[EdgeWrapper[typing.Any], typing.Any]",
    "java.util.ArrayList<V>": "typing.List[typing.Any]",
    "DefaultHeadVertexConnector<V,E>": "DefaultHeadVertexConnector[typing.Any, typing.Any]",
    "TailVertexConnector<V,E>": "TailVertexConnector[typing.Any, typing.Any]",
    "java.util.HashMap<V,SuperVertex<V,W,WE>>": "typing.Dict[typing.Any, SuperVertex[typing.Any, typing.Any, typing.Any]]",
    "BoruvkaTestCase": "BoruvkaTestCase",
    "DefaultHeuristicBuilder<V,WE,W>": "DefaultHeuristicBuilder[typing.Any, typing.Any, typing.Any]",
    "DefaultPathSourceSelector<V,WE,W>": "DefaultPathSourceSelector[typing.Any, typing.Any, typing.Any]",
    "java.util.HashSet<SuperVertex<V,W,WE>>": "typing.Set[SuperVertex[typing.Any, typing.Any, typing.Any]]",
    "MutableGraph<BaseLabeledVertex,BaseLabeledEdge>": "MutableGraph[BaseLabeledVertex, BaseLabeledEdge]",
    "SccAlgorithm<V>": "SccAlgorithm[typing.Any]",
    "DirectedGraph<V,EdgeWrapper<WE>>": "DirectedGraph[typing.Any, EdgeWrapper[typing.Any]]",
    "ShortestDistances<V,W>": "ShortestDistances[typing.Any, typing.Any]",
    "java.util.Queue<WE>": "queue.Queue[typing.Any]",
    "SpanningTreeSourceSelector": "SpanningTreeSourceSelector",
    "RevertedGraph": "RevertedGraph",
    "java.util.Map<Integer,Set<V>>": "typing.Dict[int, typing.Set[typing.Any]]",
    "EdmondsKarpTestCase": "EdmondsKarpTestCase",
    "java.util.HashMap<E,VertexPair<V>>": "typing.Dict[typing.Any, VertexPair[typing.Any]]",
    "Mapper<BaseLabeledWeightedEdge<W>,W>": "Mapper[BaseLabeledWeightedEdge[typing.Any], typing.Any]",
    "java.util.Set<Set<V>>": "typing.Set[typing.Set[typing.Any]]",
    "AllVertexPairsShortestPath<V,WE,W>": "AllVertexPairsShortestPath[typing.Any, typing.Any, typing.Any]",
    "java.util.Set<V>": "typing.Set[typing.Any]",
    "AbstractColoringTest": "AbstractColoringTest",
    "ExportSelector": "ExportSelector",
    "Mapper<WE,W>": "Mapper[typing.Any, typing.Any]",
    "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Integer>>": "DirectedMutableGraph[BaseLabeledVertex, BaseLabeledWeightedEdge[int]]",
    "TailVertexConnector": "TailVertexConnector",
    "VertexPair": "VertexPair",
    "MutableGraph": "MutableGraph",
    "FlowWeightedEdgesBuilder<V,WE>": "FlowWeightedEdgesBuilder[typing.Any, typing.Any]",
    "DefaultKFactorBuilder<P>": "DefaultKFactorBuilder[typing.Any]",
    "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>": "DirectedMutableGraph[BaseLabeledVertex, BaseLabeledWeightedEdge[float]]",
    "java.lang.Comparable<? super E>": "typing.Generic[typing.TypeVar('T', bound=typing.Any)]",
    "BaseGraph<V,E>": "BaseGraph[typing.Any, typing.Any]",
    "BaseGraph": "BaseGraph",
    "GraphSerializationTestCase": "GraphSerializationTestCase",
    "TarjanTestCase": "TarjanTestCase",
    "java.lang.Iterable<V>": "typing.Iterable[typing.Any]",
    "HeadVertexConnector<V,E>": "HeadVertexConnector[typing.Any, typing.Any]",
    "UndirectedGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>": "UndirectedGraph[BaseLabeledVertex, BaseLabeledWeightedEdge[float]]",
    "java.util.List<C>": "typing.List[typing.Any]",
    "ColoringAlgorithmsSelector<V,E,C>": "ColoringAlgorithmsSelector[typing.Any, typing.Any, typing.Any]",
    "DefaultLinkedConnectionBuilder": "DefaultLinkedConnectionBuilder",
    "RankingSelector<P>": "RankingSelector[typing.Any]",
    "java.util.Map<V,W>": "typing.Dict[typing.Any, typing.Any]",
    "java.util.LinkedList<BaseLabeledVertex>": "typing.List[BaseLabeledVertex]",
    "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledEdge>": "UndirectedMutableGraph[BaseLabeledVertex, BaseLabeledEdge]",
    "InMemoryWeightedPath<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>,Double>": "InMemoryWeightedPath[BaseLabeledVertex,BaseLabeledWeightedEdge[float],float]",
    "ToTailBuilder": "ToTailBuilder",
    "java.util.Collection<List<V>>": "typing.Collection[typing.List[typing.Any]]",
    "SccAlgorithmSelector<V,E>": "SccAlgorithmSelector[typing.Any, typing.Any]",
    "SccAlgorithm": "SccAlgorithm",
    "BaseWeightedEdge<Double>": "BaseWeightedEdge[float]",
    "java.util.LinkedHashSet<Set<V>>": "typing.OrderedDict[typing.Set[typing.Any], None]",
    "java.util.ArrayList<C>": "typing.List[typing.Any]",
    "DefaultToTailBuilder": "DefaultToTailBuilder",
    "DefaultSpanningWeightedEdgeMapperBuilder<V,WE>": "DefaultSpanningWeightedEdgeMapperBuilder[typing.Any, typing.Any]",
    "DefaultLinkedConnectionBuilder<V,E,G>": "DefaultLinkedConnectionBuilder[typing.Any, typing.Any, typing.Any]",
    "DefaultSpanningTreeAlgorithmSelector": "DefaultSpanningTreeAlgorithmSelector",
    "DefaultRankingSelector": "DefaultRankingSelector",
    "Mapper<BaseLabeledWeightedEdge<Double>,String>": "Mapper[BaseLabeledWeightedEdge[float], str]",
    "DotExporter": "DotExporter",
    "DefaultMaxFlowAlgorithmSelector<V,WE,W>": "DefaultMaxFlowAlgorithmSelector[typing.Any, typing.Any, typing.Any]",
    "VertexPair<V>": "VertexPair[typing.Any]",
    "java.util.Collection<List<BaseLabeledVertex>>": "typing.Collection[typing.List[BaseLabeledVertex]]",
    "java.util.Map<String,Double>": "typing.Dict[str, float]",
    "Mapper<V,String>": "typing.Dict[typing.Any, str]",
    "java.util.PriorityQueue<WE>": "typing.List[typing.Any]",
    "Mapper": "Mapper",
    "java.util.Set<BaseLabeledVertex>": "typing.Set[BaseLabeledVertex]",
    "I": "typing.Any",
    "NotEnoughColorsException": "NotEnoughColorsException",
    "SynchronizedDirectedGraph": "SynchronizedDirectedGraph",
    "java.util.HashMap<VertexPair<V>,E>": "typing.Dict[VertexPair[typing.Any], typing.Any]",
    "UndirectedMutableGraph<V,E>": "UndirectedMutableGraph[typing.Any, typing.Any]",
    "DefaultMaxFlowAlgorithmSelector": "DefaultMaxFlowAlgorithmSelector",
    "AbstractGraphConnection<BaseLabeledVertex,BaseLabeledWeightedEdge<Integer>>": "AbstractGraphConnection[BaseLabeledVertex, BaseLabeledWeightedEdge[int]]",
    "BaseGraphVisitHandler<V,E,DirectedGraph<V,E>,W>": "BaseGraphVisitHandler[typing.Any, typing.Any, DirectedGraph[typing.Any, typing.Any], typing.Any]",
    "DefaultVisitAlgorithmsSelector": "DefaultVisitAlgorithmsSelector",
    "H": "typing.Any",
    "Graph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>": "Graph[BaseLabeledVertex, BaseLabeledWeightedEdge[float]]",
    "SynchronizedUndirectedGraph": "SynchronizedUndirectedGraph",
    "HeuristicBuilder": "HeuristicBuilder",
    "AbstractExporter<V,E,DotExporter>": "AbstractExporter[typing.Any, typing.Any, DotExporter]",
    "java.util.Set<WE>": "typing.Set[typing.Any]",
    "DefaultExportSelector<V,E>": "DefaultExportSelector[typing.Any, typing.Any]",
    "ShortestPathAlgorithmSelector<V,WE,W>": "ShortestPathAlgorithmSelector[typing.Any, typing.Any, typing.Any]",
    "DefaultWeightedEdgesSelector": "DefaultWeightedEdgesSelector",
    "ConnectivityBuilder<V,E>": "ConnectivityBuilder[typing.Any, typing.Any]",
    "java.util.logging.Logger": "logging.Logger",
    "Graph<V,E>": "Graph[typing.Any, typing.Any]",
    "Mapper<E,String>": "Mapper[typing.Any, str]",
    "java.util.List<WE>": "typing.List[typing.Any]",
    "RevertedGraph<V,E>": "RevertedGraph[typing.Any, typing.Any]",
    "SynchronizedMutableGraph<V,E>": "SynchronizedMutableGraph[typing.Any, typing.Any]",
    "Mapper<E,W>": "Mapper[typing.Any, typing.Any]",
    "DefaultSpanningTreeSourceSelector": "DefaultSpanningTreeSourceSelector",
    "FlowWeightedEdgesBuilder": "FlowWeightedEdgesBuilder",
    "FindConnectedComponetTestCase": "FindConnectedComponetTestCase",
    "LongWeightBaseOperations": "LongWeightBaseOperations",
    "java.util.LinkedList<V>": "typing.List[typing.Any]",
    "DefaultSccAlgorithmSelector": "DefaultSccAlgorithmSelector",
    "CheriyanMehlhornGabowAlgorithm": "CheriyanMehlhornGabowAlgorithm",
    "PlayersRank<P>": "PlayersRank[typing.Any]",
    "java.util.Comparator<M>": "typing.Callable[[typing.Any, typing.Any], int]",
    "BaseLabeledEdge": "BaseLabeledEdge",
    "MutableSpanningTree": "MutableSpanningTree",
    "MaxFlowAlgorithmSelector<V,WE,W>": "MaxFlowAlgorithmSelector[typing.Any, typing.Any, typing.Any]",
    "java.util.HashSet<Set<V>>": "typing.Set[typing.Set[typing.Any]]",
    "java.util.HashSet<WE>": "typing.Set[typing.Any]",
    "Path<V,E>": "Path[typing.Any, typing.Any]",
    "ColoredVertices<BaseLabeledVertex,Integer>": "ColoredVertices[BaseLabeledVertex,int]",
    "P": "typing.Any",
    "GraphColoringTestCase": "GraphColoringTestCase",
    "TargetSourceSelector": "TargetSourceSelector",
    "TargetSourceSelector<V,WE,W>": "TargetSourceSelector[typing.Any, typing.Any, typing.Any]",
    "UndirectedMutableGraph<V,WE>": "UndirectedMutableGraph[typing.Any, typing.Any]",
    "Monoid<W>": "Monoid[typing.Any]",
    "FlowNetworkHandler": "FlowNetworkHandler",
    "MaxFlowAlgorithmSelector": "MaxFlowAlgorithmSelector",
    "SCCAlgorithmBenchmarkTestCase": "SCCAlgorithmBenchmarkTestCase",
    "ColoringAlgorithmsSelector": "ColoringAlgorithmsSelector",
    "java.util.HashMap<E,DisjointSetNode<E>>": "typing.Dict[typing.Any, DisjointSetNode[typing.Any]]",
    "java.util.Map<V,Integer>": "typing.Dict[typing.Any, int]",
    "java.util.HashMap<V,V>": "typing.Dict[typing.Any, typing.Any]",
    "FibonacciHeap<V>": "FibonacciHeap[typing.Any]",
    "FibonacciHeap": "FibonacciHeap",
    "DefaultExportSelector": "DefaultExportSelector",
    "java.util.LinkedList<E>": "typing.List[typing.Any]",
    "SimplePlayersRank": "SimplePlayersRank",
    "BaseMutableGraph<V,E>": "BaseMutableGraph[typing.Any, typing.Any]",
    "KruskalTestCase": "KruskalTestCase",
    "SpanningTreeAlgorithmSelector": "SpanningTreeAlgorithmSelector",
    "java.lang.Iterable<BaseLabeledVertex>": "typing.Iterable[BaseLabeledVertex]",
    "java.util.Map<E,VertexPair<V>>": "typing.Dict[typing.Any, VertexPair[typing.Any]]",
    "RankingSelector": "RankingSelector",
    "java.util.HashMap<V,TarjanVertexMetaInfo>": "typing.Dict[typing.Any, TarjanVertexMetaInfo]",
    "java.util.List<V>": "typing.List[typing.Any]",
    "Mapper<V,?>": "typing.Dict[typing.Any, typing.Any]",
    "Graph": "Graph",
    "java.util.List<Throwable>": "typing.List[BaseException]",
    "java.util.Map<VertexPair<V>,V>": "typing.Dict[VertexPair[typing.Any], typing.Any]",
    "SpanningTree<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>,Double>": "SpanningTree[BaseLabeledVertex, BaseLabeledWeightedEdge[float], float]",
    "AbstractGraphConnection<String,GameResult>": "AbstractGraphConnection[str, GameResult]",
    "DirectedGraph<P,GameResult>": "DirectedGraph[typing.Any, GameResult]",
    "MultiThreadedTestRunner": "MultiThreadedTestRunner",
    "DefaultSpanningTreeAlgorithmSelector<V,W,WE>": "DefaultSpanningTreeAlgorithmSelector[typing.Any, typing.Any, typing.Any]",
    "java.util.Set<E>": "typing.Set[typing.Any]",
    "SpanningTree<V,WE,W>": "SpanningTree[typing.Any, typing.Any, typing.Any]",
    "ShortestEdges": "ShortestEdges",
    "java.util.TreeSet<WE>": "typing.Set[typing.Any]",
    "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>": "UndirectedMutableGraph[BaseLabeledVertex, BaseLabeledWeightedEdge[float]]",
    "DefaultVisitSourceSelector": "DefaultVisitSourceSelector",
    "java.util.Map<V,C>": "typing.Dict[typing.Any, typing.Any]",
    "BaseGraphVisitHandler<V,E,Graph<V,E>,List<V>>": "BaseGraphVisitHandler<typing.Any, typing.Any, Graph[typing.Any, typing.Any], typing.List[typing.Any]",
    "SynchronizedGraph<V,E>": "SynchronizedGraph[typing.Any, typing.Any]",
    "WeightedEdgesComparator": "WeightedEdgesComparator",
    "LinkedConnectionBuilder<V,E,G>": "LinkedConnectionBuilder[typing.Any, typing.Any, typing.Any]",
    "java.util.HashSet<BaseLabeledVertex>": "typing.Set[BaseLabeledVertex]",
    "java.util.HashMap<V,WE>": "typing.Dict[typing.Any, typing.Any]",
    "java.util.Map<V,V>": "typing.Dict[typing.Any, typing.Any]",
    "GraphInsert": "GraphInsert",
    "AllVertexPairsShortestPath<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>,Double>": "AllVertexPairsShortestPath[BaseLabeledVertex, BaseLabeledWeightedEdge[float], float]",
    "VisitState": "VisitState",
    "DirectedGraph<String,GameResult>": "DirectedGraph[str, GameResult]",
    "NamedExportSelector<V,E>": "NamedExportSelector[typing.Any, typing.Any]",
    "java.util.HashMap<BaseLabeledVertex,Double>": "typing.Dict[BaseLabeledVertex, float]",
    "SynchronizedUndirectedGraph<V,E>": "SynchronizedUndirectedGraph[typing.Any, typing.Any]",
    "java.util.ArrayList<WE>": "typing.List[typing.Any]",
    "VisitTestCase": "VisitTestCase",
    "BaseLabeledWeightedEdge": "BaseLabeledWeightedEdge",
    "Path<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>": "Path[BaseLabeledVertex, BaseLabeledWeightedEdge[float]]",
    "java.util.LinkedHashSet<V>": "typing.OrderedDict[typing.Any, None]",
    "java.util.List<Set<V>>": "typing.List[typing.Set[typing.Any]]",
    "LinkedConnectionBuilder": "LinkedConnectionBuilder",
    "PlayersRank<String>": "PlayersRank[str]",
    "ReverseDeleteGraph": "ReverseDeleteGraph",
    "java.util.Map<VertexPair<V>,WeightedPath<V,WE,W>>": "typing.Dict[VertexPair[typing.Any], WeightedPath[typing.Any, typing.Any, typing.Any]]",
    "java.util.Iterator<C>": "typing.Iterator[typing.Any]",
    "Mapper<E,N>": "Mapper[typing.Any, typing.Any]",
    "DirectedGraph<V,WE>": "DirectedGraph[typing.Any, typing.Any]",
    "NegativeWeightedCycleException": "NegativeWeightedCycleException",
    "BaseMutableGraphTestCase": "BaseMutableGraphTestCase",
    "java.util.HashSet<Set<BaseLabeledVertex>>": "typing.Set[typing.Set[BaseLabeledVertex]]",
    "FromHeadBuilder": "FromHeadBuilder",
    "ConnectedComponentHandler": "ConnectedComponentHandler",
    "UndirectedMutableGraph": "UndirectedMutableGraph",
    "WeightedPath<V,E,W>": "WeightedPath[typing.Any, typing.Any, typing.Any]",
    "WeightedPath": "WeightedPath",
    "BaseLabeledWeightedEdge<Integer>": "BaseLabeledWeightedEdge[int]",
    "GraphExportException": "GraphExportException",
    "FibonacciHeap<WE>": "FibonacciHeap[typing.Any]",
    "WeightedEdgesComparator<W,WE>": "WeightedEdgesComparator[typing.Any, typing.Any]",
    "DefaultToTailBuilder<V,WE,W>": "DefaultToTailBuilder[typing.Any, typing.Any, typing.Any]",
    "DefaultColorsBuilder<V,E>": "DefaultColorsBuilder[typing.Any, typing.Any]",
    "AbstractGraphConnection<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>": "AbstractGraphConnection[BaseLabeledVertex, BaseLabeledWeightedEdge[float]]",
    "DefaultColoringAlgorithmsSelector<V,E,C>": "DefaultColoringAlgorithmsSelector[typing.Any, typing.Any, typing.Any]",
    "WO": "typing.Any",
    "SccAlgorithmSelector": "SccAlgorithmSelector",
    "DirectedMutableGraph": "DirectedMutableGraph",
    "InMemoryPath": "InMemoryPath",
    "ConnectedComponentHandler<V,E>": "ConnectedComponentHandler[typing.Any, typing.Any]",
    "DotExporter<V,E>": "DotExporter[typing.Any, typing.Any]",
    "W": "typing.Any",
    "java.util.Iterator<V>": "typing.Iterator[typing.Any]",
    "AbstractGraphConnection": "AbstractGraphConnection",
    "DefaultRankingSelector<P>": "DefaultRankingSelector[typing.Any]",
    "DefaultGrapher<V,E>": "DefaultGrapher[typing.Any, typing.Any]",
    "java.util.Stack<FibonacciHeapNode<E>>": "typing.List[FibonacciHeapNode[typing.Any]]",
    "MapperWrapper<WE,W,WO>": "MapperWrapper[typing.Any, typing.Any, typing.Any]",
    "GraphConnector<V,E>": "GraphConnector[typing.Any, typing.Any]",
    "DefaultFlowWeightedEdgesBuilder": "DefaultFlowWeightedEdgesBuilder",
    "ExportTestCase": "ExportTestCase",
    "SpanningTreeAlgorithmSelector<V,W,WE>": "SpanningTreeAlgorithmSelector[typing.Any, typing.Any, typing.Any]",
    "ToTailBuilder<V,WE,W>": "ToTailBuilder[typing.Any, typing.Any, typing.Any]",
    "SuperVertex": "SuperVertex",
    "DefaultSccAlgorithmSelector<V,E>": "DefaultSccAlgorithmSelector[typing.Any, typing.Any]",
    "SpanningWeightedEdgeMapperBuilder": "SpanningWeightedEdgeMapperBuilder",
    "DisjointSetNode<E>": "DisjointSetNode[typing.Any]",
    "PathSourceSelector<V,WE,W>": "PathSourceSelector[typing.Any, typing.Any, typing.Any]",
    "AStarTestCase": "AStarTestCase",
    "DefaultTailVertexConnector": "DefaultTailVertexConnector",
    "EdgeWeightMapper": "EdgeWeightMapper",
    "java.util.ArrayList<Set<V>>": "typing.List[typing.Set[typing.Any]]",
    "UncoloredOrderedVertices<V>": "UncoloredOrderedVertices[typing.Any]",
    "OrderedMonoid<Double>": "OrderedMonoid[float]",
    "G": "typing.Any",
    "EdgeWrapper<WE>": "EdgeWrapper[typing.Any]",
    "CommonsGraph": "CommonsGraph",
    "DefaultShortestPathAlgorithmSelector": "DefaultShortestPathAlgorithmSelector",
    "EdgeWrapper<>": "EdgeWrapper[typing.Any]",
    "DefaultSpanningTreeSourceSelector<V,W,WE>": "DefaultSpanningTreeSourceSelector[typing.Any, typing.Any, typing.Any]",
    "DefaultKFactorBuilder": "DefaultKFactorBuilder",
    "java.util.ArrayList<Thread>": "typing.List[threading.Thread]",
    "java.lang.Iterable<WE>": "typing.Iterable[typing.Any]",
    "InMemoryPath<Object,Object>": "InMemoryPath[typing.Any, typing.Any]",
    "MutableGraph<V,E>": "MutableGraph[typing.Any, typing.Any]",
    "ConnectivityBuilder": "ConnectivityBuilder",
    "DefaultPathSourceSelector": "DefaultPathSourceSelector",
    "java.util.List<Thread>": "typing.List[threading.Thread]",
    "DefaultFlowWeightedEdgesBuilder<V,WE>": "DefaultFlowWeightedEdgesBuilder[typing.Any, typing.Any]",
    "java.util.HashMap<VertexPair<V>,W>": "typing.Dict[VertexPair[typing.Any], typing.Any]",
    "Objects": "typing.Any",
    "ShortestEdges<V,WE,W>": "ShortestEdges[typing.Any, typing.Any, typing.Any]",
    "AllVertexPairsShortestPath": "AllVertexPairsShortestPath",
    "EdgeLabelMapper": "EdgeLabelMapper",
    "java.util.Map<VertexPair<V>,E>": "typing.Dict[VertexPair[typing.Any], typing.Any]",
    "java.util.LinkedList<WE>": "typing.List[typing.Any]",
    "Category": "Category",
    "SynchronizedGraph<Object,Object>": "SynchronizedGraph[typing.Any, typing.Any]",
    "UndirectedGraph<V,E>": "UndirectedGraph[typing.Any, typing.Any]",
    "ShortestDistances": "ShortestDistances",
    "KFactorBuilder": "KFactorBuilder",
    "DefaultTargetSourceSelector<V,WE,W>": "DefaultTargetSourceSelector[typing.Any, typing.Any, typing.Any]",
    "java.util.HashMap<Integer,String>": "typing.Dict[int, str]",
    "KosarajuSharirTestCase": "KosarajuSharirTestCase",
    "java.lang.Comparable<DisjointSetNode>": "typing.Generic[typing.TypeVar('T', bound=DisjointSetNode)]",
    "GraphBuilderTestCase": "GraphBuilderTestCase",
    "O": "typing.Any",
    "BaseLabeledVertex[][]": "typing.List[typing.List[BaseLabeledVertex]]",
    "GraphColoringBackTrackingTestCase": "GraphColoringBackTrackingTestCase",
    "java.util.List<FibonacciHeapNode<E>>": "typing.List[FibonacciHeapNode[typing.Any]]",
    "PlayersRank": "PlayersRank",
    "java.util.Map<V,Set<V>>": "typing.Dict[typing.Any, typing.Set[typing.Any]]",
    "AbstractGraphConnection<BaseLabeledVertex,BaseLabeledEdge>": "AbstractGraphConnection[BaseLabeledVertex, BaseLabeledEdge]",
    "KosarajuSharirAlgorithm": "KosarajuSharirAlgorithm",
    "FromHeadBuilder<V,WE,W>": "FromHeadBuilder[typing.Any, typing.Any, typing.Any]",
    "java.util.TreeMap<String,Double>": "typing.Dict[str, float]",
    "HeadVertexConnector": "HeadVertexConnector",
    "DirectedGraph": "DirectedGraph",
    "FlowNetworkHandler<V,EdgeWrapper<WE>,W>": "FlowNetworkHandler[typing.Any, EdgeWrapper[typing.Any], typing.Any]",
    "java.util.Map<V,WE>": "typing.Dict[typing.Any, typing.Any]",
    "DefaultFromHeadBuilder<V,WE,W>": "DefaultFromHeadBuilder[typing.Any, typing.Any, typing.Any]",
    "OrderedMonoid<Float>": "OrderedMonoid[float]",
    "EloTestCase": "EloTestCase",
    "java.util.Set<C>": "typing.Set[typing.Any]",
    "DefaultConnectivityBuilder<V,E>": "DefaultConnectivityBuilder[typing.Any, typing.Any]",
    "DefaultColoringAlgorithmsSelector": "DefaultColoringAlgorithmsSelector",
    "DisjointSet": "DisjointSet",
    "java.util.HashSet<V>": "typing.Set[typing.Any]",
    "java.util.Map<E,DisjointSetNode<E>>": "typing.Dict[typing.Any, DisjointSetNode[typing.Any]]",
    "GraphVisitHandler": "GraphVisitHandler",
    "MinimumSpanningTreeBenchmarkTestCase": "MinimumSpanningTreeBenchmarkTestCase",
    "java.util.Map<BaseLabeledVertex,Double>": "typing.Dict[BaseLabeledVertex, float]",
    "Mapper<BaseLabeledVertex,String>": "Mapper[BaseLabeledVertex, str]",
    "java.util.ArrayList<BaseLabeledVertex>": "typing.List[BaseLabeledVertex]",
    "PredecessorsList<V,E,W>": "PredecessorsList[typing.Any, typing,Any, typing.Any]",
    "KFactorBuilder<P>": "KFactorBuilder[typing.Any]",
    "DefaultVisitAlgorithmsSelector<V,E,G>": "DefaultVisitAlgorithmsSelector[typing.Any, typing.Any, typing.Any]",
    "java.util.Comparator<? super E>": "typing.Callable[[typing.Any, typing.Any], int]",
    "SuperVertex<V,W,WE>": "SuperVertex[typing.Any, typing.Any, typing.Any]",
    "DefaultVisitSourceSelector<V,E,G>": "DefaultVisitSourceSelector[typing.Any, typing.Any, typing.Any]",
    "ColorsBuilder": "ColorsBuilder",
    "WeightedPath<V,WE,W>": "WeightedPath[typing.Any, typing.Any, typing.Any]",
    "DirectedGraph<V,E>": "DirectedGraph[typing.Any, typing.Any]",
    "GraphVisitHandler<V,E,G,O>": "GraphVisitHandler[typing.Any, typing.Any, typing.Any, typing.Any]",
    "DefaultConnectivityBuilder": "DefaultConnectivityBuilder",
    "java.util.Set<SuperVertex<V,W,WE>>": "typing.Set[SuperVertex[typing.Any, typing.Any, typing.Any]]",
    "ExportSelector<V,E>": "ExportSelector[typing.Any, typing.Any]",
    "BaseWeightedEdge<Integer>": "BaseWeightedEdge[int]",
    "ShortestPathAlgorithmSelector": "ShortestPathAlgorithmSelector",
    "FloydWarshallTestCase": "FloydWarshallTestCase",
    "java.util.HashMap<VertexPair<V>,WeightedPath<V,WE,W>>": "typing.Dict[VertexPair[typing.Any], WeightedPath[typing.Any, typing.Any, typing.Any]]",
    "java.util.HashMap<E,W>": "typing.Dict[typing.Any, typing.Any]",
    "java.util.Comparator<Integer>": "typing.Callable[[int, int], int]",
    "N": "typing.Any",
    "BigIntegerWeightBaseOperations": "BigIntegerWeightBaseOperations",
    "java.util.ArrayList<Throwable>": "typing.List[BaseException]",
    "DisjointSet<V>": "DisjointSet[typing.Any]",
    "GraphConnection": "GraphConnection",
    "AbstractGraphConnection<V,EdgeWrapper<WE>>": "AbstractGraphConnection[typing.Any, EdgeWrapper[typing.Any]]",
    "GraphConnection<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>": "GraphConnection[BaseLabeledVertex, BaseLabeledWeightedEdge[float]]",
    "MutableSpanningTree<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>,Double>": "MutableSpanningTree[BaseLabeledVertex, BaseLabeledWeightedEdge[float], float]",
    "ColoredVertices<V,C>": "ColoredVertices[typing.Any, typing.Any]",
    "PathWeightedEdgesBuilder<V,WE>": "PathWeightedEdgesBuilder[typing.Any, typing.Any]",
    "java.util.HashMap<String,Mapper<E,?>>": "typing.Dict[str, Mapper[typing.Any, typing.Any]]",
    "PathWeightedEdgesBuilder": "PathWeightedEdgesBuilder",
    "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledEdge>": "DirectedMutableGraph[BaseLabeledVertex,BaseLabeledEdge]",
    "DefaultWeightedEdgesSelector<V,WE>": "DefaultWeightedEdgesSelector[typing.Any, typing.Any]",
    "SynchronizedGraph": "SynchronizedGraph",
    "Graph<V,WE>": "Graph[typing.Any, typing.Any]",
    "java.util.HashMap<V,W>": "typing.Dict[typing.Any, typing.Any]",
    "java.util.Entry<String,Mapper<V,?>>": "typing.Tuple[str, Mapper[typing.Any, typing.Any]]",
    "ColoredVertices": "ColoredVertices",
    "BigDecimalWeightBaseOperations": "BigDecimalWeightBaseOperations",
    "DirectedGraph<>": "DirectedGraph[typing.Any]",
    "VisitSourceSelector": "VisitSourceSelector",
    "DijkstraTestCase": "DijkstraTestCase",
    "java.util.Map<String,Mapper<V,?>>": "typing.Dict[str, Mapper[typing.Any, typing.Any]]",
    "InMemoryWeightedPath": "InMemoryWeightedPath",
    "DefaultHeadVertexConnector": "DefaultHeadVertexConnector",
    "GraphException": "GraphException",
    "OrderedMonoid<W>": "OrderedMonoid[typing.Any]",
    "Graph<BaseLabeledVertex,BaseLabeledEdge>": "Graph[BaseLabeledVertex,BaseLabeledEdge]",
    "java.util.Queue<V>": "queue.Queue[typing.Any]",
    "PathNotFoundException": "PathNotFoundException",
    "SynchronizedDirectedGraph<V,E>": "SynchronizedDirectedGraph[typing.Any, typing.Any]",
    "ColorsBuilder<V,E>": "ColorsBuilder[typing.Any, typing.Any]",
    "java.util.Map<String,Mapper<E,?>>": "typing.Dict[str, Mapper[typing.Any, typing.Any]]",
    "java.util.Map<V,TarjanVertexMetaInfo>": "typing.Dict[typing.Any, TarjanVertexMetaInfo]",
    "MutableSpanningTree<V,WE,W>": "MutableSpanningTree[typing.Any, typing.Any, typing.Any]",
    "IntegerWeightBaseOperations": "IntegerWeightBaseOperations",
    "CheriyanMehlhornGabowAlgorithm<V,E>": "CheriyanMehlhornGabowAlgorithm[typing.Any, typing.Any]",
    "TarjanVertexMetaInfo": "TarjanVertexMetaInfo",
    "Graph<BaseLabeledVertex,? extends Serializable>": "Graph[BaseLabeledVertex, typing.Any]",
    "GraphConnection<V,E>": "GraphConnection[typing.Any, typing.Any]",
    "DefaultFromHeadBuilder": "DefaultFromHeadBuilder",
    "PrimTestCase": "PrimTestCase",
    "java.util.Stack<V>": "typing.List[typing.Any]",
    "InMemoryWeightedPath<Object,Object,W>": "InMemoryWeightedPath[typing.Any, typing.Any, typing.Any]",
    "BaseGraph<Object,Object>": "BaseGraph[typing.Any, typing.Any]",
    "VisitAlgorithmsSelector<V,E,G>": "VisitAlgorithmsSelector[typing.Any, typing.Any, typing.Any]",
    "MapperWrapper": "MapperWrapper",
    "PredecessorsList<V,WE,W>": "PredecessorsList[typing.Any, typing.Any, typing.Any]",
    "InMemoryPath<V,WE>": "InMemoryPath[typing.Any, typing.Any]",
    "ReverseDeleteGraph<V,WE>": "ReverseDeleteGraph[typing.Any, typing.Any]",
    "Mapper<BaseLabeledWeightedEdge<Double>,Double>": "Mapper[BaseLabeledWeightedEdge[float], float]",
    "DefaultColorsBuilder": "DefaultColorsBuilder",
    "FibonacciHeapNode": "FibonacciHeapNode",
    "java.util.HashSet<Integer>": "typing.Set[int]",
    "AbstractExporter": "AbstractExporter",
    "OrderedMonoid<BigInteger>": "OrderedMonoid[int]",
    "TG": "typing.Any",
    "FloatWeightBaseOperations": "FloatWeightBaseOperations",
    "VisitGraphBuilder": "VisitGraphBuilder",
    "java.util.Map<E,W>": "typing.Dict[typing.Any, typing.Any]",
    "UncoloredOrderedVertices": "UncoloredOrderedVertices",
    "java.util.TreeMap<Integer,Set<V>>": "typing.Dict[int, typing.Set[typing.Any]]",
    "OrderedMonoid<Long>": "OrderedMonoid[int]",
    "OrderedMonoid": "OrderedMonoid",
    "VisitSourceSelector<V,E,G>": "VisitSourceSelector[typing.Any, typing.Any, typing.Any]",
    "DefaultTailVertexConnector<V,E>": "DefaultTailVertexConnector[typing.Any, typing.Any]",
    "NamedExportSelector": "NamedExportSelector",
    "VertexLabelMapper": "VertexLabelMapper",
    "FordFulkersonTestCase": "FordFulkersonTestCase",
    "PathSourceSelector": "PathSourceSelector",
    "WeightedPath<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>,Double>": "WeightedPath[BaseLabeledVertex, BaseLabeledWeightedEdge[float], float]",
    "java.util.LinkedList<List<V>>": "typing.List[typing.List[typing.Any]]",
    "java.util.HashMap<V,C>": "typing.Dict[typing.Any, typing.Any]",
    "java.util.ArrayList<FibonacciHeapNode<E>>": "typing.List[FibonacciHeapNode[typing.Any]]",
    "BaseLabeledWeightedEdge<Double>": "BaseLabeledWeightedEdge[float]",
    "java.util.Queue<E>": "queue.Queue[typing.Any]",
    "DefaultGrapher": "DefaultGrapher",
    "SpanningTreeSourceSelector<V,W,WE>": "SpanningTreeSourceSelector[typing.Any, typing.Any, typing.Any]",
    "SpanningWeightedEdgeMapperBuilder<V,WE>": "SpanningWeightedEdgeMapperBuilder[typing.Any, typing.Any]",
    "VisitAlgorithmsSelector": "VisitAlgorithmsSelector",
    "Weighted<W>": "Weighted[typing.Any]",
    "S": "typing.Any",
    "OrderedMonoid<BigDecimal>": "collections.OrderedDict[decimal.Decimal]",
    "DefaultShortestPathAlgorithmSelector<V,WE,W>": "DefaultShortestPathAlgorithmSelector[typing.Any, typing.Any, typing.Any]",
    "ConnectivityAlgorithmsSelector": "ConnectivityAlgorithmsSelector",
    "SynchronizedMutableGraph": "SynchronizedMutableGraph",
    "Weighted": "Weighted",
    "UniVsBiDijkstraBenchmarkTestCase": "UniVsBiDijkstraBenchmarkTestCase",
    "HeuristicBuilder<V,WE,W>": "HeuristicBuilder[typing.Any, typing.Any, typing.Any]",
    "Mapper<E,?>": "typing.Dict[typing.Any, typing.Any]",
    "DefaultConnectivityAlgorithmsSelector": "DefaultConnectivityAlgorithmsSelector",
    "Heuristic": "Heuristic",
    "Heuristic<BaseLabeledVertex,Double>": "Heuristic[BaseLabeledVertex, float]",
    "FibonacciHeap<>": "FibonacciHeap[typing.Any]",
    "TestRunner": "TestRunner",
    "TestRunner[]": "typing.List[TestRunner]",
    "java.lang.Iterable<E>": "typing.Iterable[typing.Any]",
    "Heuristic<V,W>": "Heuristic[typing.Any, typing.Any]",
    "CheriyanMehlhornGabowTestCase": "CheriyanMehlhornGabowTestCase",
    "GameResult": "GameResult",
    "DefaultTargetSourceSelector": "DefaultTargetSourceSelector",
    "BaseGraphVisitHandler<V,E,G,Graph<V,E>>": "BaseGraphVisitHandler[typing.Any, typing.Any, typing.Any, Graph[typing.Any, typing.Any]]",
    "PredecessorsList": "PredecessorsList",
    "KosarajuSharirAlgorithm<V,E>": "KosarajuSharirAlgorithm[typing.Any, typing.Any]",
    "GraphUtils": "GraphUtils",
    "java.util.List<BaseLabeledVertex>": "typing.List[BaseLabeledVertex]",
    "BaseGraphVisitHandler<BaseLabeledVertex,BaseLabeledEdge,UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledEdge>,List<BaseLabeledVertex>>": "BaseGraphVisitHandler[BaseLabeledVertex, BaseLabeledEdge, UndirectedMutableGraph[BaseLabeledVertex, BaseLabeledEdge], typing.List[BaseLabeledVertex]]",
    "DefaultHeuristicBuilder": "DefaultHeuristicBuilder",
    "java.util.Map<VertexPair<V>,W>": "typing.Dict[VertexPair[typing.Any], typing.Any]",
    "OrderedMonoid<Integer>": "OrderedMonoid[int]",
    "Path": "Path",
    "java.util.Map<V,SuperVertex<V,W,WE>>": "typing.Dict[typing.Any, SuperVertex[typing.Any, typing.Any, typing.Any]]",
    "UndirectedGraph<V,WE>": "UndirectedGraph[typing.Any, typing.Any]",
    "DefaultSpanningWeightedEdgeMapperBuilder": "DefaultSpanningWeightedEdgeMapperBuilder",
    "BaseMutableGraph<BaseLabeledVertex,BaseLabeledEdge>": "BaseMutableGraph[BaseLabeledVertex,BaseLabeledEdge]",
    "java.util.Map<Integer,String>": "typing.Dict[int, str]",
    "EdgeWrapper": "EdgeWrapper",
    "BaseGraphVisitHandler": "BaseGraphVisitHandler",
    "WE": "typing.Any",
    "BaseLabeledVertex": "BaseLabeledVertex",
    "java.util.Entry<String,Mapper<E,?>>": "typing.Tuple[str, Mapper[typing.Any, typing.Any]]",
    "java.util.HashMap<V,Integer>": "typing.Dict[typing.Any, int]",
    "GraphConnector": "GraphConnector",
    "BaseWeightedEdge": "BaseWeightedEdge",
    "BaseMutableGraph": "BaseMutableGraph",
    "java.util.Comparator<WE>": "typing.Callable[[typing.Any, typing.Any], int]",
    "java.util.Collection<WE>": "typing.Collection[typing.Any]",
    "ConnectivityAlgorithmsSelector<V,E>": "ConnectivityAlgorithmsSelector[typing.Any, typing.Any]",
    "BaseLabeledWeightedEdge<W>": "BaseLabeledWeightedEdge[typing.Any]",
    "DefaultConnectivityAlgorithmsSelector<V,E>": "DefaultConnectivityAlgorithmsSelector[typing.Any, typing.Any]",
    "java.util.HashMap<V,Set<V>>": "typing.Dict[typing.Any, typing.Set[typing.Any]]",
    "java.util.Set<Set<BaseLabeledVertex>>": "typing.Set[typing.Set[BaseLabeledVertex]]",
    "java.util.Set<?>": "typing.Set[typing.Any]",
    "DirectedMutableGraph<V,E>": "DirectedMutableGraph[typing.Any, typing.Any]",
    "GraphConnection<BaseLabeledVertex,BaseLabeledEdge>": "GraphConnection[BaseLabeledVertex,BaseLabeledEdge]",
    "ReverseDeleteTestCase": "ReverseDeleteTestCase",
    "InMemoryWeightedPath<V,WE,W>": "InMemoryWeightedPath[typing.Any, typing.Any, typing.Any]",
    "DoubleWeightBaseOperations": "DoubleWeightBaseOperations",
    "BellmannFordTestCase": "BellmannFordTestCase",
    "java.util.Set<Integer>": "typing.Set[int]",
    "UndirectedGraph<>": "UndirectedGraph[typing.Any]",
    "UndirectedGraph": "UndirectedGraph",
    "FibonacciHeapNode<E>": "FibonacciHeapNode[typing.Any]",
    "java.util.Comparator<W>": "typing.Callable[[typing.Any, typing.Any], int]",
    "TarjanAlgorithm<V,E>": "TarjanAlgorithm[typing.Any, typing.Any]",
    "VisitGraphBuilder<V,E,G>": "VisitGraphBuilder[typing.Any, typing.Any, typing.Any]",
    "MutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>": "MutableGraph[BaseLabeledVertex, BaseLabeledWeightedEdge[float]]",
    "TestUtil": "TestUtil",
    "CommandLauncherFactory": "CommandLauncherFactory",
    "DebugUtils": "DebugUtils",
    "ShutdownHookProcessDestroyer": "ShutdownHookProcessDestroyer",
    "MapUtils": "MapUtils",
    "DefaultProcessingEnvironment": "DefaultProcessingEnvironment",
    "Watchdog": "Watchdog",
    "Argument": "Argument",
    "DefaultExecuteResultHandler": "DefaultExecuteResultHandler",
    "java.util.Vector<Argument>": "typing.List[Argument]",
    "CommandLauncher": "CommandLauncher",
    "PrintResultHandler": "PrintResultHandler",
    "MapUtilTest": "MapUtilTest",
    "EnvironmentUtilsTest": "EnvironmentUtilsTest",
    "OS": "OS",
    "TutorialTest": "TutorialTest",
    "TimeoutObserver": "TimeoutObserver",
    "CommandLauncherImpl": "CommandLauncherImpl",
    "ExecuteException": "ExecuteException",
    "Exec34Test": "Exec34Test",
    "Exec65Test": "Exec65Test",
    "Exec44Test": "Exec44Test",
    "Java13CommandLauncher": "Java13CommandLauncher",
    "Exec57Test": "Exec57Test",
    "Exec60Test": "Exec60Test",
    "StandAloneTest": "StandAloneTest",
    "java.util.function.Consumer<TimeoutObserver>": "typing.Callable[[TimeoutObserver], None]",
    "AbstractExecTest": "AbstractExecTest",
    "LogOutputStream": "LogOutputStream",
    "Exec49Test": "Exec49Test",
    "java.io.PipedOutputStream": "typing.Union[io.BytesIO, io.StringIO, io.BufferedWriter]",
    "ByteArrayOutputStreamX": "ByteArrayOutputStreamX",
    "StreamPumper": "StreamPumper",
    "Exec62Test": "Exec62Test",
    "VmsCommandLauncher": "VmsCommandLauncher",
    "DefaultExecutor": "DefaultExecutor",
    "StringUtilTest": "StringUtilTest",
    "DefaultExecutor.Builder<Builder>": "DefaultExecutor.Builder",
    "LogOutputStreamTest": "LogOutputStreamTest",
    "OS2CommandLauncher": "OS2CommandLauncher",
    "ExecuteWatchdog": "ExecuteWatchdog",
    "DaemonExecutor": "DaemonExecutor",
    "EnvironmentUtils": "EnvironmentUtils",
    "CommandLauncherProxy": "CommandLauncherProxy",
    "PumpStreamHandler": "PumpStreamHandler",
    "PumpStreamHandlerTest": "PumpStreamHandlerTest",
    "ExecuteResultHandler": "ExecuteResultHandler",
    "Executor": "Executor",
    "InputStreamPumper": "InputStreamPumper",
    "ProcessDestroyer": "ProcessDestroyer",
    "OpenVmsProcessingEnvironment": "OpenVmsProcessingEnvironment",
    "java.util.Comparator<String>": "typing.Callable[[str, str], int]",
    "ExecuteStreamHandler": "ExecuteStreamHandler",
    "ThreadUtil": "ThreadUtil",
    "DefaultExecutorTest": "DefaultExecutorTest",
    "java.util.Set<Entry<String,String>>": "typing.Set[typing.Tuple[str, str]]",
    "Exec36Test": "Exec36Test",
    "Exec41Test": "Exec41Test",
    "Exec33Test": "Exec33Test",
    "java.util.Map<String,?>": "typing.Dict[str, typing.Any]",
    "java.util.Entry<String,String>": "typing.Tuple[str, str]",
    "java.util.function.IntFunction<String[]>": "typing.Callable[[int], typing.List[str]]",
    "Builder<T>": "Builder",
    "Builder<?>": "Builder",
    "java.lang.Process": "subprocess.Popen",
    "java.util.Vector<Process>": "typing.List[subprocess.Popen]",
    "java.util.function.Supplier<Watchdog>": "typing.Callable[[], Watchdog]",
    "java.util.concurrent.ThreadFactory": "threading.Thread",
    "java.util.Map<? super String,?>": "typing.Dict[str, typing.Any]",
    "java.util.Map<String,File>": "typing.Dict[str, pathlib.Path]",
    "Ljava.lang.String[]": "typing.List[typing.List[str]]",
    "WinNTCommandLauncher": "WinNTCommandLauncher",
    "java.util.function.Supplier<ExecuteWatchdog>": "typing.Callable[[], ExecuteWatchdog]",
    "java.util.function.Consumer<Process>": "typing.Callable[[subprocess.Popen], None]",
    "java.util.function.Supplier<String>": "typing.Callable[[], str]",
    "java.util.Map<String,V>": "typing.Dict[str, typing.Any]",
    "java.util.Vector<TimeoutObserver>": "typing.List[TimeoutObserver]",
    "java.lang.IllegalThreadStateException": "RuntimeError",
    "java.util.function.Function<Entry<String,String>,String>": "typing.Callable[[typing.Tuple[str, str]], str]",
    "java.util.HashMap<String,?>": "typing.Dict[str, typing.Any]",
    "java.io.PipedInputStream": "typing.Union[io.BytesIO, io.StringIO, io.BufferedReader]",
    "ProcessDestroyerThread": "ProcessDestroyerThread",
    "java.util.concurrent.TimeoutException": "TimeoutError",
    "java.util.Map<K,V>": "typing.Dict[typing.Any, typing.Any]",
    "java.util.HashMap<String,File>": "typing.Dict[str, pathlib.Path]",
    "java.util.Map<>.Entry<K,V>": "typing.Dict[typing.Any, typing.Any]",
    "java.util.HashMap<String,V>": "typing.Dict[str, typing.Any]",
    "java.util.function.Supplier<DefaultExecutor>": "typing.Callable[[], DefaultExecutor]",
    "WinSize": "WinSize",
    "Color": "Color",
    "AnsiType": "AnsiType",
    "WindowsSupport": "WindowsSupport",
    "MingwSupport": "MingwSupport",
    "OSInfo": "OSInfo",
    "java.lang.Redirect": "io.StringIO",
    "WindowsAnsiProcessor": "WindowsAnsiProcessor",
    "AnsiOutputStreamTest": "AnsiOutputStreamTest",
    "AnsiConsole": "AnsiConsole",
    "WINDOW_BUFFER_SIZE_RECORD": "WINDOW_BUFFER_SIZE_RECORD",
    "WidthSupplier": "WidthSupplier",
    "AnsiMain": "AnsiMain",
    "java.util.concurrent.Callable<Boolean>": "typing.Callable[[], bool]",
    "AnsiStringTest": "AnsiStringTest",
    "Attribute": "Attribute",
    "Colors": "Colors",
    "AnsiMode": "AnsiMode",
    "AnsiRendererTest": "AnsiRendererTest",
    "COORD": "COORD",
    "AnsiRenderer": "AnsiRenderer",
    "InstallUninstallTest": "InstallUninstallTest",
    "ZeroWidthSupplier": "ZeroWidthSupplier",
    "AnsiOutputStream": "AnsiOutputStream",
    "FOCUS_EVENT_RECORD": "FOCUS_EVENT_RECORD",
    "CHAR_INFO": "CHAR_INFO",
    "EncodingTest": "EncodingTest",
    "Termios": "Termios",
    "INPUT_RECORD": "INPUT_RECORD",
    "INPUT_RECORD[]": "typing.List[INPUT_RECORD]",
    "AnsiColors": "AnsiColors",
    "CLibrary": "CLibrary",
    "JansiLoaderTest": "JansiLoaderTest",
    "Consumer": "Consumer",
    "Ansi": "Ansi",
    "AnsiConsoleExample": "AnsiConsoleExample",
    "KEY_EVENT_RECORD": "KEY_EVENT_RECORD",
    "Erase": "Erase",
    "SMALL_RECT": "SMALL_RECT",
    "ColorsAnsiProcessor": "ColorsAnsiProcessor",
    "Code": "Code",
    "FastBufferedOutputStream": "FastBufferedOutputStream",
    "JansiLoader": "JansiLoader",
    "MENU_EVENT_RECORD": "MENU_EVENT_RECORD",
    "AnsiTest": "AnsiTest",
    "AnsiPrintStream": "AnsiPrintStream",
    "CONSOLE_SCREEN_BUFFER_INFO": "CONSOLE_SCREEN_BUFFER_INFO",
    "IoRunnable": "IoRunnable",
    "NoAnsi": "NoAnsi",
    "MOUSE_EVENT_RECORD": "MOUSE_EVENT_RECORD",
    "AnsiConsoleExample2": "AnsiConsoleExample2",
    "Kernel32Test": "Kernel32Test",
    "java.lang.UnsatisfiedLinkError": "typing.Union[IOError, OSError]",
    "Kernel32.CONSOLE_SCREEN_BUFFER_INFO": "Kernel32.CONSOLE_SCREEN_BUFFER_INFO",
    "java.lang.ProcessBuilder": "subprocess.Popen",
    "java.io.FileDescriptor": "io.RawIOBase",
    "AnsiOutputStream.IoRunnable": "AnsiOutputStream.IoRunnable",
    "java.lang.reflect.Constructor<?>": "typing.Callable[..., typing.Any]",
    "java.nio.file.StandardCopyOption": "typing.Any",
    "java.lang.InheritableThreadLocal<Boolean>": "contextvars.ContextVar[typing.TypeVar('T', bound=bool)]",
    "Kernel32": "Kernel32",
    "java.util.concurrent.atomic.AtomicReference<String>": "typing.Generic[typing.TypeVar('T', bound=str)]",
    "java.io.IOError": "typing.Union[IOError, OSError]",
    "java.lang.ProcessBuilder.Redirect": "typing.Any",
    "Ansi.Color": "Ansi.Color",
    "AnsiOutputStream.ZeroWidthSupplier": "AnsiOutputStream.ZeroWidthSupplier",
    "CLibrary.WinSize": "CLibrary.WinSize",
    "java.util.Iterator<Object>": "typing.Iterator[typing.Any]",
    "AnsiOutputStream.WidthSupplier": "AnsiOutputStream.WidthSupplier",
    "AnsiProcessor": "AnsiProcessor",
    "BenchmarkSkippable": "BenchmarkSkippable",
    "BenchmarkOffsettedSeries": "BenchmarkOffsettedSeries",
    "IntegratedIntegerCODEC": "IntegratedIntegerCODEC",
    "S9": "S9",
    "BenchmarkBitPacking": "BenchmarkBitPacking",
    "OptPFDS9": "OptPFDS9",
    "TestUtils": "TestUtils",
    "LongAs2IntsCodec": "LongAs2IntsCodec",
    "BasicTest": "BasicTest",
    "IntegerCODEC": "IntegerCODEC",
    "UniformDataGenerator": "UniformDataGenerator",
    "DeltaZigzagVariableByte": "DeltaZigzagVariableByte",
    "SpotChecker": "SpotChecker",
    "ByteLongCODEC": "ByteLongCODEC",
    "SkippableIntegerCODEC": "SkippableIntegerCODEC",
    "VariableByte": "VariableByte",
    "FastPFOR128": "FastPFOR128",
    "SkippableLongCODEC": "SkippableLongCODEC",
    "UncompressibleInputException": "UncompressibleInputException",
    "IntegratedBitPacking": "IntegratedBitPacking",
    "java.util.stream.LongStream": "typing.Iterator[int]",
    "IntegratedVariableByte": "IntegratedVariableByte",
    "SkippableIntegratedIntegerCODEC": "SkippableIntegratedIntegerCODEC",
    "XorBinaryPackingTest": "XorBinaryPackingTest",
    "IntCompressor": "IntCompressor",
    "PForDeltaUnpack128": "PForDeltaUnpack128",
    "IntegratedLongCODEC": "IntegratedLongCODEC",
    "LongClusteredDataGenerator": "LongClusteredDataGenerator",
    "LongComposition": "LongComposition",
    "ClusteredDataGenerator": "ClusteredDataGenerator",
    "GroupSimple9": "GroupSimple9",
    "BitPacking": "BitPacking",
    "Timer": "Timer",
    "IntegratedIntCompressor": "IntegratedIntCompressor",
    "Format": "Format",
    "ResourcedTest": "ResourcedTest",
    "IntegratedIntegerCODEC[]": "typing.List[IntegratedIntegerCODEC]",
    "ByteBasicTest": "ByteBasicTest",
    "ByteIntegerCODEC": "ByteIntegerCODEC",
    "TestLongAs2IntsCodec": "TestLongAs2IntsCodec",
    "OptPFDS16": "OptPFDS16",
    "IntegratedComposition": "IntegratedComposition",
    "RoaringIntPacking": "RoaringIntPacking",
    "PForDeltaUnpack128WIthIntBuffer": "PForDeltaUnpack128WIthIntBuffer",
    "NewPFDS9": "NewPFDS9",
    "SkippableLongBasicTest": "SkippableLongBasicTest",
    "LongVariableByte": "LongVariableByte",
    "LongTestUtils": "LongTestUtils",
    "NewPFDS16": "NewPFDS16",
    "Simple16": "Simple16",
    "LongDelta": "LongDelta",
    "OptPFD": "OptPFD",
    "java.nio.ByteOrder": "io.BytesIO",
    "Simple16WithHardCodes": "Simple16WithHardCodes",
    "NewPFD": "NewPFD",
    "Delta": "Delta",
    "ExampleTest": "ExampleTest",
    "Benchmark": "Benchmark",
    "BinaryPacking": "BinaryPacking",
    "DeltaZigzagBinaryPacking": "DeltaZigzagBinaryPacking",
    "BenchmarkCSV": "BenchmarkCSV",
    "LCPForDelta": "LCPForDelta",
    "SkippableIntegratedComposition": "SkippableIntegratedComposition",
    "SkippableBasicTest": "SkippableBasicTest",
    "JustCopy": "JustCopy",
    "BoundaryTest": "BoundaryTest",
    "PerformanceLogger": "PerformanceLogger",
    "IntegratedBinaryPacking": "IntegratedBinaryPacking",
    "Kamikaze": "Kamikaze",
    "XorBinaryPacking": "XorBinaryPacking",
    "LongBasicTest": "LongBasicTest",
    "S16": "S16",
    "LongUniformDataGenerator": "LongUniformDataGenerator",
    "IntegratedByteIntegerCODEC": "IntegratedByteIntegerCODEC",
    "PForDelta": "PForDelta",
    "LongUtil": "LongUtil",
    "Composition": "Composition",
    "IntCompressorTest": "IntCompressorTest",
    "IntWrapper": "IntWrapper",
    "FastPFOR": "FastPFOR",
    "CompressionMode": "CompressionMode",
    "DeltaZigzagEncodingTest": "DeltaZigzagEncodingTest",
    "SkippableLongComposition": "SkippableLongComposition",
    "Simple9": "Simple9",
    "LongJustCopy": "LongJustCopy",
    "DeltaZigzagEncoding": "DeltaZigzagEncoding",
    "SkippableComposition": "SkippableComposition",
    "TestLongVariableByte": "TestLongVariableByte",
    "LongCODEC": "LongCODEC",
    "java.nio.LongBuffer": "typing.Union[array.array, typing.List[int]]",
    "java.util.function.LongUnaryOperator": "typing.Callable[[int], int]",
    "IntegerCODEC[]": "typing.List[IntegerCODEC]",
    "AdhocTest": "AdhocTest",
    "LongCODEC[]": "typing.List[LongCODEC]",
    "java.util.Iterator<Long>": "typing.Iterator[int]",
    "SkippableIntegerCODEC[]": "typing.List[SkippableIntegerCODEC]",
    "IntCompressor[]": "typing.List[IntCompressor]",
    "ByteIntegerCODEC[]": "typing.List[ByteIntegerCODEC]",
    "IntegratedByteIntegerCODEC[]": "typing.List[IntegratedByteIntegerCODEC]",
    "java.util.Set<Long>": "typing.Set[int]",
    "java.util.HashSet<Long>": "typing.Set[int]",
    "SkippableLongCODEC[]": "typing.List[SkippableLongCODEC]",
    "IntegratedIntCompressor[]": "typing.List[IntegratedIntCompressor]",
    "java.util.ArrayList<int[]>": "typing.List[typing.List[int]]",
    "java.nio.IntBuffer": "typing.Union[array.array, typing.List[int]]"
}
