{
    "UtilTest": "UtilTest",
    "typing.Iterator[str]": "java.util.ListIterator<String>",
    "typing.List[typing.Any]": "java.util.Stack<V>",
    "PatternOptionBuilderTest": "PatternOptionBuilderTest",
    "typing.Union[urllib.error.URLError, ValueError]": "java.net.URISyntaxException",
    "typing.Callable[[Option, Option], int]": "java.util.Comparator<Option>",
    "typing.Any": "java.lang.ProcessBuilder.Redirect",
    "typing.Type[str]": "java.lang.Class<String>",
    "int": "java.util.concurrent.atomic.AtomicLong",
    "typing.OrderedDict[str, OptionGroup]": "java.util.LinkedHashMap<String,OptionGroup>",
    "AlreadySelectedException": "AlreadySelectedException",
    "ValuesTest": "ValuesTest",
    "NotInstantiable": "NotInstantiable",
    "typing.Union[urllib.parse.ParseResult, urllib.parse.SplitResult, urllib.parse.DefragResult, str]": "java.net.URI",
    "TestOption": "TestOption",
    "typing.Union[typing.List, io.TextIOBase]": "java.lang.Appendable",
    "str": "java.util.StringTokenizer",
    "PosixParser": "PosixParser",
    "GnuParser": "GnuParser",
    "typing.List[Option]": "java.util.List<Option>",
    "Instantiable": "Instantiable",
    "OptionsTest": "OptionsTest",
    "typing.Union[io.BytesIO, bytearray]": "java.io.ByteArrayInputStream",
    "ValueTest": "ValueTest",
    "typing.Type[typing.Any]": "java.lang.Class<? extends T>",
    "typing.Iterator[typing.Any]": "java.util.Iterator<Object>",
    "PosixParserTest": "PosixParserTest",
    "typing.List[io.StringIO]": "java.util.ArrayList<StringBuffer>",
    "Exception": "java.lang.reflect.InvocationTargetException",
    "TypeHandler": "TypeHandler",
    "typing.Union[IOError, OSError]": "java.io.IOError",
    "UnrecognizedOptionException": "UnrecognizedOptionException",
    "ApplicationTest": "ApplicationTest",
    "typing.Type[pathlib.Path]": "java.lang.Class<File>",
    "io.BufferedReader": "java.io.BufferedReader",
    "BugCLI252Test": "BugCLI252Test",
    "typing.Dict[str, Option]": "java.util.Map<String,Option>",
    "Options": "Options",
    "TypeHandlerTest": "TypeHandlerTest",
    "typing.List[pathlib.Path]": "java.io.File[]",
    "typing.Union[int, float, numbers.Number]": "java.lang.Number",
    "BugCLI265Test": "BugCLI265Test",
    "ArgumentIsOptionTest": "ArgumentIsOptionTest",
    "typing.Set[OptionGroup]": "java.util.HashSet<OptionGroup>",
    "typing.Union[typing.Iterator[typing.Any], typing.Generator[typing.Any, typing.Any, typing.Any]]": "java.util.Enumeration<Locale>",
    "bool": "java.util.concurrent.atomic.AtomicBoolean",
    "BugCLI162Test": "BugCLI162Test",
    "OptionValidator": "OptionValidator",
    "MissingArgumentException": "MissingArgumentException",
    "PatternOptionBuilder": "PatternOptionBuilder",
    "typing.Type[typing.Union[io.FileIO, io.BufferedReader, io.TextIOWrapper]]": "java.lang.Class<FileInputStream>",
    "DefaultParserTest": "DefaultParserTest",
    "OptionGroupTest": "OptionGroupTest",
    "Builder": "Builder<?>",
    "DefaultParser": "DefaultParser",
    "BasicParser": "BasicParser",
    "BugsTest": "BugsTest",
    "CommandLineParser": "CommandLineParser",
    "typing.Type[typing.List[pathlib.Path]]": "java.lang.Class<File[]>",
    "typing.List[str]": "char[]",
    "typing.List": "Arguments",
    "ParserTestCase": "ParserTestCase",
    "typing.Collection": "java.util.Collections",
    "typing.Union[RuntimeError, NotImplementedError, NameError]": "java.lang.UnsupportedOperationException",
    "HelpFormatterTest": "HelpFormatterTest",
    "GnuParserTest": "GnuParserTest",
    "BugCLI71Test": "BugCLI71Test",
    "BugCLI133Test": "BugCLI133Test",
    "DisablePartialMatchingTest": "DisablePartialMatchingTest",
    "BugCLI148Test": "BugCLI148Test",
    "OptionComparator": "OptionComparator",
    "OptionTest": "OptionTest",
    "typing.Type[typing.Union[datetime.date, datetime.datetime]]": "java.lang.Class<Date>",
    "pathlib.Path": "java.nio.file.Path",
    "RuntimeError": "java.lang.IllegalThreadStateException",
    "Util": "Util",
    "BasicParserTest": "BasicParserTest",
    "unittest.TestCase": "TestCase",
    "typing.OrderedDict[str, Option]": "java.util.LinkedHashMap<String,Option>",
    "typing.Union[typing.List[str], io.StringIO]": "java.lang.StringBuilder",
    "HelpFormatter": "HelpFormatter",
    "MissingOptionException": "MissingOptionException",
    "io.StringIO": "java.lang.Redirect",
    "TypeError": "java.lang.CloneNotSupportedException",
    "DefaultOption": "DefaultOption",
    "ParseException": "ParseException",
    "CommandLine": "CommandLine",
    "CommandLineTest": "CommandLineTest",
    "BugCLI18Test": "BugCLI18Test",
    "AmbiguousOptionException": "AmbiguousOptionException",
    "typing.Iterator[Option]": "java.util.Iterator<Option>",
    "typing.Union[datetime.datetime, datetime.date, datetime.time, datetime.timedelta, datetime.timezone]": "java.util.Calendar",
    "OptionBuilder": "OptionBuilder",
    "typing.Collection[str]": "java.util.Collection<String>",
    "OptionBuilderTest": "OptionBuilderTest",
    "typing.Type[typing.Union[urllib.parse.ParseResult, urllib.parse.SplitResult, urllib.parse.DefragResult, str]]": "java.lang.Class<URL>",
    "OptionGroup": "OptionGroup",
    "typing.List[OptionGroup]": "java.util.ArrayList<OptionGroup>",
    "typing.IO": "java.io.PrintStream",
    "typing.Type[typing.Union[int, float, numbers.Number]]": "java.lang.Class<Number>",
    "BugCLI13Test": "BugCLI13Test",
    "typing.Collection[Option]": "java.util.Collection<Option>",
    "float": "float",
    "FileNotFoundError": "java.io.FileNotFoundException",
    "typing.Union[configparser.ConfigParser, typing.Dict]": "java.util.Properties",
    "BugCLI266Test": "BugCLI266Test",
    "typing.Union[io.FileIO, io.BufferedReader]": "java.io.FileInputStream",
    "typing.ModuleType": "java.lang.System",
    "typing.Union[ValueError, TypeError]": "java.lang.NumberFormatException",
    "typing.Dict[str, OptionGroup]": "java.util.Map<String,OptionGroup>",
    "ValueError": "java.lang.IllegalArgumentException",
    "Parser": "Parser",
    "typing.Collection[OptionGroup]": "java.util.Collection<OptionGroup>",
    "typing.Union[ModuleNotFoundError, ImportError]": "java.lang.ClassNotFoundException",
    "None": "void",
    "Option": "Option",
    "typing.Union[io.TextIOWrapper, io.StringIO]": "java.io.PrintWriter",
    "typing.Union[datetime.datetime, datetime.date]": "java.util.Date",
    "AllocateDirectHexTest": "AllocateDirectHexTest",
    "Caverphone2": "Caverphone2",
    "re.Match": "java.util.regex.Matcher",
    "Base16OutputStream": "Base16OutputStream",
    "Nysiis": "Nysiis",
    "Base64InputStream": "Base64InputStream",
    "DecoderException": "DecoderException",
    "typing.Dict[str, typing.Dict[str, typing.List[Rule]]]": "java.util.HashMap<String,Map<String,List<Rule>>>",
    "BinaryCodec": "BinaryCodec",
    "typing.List[bool]": "boolean[]",
    "Charsets": "Charsets",
    "typing.Set[str]": "java.util.Set<String>",
    "StringDecoder": "StringDecoder",
    "NameType": "NameType",
    "StringEncoderAbstractTest": "StringEncoderAbstractTest",
    "AssertionError": "AssertionFailedError",
    "Encoder": "Encoder",
    "Blake3": "Blake3",
    "Base64Test": "Base64Test",
    "StringEncoderAbstractTest[Soundex]": "StringEncoderAbstractTest<Soundex>",
    "typing.List[typing.List[int]]": "java.util.ArrayList<int[]>",
    "typing.List[typing.List[typing.Any]]": "java.util.LinkedList<List<V>>",
    "Base16TestData": "Base16TestData",
    "BaseNCodecTest": "BaseNCodecTest",
    "typing.Set[Branch]": "java.util.Set<Branch>",
    "RuleType": "RuleType",
    "Phoneme": "Phoneme",
    "Base16": "Base16",
    "StringEncoderAbstractTest[ColognePhonetic]": "StringEncoderAbstractTest<ColognePhonetic>",
    "typing.OrderedDict[Branch, None]": "java.util.LinkedHashSet<Branch>",
    "B64Test": "B64Test",
    "subprocess.Popen": "java.lang.ProcessBuilder",
    "BaseNCodecOutputStream": "BaseNCodecOutputStream",
    "EngineState": "EngineState",
    "typing.Dict[NameType, Lang]": "java.util.Map<NameType,Lang>",
    "typing.Callable[[typing.Any, typing.Any], int]": "java.util.Comparator<W>",
    "Context": "Context",
    "RunTest": "RunTest",
    "typing.List[BenchResult]": "java.util.List<BenchResult>",
    "PhoneticEngineRegressionTest": "PhoneticEngineRegressionTest",
    "BaseNTestData": "BaseNTestData",
    "BinaryCodecTest": "BinaryCodecTest",
    "typing.Generic[typing.TypeVar('T')]": "java.lang.reflect.ParameterizedType",
    "typing.List[int]": "java.util.List<AtomicLong>",
    "RefinedSoundex": "RefinedSoundex",
    "ResourceConstants": "ResourceConstants",
    "RFC1522Codec": "RFC1522Codec",
    "BaseNCodec": "BaseNCodec",
    "NoOpBaseNCodec": "NoOpBaseNCodec",
    "Resources": "Resources",
    "MetaphoneTest": "MetaphoneTest",
    "typing.OrderedDict[Phoneme, None]": "java.util.LinkedHashSet<Phoneme>",
    "typing.Dict[NameType, typing.Dict[RuleType, typing.Dict[str, typing.Dict[str, typing.List[Rule]]]]]": "java.util.EnumMap<NameType,Map<RuleType,Map<String,Map<String,List<Rule>>>>>",
    "QuotedPrintableCodec": "QuotedPrintableCodec",
    "typing.Dict[str, str]": "java.util.HashMap<String,String>",
    "typing.Callable[[Phoneme, Phoneme], int]": "java.util.Comparator<Phoneme>",
    "StringEncoderAbstractTest[DaitchMokotoffSoundex]": "StringEncoderAbstractTest<DaitchMokotoffSoundex>",
    "Table": "Table",
    "BinaryDecoder": "BinaryDecoder",
    "typing.List[Phoneme]": "java.util.ArrayList<Phoneme>",
    "typing.Dict[Phoneme, Phoneme]": "java.util.Map<Phoneme,Phoneme>",
    "Base16InputStreamTest": "Base16InputStreamTest",
    "MurmurHash2": "MurmurHash2",
    "Decoder": "Decoder",
    "typing.Union[UnicodeEncodeError, ValueError]": "java.io.UnsupportedEncodingException",
    "HmacAlgorithms": "HmacAlgorithms",
    "Caverphone2Test": "Caverphone2Test",
    "Caverphone1": "Caverphone1",
    "StringEncoderAbstractTest[Nysiis]": "StringEncoderAbstractTest<Nysiis>",
    "Hex": "Hex",
    "typing.Callable[..., typing.Any]": "java.lang.reflect.Constructor<?>",
    "SoundexTest": "SoundexTest",
    "RPattern": "RPattern",
    "typing.List[typing.List[str]]": "Ljava.lang.String[]",
    "IndexError": "java.lang.ArrayIndexOutOfBoundsException",
    "Rule": "Rule",
    "Base16InputStream": "Base16InputStream",
    "typing.Union[io.BytesIO, io.StringIO, io.BufferedWriter]": "java.io.PipedOutputStream",
    "SomeLanguages": "SomeLanguages",
    "typing.Dict[NameType, Languages]": "java.util.Map<NameType,Languages>",
    "typing.Dict[RuleType, typing.Dict[str, typing.Dict[str, typing.List[Rule]]]]": "java.util.EnumMap<RuleType,Map<String,Map<String,List<Rule>>>>",
    "CologneInputBuffer": "CologneInputBuffer",
    "NysiisTest": "NysiisTest",
    "typing.Set[Phoneme]": "java.util.Set<Phoneme>",
    "BaseException": "java.lang.Throwable",
    "IncrementalHash32x86": "IncrementalHash32x86",
    "MatchRatingApproachEncoderTest": "MatchRatingApproachEncoderTest",
    "PhoneticEngineTest": "PhoneticEngineTest",
    "HexTest": "HexTest",
    "CologneOutputBuffer": "CologneOutputBuffer",
    "StringEncoderAbstractTest[Caverphone2]": "StringEncoderAbstractTest<Caverphone2>",
    "typing.Union[TypeError, ValueError]": "java.lang.ClassCastException",
    "LangRule": "LangRule",
    "Sha2CryptTest": "Sha2CryptTest",
    "CologneBuffer": "CologneBuffer",
    "typing.Iterable[Phoneme]": "java.lang.Iterable<Phoneme>",
    "typing.List[Branch]": "java.util.List<Branch>",
    "typing.Union[LookupError, UnicodeError]": "java.nio.charset.UnsupportedCharsetException",
    "Base32Test": "Base32Test",
    "PhonemeExpr": "PhonemeExpr",
    "threading.Thread": "java.util.concurrent.ThreadFactory",
    "MessageDigestAlgorithms": "MessageDigestAlgorithms",
    "IncrementalHash32": "IncrementalHash32",
    "MatchRatingApproachEncoder": "MatchRatingApproachEncoder",
    "PureJavaCrc32Test": "PureJavaCrc32Test",
    "typing.Union[io.BufferedWriter, io.RawIOBase]": "java.io.FilterOutputStream",
    "DoubleMetaphone2Test": "DoubleMetaphone2Test",
    "typing.List[typing.Type[typing.Any]]": "java.lang.Class<?>[]",
    "XXHash32Test": "XXHash32Test",
    "DoubleMetaphoneResult": "DoubleMetaphoneResult",
    "TestData": "TestData",
    "typing.Iterable[str]": "java.util.stream.Stream<String>",
    "Base64TestData": "Base64TestData",
    "PercentCodec": "PercentCodec",
    "typing.Dict[str, typing.List[Rule]]": "java.util.Map<Character,List<Rule>>",
    "re.Pattern": "java.util.regex.Pattern",
    "Base32InputStreamTest": "Base32InputStreamTest",
    "Base16Test": "Base16Test",
    "typing.List[LangRule]": "java.util.ArrayList<LangRule>",
    "AbstractCaverphone": "AbstractCaverphone",
    "QuotedPrintableCodecTest": "QuotedPrintableCodecTest",
    "B64": "B64",
    "typing.Dict[typing.Any, typing.Any]": "java.util.Map<>.Entry<K,V>",
    "RefinedSoundexTest": "RefinedSoundexTest",
    "RuleTest": "RuleTest",
    "QCodecTest": "QCodecTest",
    "Base32": "Base32",
    "typing.Generic[typing.TypeVar('T', bound=typing.Any)]": "java.lang.Comparable<? super E>",
    "typing.Union[io.BytesIO, io.StringIO, io.BufferedReader]": "java.io.PipedInputStream",
    "UnixCrypt": "UnixCrypt",
    "StringUtilsTest": "StringUtilsTest",
    "typing.Generic[typing.TypeVar('T', boud=typing.Any)]": "java.lang.Comparable<?>",
    "codecs.Codec": "java.nio.charset.StandardCharsets",
    "BaseNCodecInputStream": "BaseNCodecInputStream",
    "typing.Type[BaseException]": "java.lang.Class<? extends Throwable>",
    "HmacUtils": "HmacUtils",
    "DaitchMokotoffSoundex": "DaitchMokotoffSoundex",
    "DecoderExceptionTest": "DecoderExceptionTest",
    "EncoderExceptionTest": "EncoderExceptionTest",
    "BeiderMorseEncoderTest": "BeiderMorseEncoderTest",
    "DaitchMokotoffSoundexTest": "DaitchMokotoffSoundexTest",
    "typing.Union[TypeError, AttributeError, ValueError]": "java.lang.NullPointerException",
    "PhoneticEnginePerformanceTest": "PhoneticEnginePerformanceTest",
    "CharEncoding": "CharEncoding",
    "Branch": "Branch",
    "typing.List[typing.List[Phoneme]]": "Phoneme[][]",
    "CharSequenceUtils": "CharSequenceUtils",
    "CacheSubSequencePerformanceTest": "CacheSubSequencePerformanceTest",
    "typing.Collection[typing.List[typing.Any]]": "java.util.Collection<List<V>>",
    "MurmurHash3": "MurmurHash3",
    "BCodec": "BCodec",
    "ChunkState": "ChunkState",
    "CharsetsTest": "CharsetsTest",
    "BeiderMorseEncoder": "BeiderMorseEncoder",
    "PureJavaCrc32": "PureJavaCrc32",
    "typing.Set[typing.Any]": "java.util.Set<?>",
    "Base64": "Base64",
    "typing.Dict[NameType, typing.Set[str]]": "java.util.EnumMap<NameType,Set<String>>",
    "Md5Crypt": "Md5Crypt",
    "Metaphone": "Metaphone",
    "PhonemeList": "PhonemeList",
    "EncoderException": "EncoderException",
    "Sha2Crypt": "Sha2Crypt",
    "random.Random": "java.util.concurrent.ThreadLocalRandom",
    "Base32OutputStream": "Base32OutputStream",
    "StopIteration": "java.util.NoSuchElementException",
    "BinaryEncoder": "BinaryEncoder",
    "BCodecTest": "BCodecTest",
    "BenchResult": "BenchResult",
    "Base64OutputStream": "Base64OutputStream",
    "QCodec": "QCodec",
    "typing.List[Rule]": "java.util.List<Rule>",
    "UtilsTest": "UtilsTest",
    "Base32InputStream": "Base32InputStream",
    "StringEncoderAbstractTest[MatchRatingApproachEncoder]": "StringEncoderAbstractTest<MatchRatingApproachEncoder>",
    "Soundex": "Soundex",
    "StringUtils": "StringUtils",
    "RulesApplication": "RulesApplication",
    "Crypt": "Crypt",
    "MurmurHash3Test": "MurmurHash3Test",
    "typing.List[TestData]": "TestData[]",
    "PureJavaCrc32CTest": "PureJavaCrc32CTest",
    "typing.Union[io.FileIO, io.BufferedWriter]": "java.io.FileOutputStream",
    "PhoneticEngine": "PhoneticEngine",
    "URLCodecTest": "URLCodecTest",
    "CharSequenceUtilsTest": "CharSequenceUtilsTest",
    "DoubleMetaphoneTest": "DoubleMetaphoneTest",
    "RFC1522CodecTest": "RFC1522CodecTest",
    "PureJavaCrc32C": "PureJavaCrc32C",
    "ColognePhonetic": "ColognePhonetic",
    "Base16OutputStreamTest": "Base16OutputStreamTest",
    "PhonemeBuilder": "PhonemeBuilder",
    "MurmurHash2Test": "MurmurHash2Test",
    "XXHash32OverflowTest": "XXHash32OverflowTest",
    "Base64Codec13Test": "Base64Codec13Test",
    "Blake3Test": "Blake3Test",
    "ColognePhoneticTest": "ColognePhoneticTest",
    "CodecPolicy": "CodecPolicy",
    "StringEncoderAbstractTest[Metaphone]": "StringEncoderAbstractTest<Metaphone>",
    "StringEncoderAbstractTest[Caverphone1]": "StringEncoderAbstractTest<Caverphone1>",
    "StringEncoder": "StringEncoder",
    "RFC1522TestCodec": "RFC1522TestCodec",
    "StringEncoderAbstractTest[StringEncoder]": "StringEncoderAbstractTest<StringEncoder>",
    "Caverphone": "Caverphone",
    "CharEncodingTest": "CharEncodingTest",
    "StringEncoderAbstractTest[DoubleMetaphone]": "StringEncoderAbstractTest<DoubleMetaphone>",
    "Output": "Output",
    "StringEncoderComparatorTest": "StringEncoderComparatorTest",
    "Base64OutputStreamTest": "Base64OutputStreamTest",
    "io.TextIOWrapper": "java.io.OutputStreamWriter",
    "Base32OutputStreamTest": "Base32OutputStreamTest",
    "StringEncoderComparator": "StringEncoderComparator",
    "Codec105ErrorInputStream": "Codec105ErrorInputStream",
    "typing.Union[io.BufferedReader, io.RawIOBase]": "java.io.FilterInputStream",
    "Caverphone1Test": "Caverphone1Test",
    "Utils": "Utils",
    "MemoryError": "java.lang.OutOfMemoryError",
    "URLCodec": "URLCodec",
    "typing.Callable[[Rule, Rule], int]": "java.util.Comparator<Rule>",
    "typing.Union[bytearray, memoryview]": "java.nio.ByteBuffer",
    "Languages": "Languages",
    "LanguageGuessingTest": "LanguageGuessingTest",
    "typing.List[float]": "double[]",
    "SoundexUtils": "SoundexUtils",
    "Blake3TestVectorsTest": "Blake3TestVectorsTest",
    "DoubleMetaphone": "DoubleMetaphone",
    "PerformanceTest": "PerformanceTest",
    "XXHash32": "XXHash32",
    "Base64InputStreamTest": "Base64InputStreamTest",
    "StringEncoderAbstractTest[RefinedSoundex]": "StringEncoderAbstractTest<RefinedSoundex>",
    "Digest": "Digest",
    "BinaryEncoderAbstractTest": "BinaryEncoderAbstractTest",
    "PercentCodecTest": "PercentCodecTest",
    "LanguageSet": "LanguageSet",
    "Lang": "Lang",
    "Base32TestData": "Base32TestData",
    "typing.Callable[[typing.List[typing.Any]], typing.List]": "java.util.function.Function<Object[],Arguments>",
    "typing.Iterable[CSVRecord]": "java.lang.Iterable<CSVRecord>",
    "typing.Callable[[typing.List], bool]": "java.util.function.Predicate<Arguments>",
    "typing.Callable[[CSVRecord], typing.List[str]]": "java.util.function.Function<CSVRecord,List<String>>",
    "Predefined": "Predefined",
    "JiraCsv203Test": "JiraCsv203Test",
    "typing.Union[io.StringIO, multiprocessing.Queue, multiprocessing.Pipe]": "java.io.PipedWriter",
    "IOUtils": "IOUtils",
    "JiraCsv148Test": "JiraCsv148Test",
    "JiraCsv263Test": "JiraCsv263Test",
    "Stats": "Stats",
    "JiraCsv288Test": "JiraCsv288Test",
    "CSVRecord": "CSVRecord",
    "pickle.Pickler": "java.io.ObjectOutputStream",
    "typing.Iterable[typing.List]": "java.util.stream.Stream<? extends Arguments>",
    "JiraCsv93Test": "JiraCsv93Test",
    "typing.Callable[[int], str]": "java.util.function.IntFunction<String>",
    "typing.Callable[[str, int], None]": "java.util.function.BiConsumer<String,Integer>",
    "typing.Iterable[typing.Any]": "java.lang.Iterable<E>",
    "CSVPrinter": "CSVPrinter",
    "typing.Iterable[pathlib.Path]": "java.util.stream.Stream<File>",
    "JiraCsv271Test": "JiraCsv271Test",
    "CSVPrinterTest": "CSVPrinterTest",
    "typing.Iterator[CSVRecord]": "java.util.Iterator<CSVRecord>",
    "os.DirEntry": "java.io.FilenameFilter",
    "EmptyEnum": "EmptyEnum",
    "typing.OrderedDict[typing.Any, typing.Any]": "java.util.LinkedHashMap<K,V>",
    "typing.Union[str, typing.List[str], io.StringIO]": "java.nio.CharBuffer",
    "typing.List[CSVRecord]": "java.util.List<CSVRecord>",
    "CSVParserFactory": "CSVParserFactory",
    "pickle.Unpickler": "java.io.ObjectInputStream",
    "io.BufferedIOBase": "java.io.Flushable",
    "CSVFormatTest": "CSVFormatTest",
    "gzip.GzipFile": "java.util.zip.GZIPInputStream",
    "Token": "Token",
    "CSVParser": "CSVParser",
    "Assertions": "Assertions",
    "CSVParserTest": "CSVParserTest",
    "typing.Callable[[CSVRecord], None]": "java.util.function.Consumer<CSVRecord>",
    "Header": "Header",
    "typing.Callable[[typing.List], typing.Iterable[typing.List]]": "java.util.function.Function<Arguments,Stream<? extends Arguments>>",
    "CSVRecordIterator": "CSVRecordIterator",
    "IOUtilsTest": "IOUtilsTest",
    "typing.Iterator": "java.util.Spliterators",
    "typing.OrderedDict[str, int]": "java.util.LinkedHashMap<String,Integer>",
    "typing.Dict[str, int]": "java.util.TreeMap<String,Integer>",
    "typing.Union[inspect.Signature, typing.Callable]": "java.lang.reflect.Method",
    "ExtendedBufferedReaderTest": "ExtendedBufferedReaderTest",
    "typing.Union[io.TextIOWrapper, io.BufferedWriter, io.TextIOBase]": "java.io.Writer",
    "JiraCsv253Test": "JiraCsv253Test",
    "Type": "Type",
    "CSVFormatPredefinedTest": "CSVFormatPredefinedTest",
    "Lexer": "Lexer",
    "JiraCsv248Test": "JiraCsv248Test",
    "typing.Union[io.TextIOWrapper, io.BufferedReader, io.TextIOBase]": "java.io.Reader",
    "CSVFormat": "CSVFormat",
    "typing.Type[Lexer]": "java.lang.Class<Lexer>",
    "CSVFileParserTest": "CSVFileParserTest",
    "Constants": "Constants",
    "JiraCsv249Test": "JiraCsv249Test",
    "Headers": "Headers",
    "typing.Union[os.PathLike, os.DirEntry]": "java.nio.file.Files",
    "ExtendedBufferedReader": "ExtendedBufferedReader",
    "QuoteMode": "QuoteMode",
    "typing.Callable[[typing.Any], None]": "java.util.function.Consumer<?>",
    "LexerTest": "LexerTest",
    "typing.Union[bytearray, array.array, memoryview]": "java.nio.Buffer",
    "io.IOBase": "java.io.Closeable",
    "typing.Callable": "java.lang.Runnable",
    "JiraCsv290Test": "JiraCsv290Test",
    "typing.Callable[..., Lexer]": "java.lang.reflect.Constructor<Lexer>",
    "CSVDuplicateHeaderTest": "CSVDuplicateHeaderTest",
    "enum.Enum": "Enum<?>",
    "DuplicateHeaderMode": "DuplicateHeaderMode",
    "collections.namedtuple": "java.text.ParsePosition",
    "Form": "Form",
    "IBANValidator": "IBANValidator",
    "CurrencyValidatorTest": "CurrencyValidatorTest",
    "CurrencyValidator": "CurrencyValidator",
    "typing.Dict[str, Validator]": "java.util.Map<String,Validator>",
    "http.client.HTTPConnection": "java.net.HttpURLConnection",
    "ISSNValidator": "ISSNValidator",
    "typing.Dict[str, typing.List[str]]": "java.util.Map<String,List<String>>",
    "typing.Union[zoneinfo.ZoneInfo, datetime.timezone]": "java.util.TimeZone",
    "IBANCheckDigit": "IBANCheckDigit",
    "Item": "Item",
    "calendar.TextCalendar": "java.text.DateFormatSymbols",
    "DomainValidatorTest": "DomainValidatorTest",
    "typing.Dict[str, ResultStatus]": "java.util.HashMap<String,ResultStatus>",
    "typing.List[ResultPair]": "ResultPair[]",
    "typing.List[typing.Dict[str, Arg]]": "java.util.Map<String,Arg>[]",
    "typing.Iterator[typing.Tuple[str, str]]": "java.util.Iterator<Entry<String,String>>",
    "Validator": "Validator",
    "ValidatorResults": "ValidatorResults",
    "SedolCheckDigitTest": "SedolCheckDigitTest",
    "EAN13CheckDigit": "EAN13CheckDigit",
    "CreditCardValidatorTest": "CreditCardValidatorTest",
    "TypeBean": "TypeBean",
    "Mastercard": "Mastercard",
    "CUSIPCheckDigit": "CUSIPCheckDigit",
    "TimeValidator": "TimeValidator",
    "PercentValidator": "PercentValidator",
    "ShortValidator": "ShortValidator",
    "AbstractFormatValidator": "AbstractFormatValidator",
    "AbstractNumberValidator": "AbstractNumberValidator",
    "typing.Iterator[Field]": "java.util.Iterator<Field>",
    "ModulusTenABACheckDigitTest": "ModulusTenABACheckDigitTest",
    "ArrayType": "ArrayType",
    "VerhoeffCheckDigitTest": "VerhoeffCheckDigitTest",
    "AbstractCheckDigitTest": "AbstractCheckDigitTest",
    "UrlTest": "UrlTest",
    "FloatValidatorTest": "FloatValidatorTest",
    "UrlValidator": "UrlValidator",
    "ModulusTenCUSIPCheckDigitTest": "ModulusTenCUSIPCheckDigitTest",
    "FieldTest": "FieldTest",
    "ISBNCheckDigit": "ISBNCheckDigit",
    "typing.Iterator[typing.Tuple[str, typing.Any]]": "java.util.Iterator<Entry<String,Object>>",
    "FloatValidator": "FloatValidator",
    "Arg": "Arg",
    "VerhoeffCheckDigit": "VerhoeffCheckDigit",
    "CodeValidatorTest": "CodeValidatorTest",
    "typing.Dict[str, typing.Any]": "java.util.HashMap<String,V>",
    "ISINValidatorTest": "ISINValidatorTest",
    "EmailValidator": "EmailValidator",
    "IntegerValidatorTest": "IntegerValidatorTest",
    "ModulusTenLuhnCheckDigitTest": "ModulusTenLuhnCheckDigitTest",
    "typing.List[Validator]": "Validator[]",
    "typing.Dict[str, ValidatorResult]": "java.util.HashMap<String,ValidatorResult>",
    "ByteValidator": "ByteValidator",
    "typing.Dict[str, Form]": "java.util.Map<String,Form>",
    "ResultPair": "ResultPair",
    "ValidatorResources": "ValidatorResources",
    "TimeValidatorTest": "TimeValidatorTest",
    "InetAddressValidatorTest": "InetAddressValidatorTest",
    "DinersClub": "DinersClub",
    "IBANValidatorTest": "IBANValidatorTest",
    "CustomValidatorResourcesTest": "CustomValidatorResourcesTest",
    "ModulusTenEAN13CheckDigitTest": "ModulusTenEAN13CheckDigitTest",
    "ValidatorResult": "ValidatorResult",
    "CheckDigit": "CheckDigit",
    "ModulusTenSedolCheckDigitTest": "ModulusTenSedolCheckDigitTest",
    "DoubleValidator": "DoubleValidator",
    "BigDecimalValidator": "BigDecimalValidator",
    "Amex": "Amex",
    "typing.List[Item]": "java.util.List<Item>",
    "BigDecimalValidatorTest": "BigDecimalValidatorTest",
    "SedolCheckDigit": "SedolCheckDigit",
    "ISSNCheckDigit": "ISSNCheckDigit",
    "ValidatorException": "ValidatorException",
    "CheckDigitException": "CheckDigitException",
    "BigIntegerValidator": "BigIntegerValidator",
    "DomainValidatorStartupTest": "DomainValidatorStartupTest",
    "AbstractCalendarValidator": "AbstractCalendarValidator",
    "typing.List[CreditCardType]": "java.util.ArrayList<CreditCardType>",
    "CreditCardType": "CreditCardType",
    "LuhnCheckDigit": "LuhnCheckDigit",
    "typing.List[typing.Union[int, float, numbers.Number]]": "java.lang.Number[]",
    "RegexValidator": "RegexValidator",
    "typing.Union[ValueError, SyntaxError]": "java.text.ParseException",
    "typing.Union[AttributeError, TypeError]": "java.lang.NoSuchMethodException",
    "ISBN10CheckDigit": "ISBN10CheckDigit",
    "ByteValidatorTest": "ByteValidatorTest",
    "Field": "Field",
    "CalendarValidator": "CalendarValidator",
    "datetime.datetime": "java.time.Clock",
    "typing.List[CodeValidator]": "CodeValidator[]",
    "Visa": "Visa",
    "typing.Union[TypeError, AttributeError, RuntimeError]": "java.lang.InstantiationException",
    "typing.Tuple[str, typing.Any]": "java.util.Entry<String,Object>",
    "ISBNValidator": "ISBNValidator",
    "FormSet": "FormSet",
    "ABANumberCheckDigit": "ABANumberCheckDigit",
    "typing.Union[str, datetime.datetime]": "java.text.Format",
    "ISINValidator": "ISINValidator",
    "Msg": "Msg",
    "typing.Union[decimal.Decimal, str]": "java.text.DecimalFormatSymbols",
    "LuhnCheckDigitTest": "LuhnCheckDigitTest",
    "ValidatorAction": "ValidatorAction",
    "ISINCheckDigit": "ISINCheckDigit",
    "typing.List[typing.Union[datetime.date, datetime.datetime]]": "java.util.Date[]",
    "InetAddressValidator": "InetAddressValidator",
    "ValidatorUtils": "ValidatorUtils",
    "typing.List[re.Pattern]": "java.util.regex.Pattern[]",
    "CreditCardValidator": "CreditCardValidator",
    "CUSIPCheckDigitTest": "CUSIPCheckDigitTest",
    "ISINCheckDigitTest": "ISINCheckDigitTest",
    "ModulusTenCheckDigit": "ModulusTenCheckDigit",
    "Discover": "Discover",
    "NameBean": "NameBean",
    "GenericValidatorTest": "GenericValidatorTest",
    "AbstractCalendarValidatorTest": "AbstractCalendarValidatorTest",
    "ISBNValidatorTest": "ISBNValidatorTest",
    "LongValidator": "LongValidator",
    "typing.Collection[CreditCardType]": "java.util.Collection<CreditCardType>",
    "ResultStatus": "ResultStatus",
    "typing.List[CreditCardRange]": "CreditCardRange[]",
    "decimal.Decimal": "BigDecimal",
    "ISSNValidatorTest": "ISSNValidatorTest",
    "GenericValidator": "GenericValidator",
    "UrlValidatorTest": "UrlValidatorTest",
    "EmailValidatorTest": "EmailValidatorTest",
    "ABANumberCheckDigitTest": "ABANumberCheckDigitTest",
    "DateValidatorTest": "DateValidatorTest",
    "PercentValidatorTest": "PercentValidatorTest",
    "EAN13CheckDigitTest": "EAN13CheckDigitTest",
    "ModulusCheckDigit": "ModulusCheckDigit",
    "ShortValidatorTest": "ShortValidatorTest",
    "IBANCheckDigitTest": "IBANCheckDigitTest",
    "typing.Dict[str, Arg]": "java.util.Map<String,Arg>",
    "Flags": "Flags",
    "typing.List[Field]": "java.util.List<Field>",
    "CreditCardRange": "CreditCardRange",
    "ISSNCheckDigitTest": "ISSNCheckDigitTest",
    "typing.Iterator[Arg]": "java.util.Iterator<Arg>",
    "AbstractNumberValidatorTest": "AbstractNumberValidatorTest",
    "re.error": "java.util.regex.PatternSyntaxException",
    "RegexValidatorTest": "RegexValidatorTest",
    "logging.Logger": "java.util.logging.Logger",
    "IDNBUGHOLDER": "IDNBUGHOLDER",
    "LazyHolder": "LazyHolder",
    "ParameterValidatorImpl": "ParameterValidatorImpl",
    "IntegerValidator": "IntegerValidator",
    "BigIntegerValidatorTest": "BigIntegerValidatorTest",
    "ValueBean": "ValueBean",
    "LongValidatorTest": "LongValidatorTest",
    "DateValidator": "DateValidator",
    "DomainValidator": "DomainValidator",
    "ISBN10CheckDigitTest": "ISBN10CheckDigitTest",
    "GenericTypeValidator": "GenericTypeValidator",
    "DoubleValidatorTest": "DoubleValidatorTest",
    "FlagsTest": "FlagsTest",
    "Var": "Var",
    "CalendarValidatorTest": "CalendarValidatorTest",
    "CodeValidator": "CodeValidator",
    "AttributeError": "java.lang.IllegalAccessException",
    "ISBNCheckDigitTest": "ISBNCheckDigitTest",
    "typing.List[Arg]": "Arg[]",
    "MultipartStreamTest": "MultipartStreamTest",
    "ItemInputStream": "ItemInputStream",
    "DefaultFileItemFactory": "DefaultFileItemFactory",
    "IOFileUploadException": "IOFileUploadException",
    "FileItemIteratorImpl": "FileItemIteratorImpl",
    "MyServletInputStream": "MyServletInputStream",
    "FileItemHeaders": "FileItemHeaders",
    "FileUploadBase": "FileUploadBase",
    "MalformedStreamException": "MalformedStreamException",
    "FileUpload": "FileUpload",
    "DefaultFileItem": "DefaultFileItem",
    "Streams": "Streams",
    "SizeException": "SizeException",
    "ItemSkippedException": "ItemSkippedException",
    "Closeable": "Closeable",
    "FileItemStreamImpl": "FileItemStreamImpl",
    "ProgressListener": "ProgressListener",
    "ServletRequestContext": "ServletRequestContext",
    "FileItem": "FileItem",
    "FileUploadException": "FileUploadException",
    "QuotedPrintableDecoder": "QuotedPrintableDecoder",
    "MimeUtilityTestCase": "MimeUtilityTestCase",
    "Base64Decoder": "Base64Decoder",
    "ProgressListenerImpl": "ProgressListenerImpl",
    "DiskFileItemSerializeTest": "DiskFileItemSerializeTest",
    "RequestContext": "RequestContext",
    "FileUploadIOException": "FileUploadIOException",
    "MockPortletActionRequest": "MockPortletActionRequest",
    "ProgressListenerTest": "ProgressListenerTest",
    "ParameterParserTest": "ParameterParserTest",
    "FileItemStream": "FileItemStream",
    "FileItemHeadersImpl": "FileItemHeadersImpl",
    "QuotedPrintableDecoderTestCase": "QuotedPrintableDecoderTestCase",
    "ParameterParser": "ParameterParser",
    "MultipartStream": "MultipartStream",
    "DiskFileItem": "DiskFileItem",
    "UploadContext": "UploadContext",
    "FileItemIterator": "FileItemIterator",
    "uuid.UUID": "java.util.UUID",
    "ProgressNotifier": "ProgressNotifier",
    "PortletFileUpload": "PortletFileUpload",
    "MimeUtility": "MimeUtility",
    "IllegalBoundaryException": "IllegalBoundaryException",
    "LimitedInputStream": "LimitedInputStream",
    "UnknownSizeException": "UnknownSizeException",
    "FileItemFactory": "FileItemFactory",
    "DiskFileItemFactory": "DiskFileItemFactory",
    "InvalidContentTypeException": "InvalidContentTypeException",
    "FileItemHeadersTest": "FileItemHeadersTest",
    "typing.Union[typing.Iterator[typing.Any], typing.Generator[str, typing.Any, typing.Any]]": "java.util.Enumeration<String>",
    "MockHttpServletRequest": "MockHttpServletRequest",
    "SizeLimitExceededException": "SizeLimitExceededException",
    "FileItemHeadersSupport": "FileItemHeadersSupport",
    "FileCountLimitExceededException": "FileCountLimitExceededException",
    "FileSizeLimitExceededException": "FileSizeLimitExceededException",
    "InvalidFileNameException": "InvalidFileNameException",
    "typing.OrderedDict[str, typing.List[str]]": "java.util.LinkedHashMap<String,List<String>>",
    "DefaultFileItemTest": "DefaultFileItemTest",
    "Base64DecoderTestCase": "Base64DecoderTestCase",
    "DefaultPooledObject[typing.Any]": "DefaultPooledObject<T>",
    "EvictionConfig": "EvictionConfig",
    "BaseObjectPool": "BaseObjectPool",
    "TestKeyedObjectPool": "TestKeyedObjectPool",
    "typing.Dict[typing.Any, typing.Union[sched.scheduler, threading.Timer]]": "java.util.Map<K,TimerTask>",
    "typing.Collection[typing.Any]": "java.util.Collection<WE>",
    "SynchronizedKeyedObjectPool": "SynchronizedKeyedObjectPool",
    "BaseObjectPoolConfig": "BaseObjectPoolConfig",
    "FailingKeyedPooledObjectFactory": "FailingKeyedPooledObjectFactory",
    "ErodingFactor": "ErodingFactor",
    "ObjectPool[typing.Any]": "ObjectPool<T>",
    "typing.Union[sched.scheduler, threading.Timer]": "java.util.TimerTask",
    "weakref.ref": "java.lang.ref.WeakReference<Runnable>",
    "CallStack": "CallStack",
    "Waiter": "Waiter",
    "EvictionIterator": "EvictionIterator",
    "PooledObject[typing.Any]": "PooledObject<>",
    "MethodCall": "MethodCall",
    "threading.RLock": "java.util.concurrent.locks.ReentrantLock",
    "PooledObjectFactory[typing.Any]": "PooledObjectFactory<>",
    "UsageTracking[typing.Any]": "UsageTracking<V>",
    "FactoryDE": "FactoryDE",
    "BasePooledObjectFactory[typing.Any]": "BasePooledObjectFactory<B>",
    "SystemExit": "java.lang.ThreadDeath",
    "KeyedObjectPool[typing.Any]": "KeyedObjectPool<>",
    "BasePooledObjectFactory[str]": "BasePooledObjectFactory<String>",
    "TestObjectPool": "TestObjectPool",
    "TestBaseKeyedPoolableObjectFactory": "TestBaseKeyedPoolableObjectFactory",
    "typing.Dict[weakref.ref, weakRunner]": "java.util.HashMap<WeakReference<Runnable>,WeakRunner>",
    "VisitTracker[typing.Any]": "VisitTracker<K>",
    "KeyedObjectPool": "KeyedObjectPool",
    "PooledObject[Foo]": "PooledObject<Foo>",
    "SleepingObjectFactory": "SleepingObjectFactory",
    "ProxySource[typing.Any]": "ProxySource<V>",
    "LinkedBlockingDeque": "LinkedBlockingDeque",
    "KeyedObjectPoolMinIdleTimerTask[typing.Any, typing.Any]": "KeyedObjectPoolMinIdleTimerTask<K,V>",
    "SynchronizedKeyedPooledObjectFactory[typing.Any, typing.Any]": "SynchronizedKeyedPooledObjectFactory<K,V>",
    "typing.Dict[typing.Any, int]": "java.util.HashMap<V,Integer>",
    "PooledSoftReference[str]": "PooledSoftReference<String>",
    "typing.Collection[int]": "java.util.Collection<Integer>",
    "GenericKeyedObjectPoolMXBean": "GenericKeyedObjectPoolMXBean",
    "TestConstants": "TestConstants",
    "TestPoolImplUtils": "TestPoolImplUtils",
    "AbandonedConfig": "AbandonedConfig",
    "NotSimpleFactory": "NotSimpleFactory",
    "GenericObjectPoolConfig": "GenericObjectPoolConfig",
    "ErodingPerKeyKeyedObjectPool[typing.Any, typing.Any]": "ErodingPerKeyKeyedObjectPool<K,V>",
    "BaseGenericObjectPool[typing.Any]": "BaseGenericObjectPool<?>",
    "EvictionTimer": "EvictionTimer",
    "PooledObjectFactory": "PooledObjectFactory",
    "SynchronizedKeyedObjectPool[typing.Any, typing.Any]": "SynchronizedKeyedObjectPool<K,V>",
    "StatsStore": "StatsStore",
    "typing.Generic[typing.TypeVar('T', bound=PooledObject)]": "java.lang.Comparable<PooledObject>",
    "JdkProxyHandler[typing.Any]": "JdkProxyHandler<T>",
    "DefaultPooledObject": "DefaultPooledObject",
    "InterruptibleReentrantLock": "InterruptibleReentrantLock",
    "typing.Set[DefaultPooledObjectInfo]": "java.util.Set<DefaultPooledObjectInfo>",
    "ProxiedKeyedObjectPool": "ProxiedKeyedObjectPool",
    "DefaultPooledObjectInfoMBean": "DefaultPooledObjectInfoMBean",
    "typing.Callable[[MethodCall], bool]": "java.util.function.Predicate<MethodCall>",
    "GenericKeyedObjectPoolConfig[typing.Any]": "GenericKeyedObjectPoolConfig<>",
    "IdentityWrapper": "IdentityWrapper",
    "Foo": "Foo",
    "ObjectPool[str]": "ObjectPool<String>",
    "VisitTracker": "VisitTracker",
    "SynchronizedPooledObjectFactory": "SynchronizedPooledObjectFactory",
    "GenericObjectPoolMXBean": "GenericObjectPoolMXBean",
    "PooledObject[int]": "PooledObject<Integer>",
    "KeyedObjectPool[typing.Any, typing.Any]": "KeyedObjectPool<K,V>",
    "typing.Type": "java.lang.reflect.Type",
    "PrivateException": "PrivateException",
    "DefaultPooledObjectInfo": "DefaultPooledObjectInfo",
    "typing.Union[RuntimeError, SystemError]": "java.lang.InternalError",
    "BaseObjectPoolConfig[typing.Any]": "BaseObjectPoolConfig<>",
    "KeyedObjectPool[str, TestObject]": "KeyedObjectPool<String,TestObject>",
    "ObjectPool": "ObjectPool",
    "FactoryF[int]": "FactoryF<Integer>",
    "DefaultTrackedUse": "DefaultTrackedUse",
    "FactoryAB": "FactoryAB",
    "DestroyMode": "DestroyMode",
    "MethodCallPoolableObjectFactory": "MethodCallPoolableObjectFactory",
    "ErodingObjectPool": "ErodingObjectPool",
    "AbstractItr": "AbstractItr",
    "GenericKeyedObjectPoolConfig": "GenericKeyedObjectPoolConfig",
    "BaseProxyHandler": "BaseProxyHandler",
    "threading.Timer": "java.util.Timer",
    "ErodingKeyedObjectPool[typing.Any]": "ErodingKeyedObjectPool<>",
    "SynchronizedPooledObjectFactory[typing.Any]": "SynchronizedPooledObjectFactory<T>",
    "typing.List[MethodCall]": "java.util.ArrayList<MethodCall>",
    "PoolUtils": "PoolUtils",
    "BaseGenericObjectPool": "BaseGenericObjectPool",
    "TestObject": "TestObject",
    "FactoryAB[typing.Any, typing.Any]": "FactoryAB<B,A>",
    "Node": "Node",
    "EvictionPolicy": "EvictionPolicy",
    "PooledSoftReference": "PooledSoftReference",
    "typing.Deque[PooledObject]": "java.util.Deque<PooledObject>",
    "WeakRunner": "WeakRunner",
    "NoOpCallStack": "NoOpCallStack",
    "BaseObject": "BaseObject",
    "ObjectPoolMinIdleTimerTask": "ObjectPoolMinIdleTimerTask",
    "CglibProxySource": "CglibProxySource",
    "NoOpCallStackTest": "NoOpCallStackTest",
    "EvictionPolicy[typing.Any]": "EvictionPolicy<>",
    "typing.TypeVar('T', bound=typing.Any)": "java.lang.reflect.TypeVariable<?>",
    "concurrent.futures.Executor": "java.util.concurrent.Executors",
    "CallStackTest": "CallStackTest",
    "TestGenericObjectPoolClassLoaders": "TestGenericObjectPoolClassLoaders",
    "IdentityWrapper[typing.Any]": "IdentityWrapper<T>",
    "typing.Iterable[weakref.ref]": "java.util.stream.Stream<WeakReference<Class<?>>>",
    "typing.Dict[str, typing.List[DefaultPooledObjectInfo]]": "java.util.Map<String,List<DefaultPooledObjectInfo>>",
    "KeyedPooledObjectFactory[typing.Any, typing.Any]": "KeyedPooledObjectFactory<Object,Object>",
    "typing.Deque[typing.Any]": "java.util.Deque<E>",
    "ObjectPool[object]": "ObjectPool<Object>",
    "FactoryC": "FactoryC",
    "LinkedBlockingDeque[typing.Any]": "LinkedBlockingDeque<>",
    "SynchronizedKeyedPooledObjectFactory": "SynchronizedKeyedPooledObjectFactory",
    "TimerHolder": "TimerHolder",
    "Snapshot": "Snapshot",
    "typing.Union[threading.RLock, threading.Lock]": "java.util.concurrent.locks.WriteLock",
    "ProxiedObjectPool": "ProxiedObjectPool",
    "PoolImplUtils": "PoolImplUtils",
    "ThrowableCallStack": "ThrowableCallStack",
    "datetime.timedelta": "java.time.temporal.ChronoUnit",
    "TestSynchronizedPooledObjectFactory": "TestSynchronizedPooledObjectFactory",
    "threading.Condition": "java.util.concurrent.locks.Condition",
    "ProxySource": "ProxySource",
    "typing.Callable[[PooledObject[typing.Any]], None]": "java.util.function.Consumer<PooledObject<T>>",
    "PooledObject[str]": "PooledObject<String>",
    "typing.List[DefaultPooledObjectInfo]": "java.util.List<DefaultPooledObjectInfo>",
    "TestBaseObjectPool": "TestBaseObjectPool",
    "DefaultEvictionPolicy": "DefaultEvictionPolicy",
    "PoolTest": "PoolTest",
    "typing.List[TestObject]": "ObjectPool<TestObject>",
    "typing.Generic[typing.TypeVar('T', bound=datetime.timedelta)]": "java.util.concurrent.atomic.AtomicReference<Duration>",
    "TestDefaultPooledObject": "TestDefaultPooledObject",
    "CallStackUtils": "CallStackUtils",
    "concurrent.futures.Future[typing.Any]": "java.util.concurrent.ScheduledFuture<?>",
    "PrivateSecurityManager": "PrivateSecurityManager",
    "DescendingItr": "DescendingItr",
    "BaseKeyedPooledObjectFactory": "BaseKeyedPooledObjectFactory",
    "KeyedObjectPool[str, object]": "KeyedObjectPool<String,Object>",
    "typing.List[weakref.ref]": "java.util.List<WeakReference<Class<?>>>",
    "LinkedBlockingDeque[int]": "LinkedBlockingDeque<Integer>",
    "typing.Dict[IdentityWrapper[typing.Any], PooledObject[typing.Any]]": "java.util.Map<IdentityWrapper<T>,PooledObject<T>>",
    "Itr": "Itr",
    "ErodingObjectPool[typing.Any]": "ErodingObjectPool<T>",
    "typing.Iterator[PooledObject[typing.Any]]": "java.util.Iterator<PooledObject<T>>",
    "typing.Iterator[int]": "java.util.Iterator<Long>",
    "FactoryF": "FactoryF",
    "SwallowedExceptionListener": "SwallowedExceptionListener",
    "CustomClassLoader": "CustomClassLoader",
    "ProxySource[TestObject]": "ProxySource<TestObject>",
    "BaseTestProxiedObjectPool": "BaseTestProxiedObjectPool",
    "DefaultEvictionPolicy[typing.Any]": "DefaultEvictionPolicy<>",
    "ErodingKeyedObjectPool[typing.Any, typing.Any]": "ErodingKeyedObjectPool<K,V>",
    "Evictor": "Evictor",
    "Evictor[typing.Any]": "Evictor<>",
    "TestLinkedBlockingDeque": "TestLinkedBlockingDeque",
    "typing.Tuple[weakref.ref, WeakRunner]": "java.util.Entry<WeakReference<Runnable>,WeakRunner>",
    "ErodingPerKeyKeyedObjectPool": "ErodingPerKeyKeyedObjectPool",
    "FactoryDE[int, typing.Any]": "FactoryDE<Long,F>",
    "PooledObject[VisitTracker[typing.Any]]": "PooledObject<VisitTracker<K>>",
    "PooledObject": "PooledObject",
    "KeyedObjectPool[object, typing.Any]": "KeyedObjectPool<Object,Object>",
    "typing.Union[array.array, typing.List]": "java.lang.reflect.Array",
    "collections.abc.Queue[typing.Any]": "java.util.AbstractQueue<E>",
    "TestPoolUtils": "TestPoolUtils",
    "PooledObject[Waiter]": "PooledObject<Waiter>",
    "FactoryC[typing.Any]": "FactoryC<D>",
    "FactoryBA[typing.Any, str]": "FactoryBA<C,String>",
    "Reaper": "Reaper",
    "PooledFooFactory": "PooledFooFactory",
    "TestObjectImpl": "TestObjectImpl",
    "typing.Type[PooledObjectFactory[typing.Any]]": "java.lang.Class<PooledObjectFactory<>>",
    "VisitTrackerFactory": "VisitTrackerFactory",
    "TestEvictionConfig": "TestEvictionConfig",
    "WaiterFactory[typing.Any]": "WaiterFactory<>",
    "PooledObjectState": "PooledObjectState",
    "typing.Callable[[typing.Type[typing.Any]], weakref.ref]": "java.util.function.Function<Class<?>,WeakReference<Class<?>>>",
    "typing.Deque[PooledObject[typing.Any]]": "java.util.Deque<PooledObject<T>>",
    "typing.Union[InterruptedError, KeyboardInterrupt, asyncio.CancelledError, BlockingIOError]": "java.lang.InterruptedException",
    "SimpleFactory": "SimpleFactory",
    "TestPooledSoftReference": "TestPooledSoftReference",
    "SynchronizedObjectPool": "SynchronizedObjectPool",
    "typing.Union[concurrent.futures.ThreadPoolExecutor, concurrent.futures.Future]": "java.util.concurrent.ScheduledThreadPoolExecutor",
    "typing.Dict[typing.Any, ErodingFactor]": "java.util.Map<K,ErodingFactor>",
    "JdkProxyHandler": "JdkProxyHandler",
    "typing.List[PooledObject[typing.Any]]": "java.util.ArrayList<PooledObject<T>>",
    "typing.Union[MemoryError, SystemError, RuntimeError, RecursionError, InterruptedError, SIGTERM]": "java.lang.VirtualMachineError",
    "WaiterFactory": "WaiterFactory",
    "SynchronizedObjectPool[typing.Any]": "SynchronizedObjectPool<T>",
    "TestTrackedUse": "TestTrackedUse",
    "typing.Callable[[threading.Thread], None]": "java.util.function.Consumer<Thread>",
    "TrackedUse": "TrackedUse",
    "ErodingKeyedObjectPool": "ErodingKeyedObjectPool",
    "typing.List[concurrent.futures.Future[typing.Any]]": "java.util.ArrayList<Future<?>>",
    "BaseProxyHandler[typing.Any]": "BaseProxyHandler<T>",
    "BaseObjectPool[typing.Any]": "BaseObjectPool<Object>",
    "ObjectPoolMinIdleTimerTask[typing.Any]": "ObjectPoolMinIdleTimerTask<T>",
    "Node[typing.Any]": "Node<E>",
    "FactoryBA": "FactoryBA",
    "UsageTracking": "UsageTracking",
    "KeyedPooledObjectFactory": "KeyedPooledObjectFactory",
    "BaseTestProxiedKeyedObjectPool": "BaseTestProxiedKeyedObjectPool",
    "MethodCallLogger": "MethodCallLogger",
    "typing.Dict[str, typing.Union[sched.scheduler, threading.Timer]]": "java.util.Map<String,TimerTask>",
    "KeyedObjectPool[str, str]": "KeyedObjectPool<String,String>",
    "JdkProxySource": "JdkProxySource",
    "BasePooledObjectFactory": "BasePooledObjectFactory",
    "SecurityManagerCallStack": "SecurityManagerCallStack",
    "KeyedObjectPoolMinIdleTimerTask": "KeyedObjectPoolMinIdleTimerTask",
    "BidirDijkstraTestCase": "BidirDijkstraTestCase",
    "DisjointSetNode": "DisjointSetNode",
    "NodeSequenceVisitor": "NodeSequenceVisitor",
    "Monoid[typing.Any]": "Monoid<W>",
    "typing.Dict[VertexPair[typing.Any], typing.Any]": "java.util.Map<VertexPair<V>,W>",
    "TarjanAlgorithm": "TarjanAlgorithm",
    "typing.List[VertexPair[typing.Any]]": "java.util.LinkedList<VertexPair<V>>",
    "typing.Dict[str, Mapper[typing.Any, typing.Any]]": "java.util.Map<String,Mapper<E,?>>",
    "Monoid": "Monoid",
    "Mapper[EdgeWrapper[typing.Any], typing.Any]": "Mapper<EdgeWrapper<WE>,W>",
    "DefaultHeadVertexConnector[typing.Any, typing.Any]": "DefaultHeadVertexConnector<V,E>",
    "TailVertexConnector[typing.Any, typing.Any]": "TailVertexConnector<V,E>",
    "typing.Dict[typing.Any, SuperVertex[typing.Any, typing.Any, typing.Any]]": "java.util.Map<V,SuperVertex<V,W,WE>>",
    "BoruvkaTestCase": "BoruvkaTestCase",
    "DefaultHeuristicBuilder[typing.Any, typing.Any, typing.Any]": "DefaultHeuristicBuilder<V,WE,W>",
    "DefaultPathSourceSelector[typing.Any, typing.Any, typing.Any]": "DefaultPathSourceSelector<V,WE,W>",
    "typing.Set[SuperVertex[typing.Any, typing.Any, typing.Any]]": "java.util.Set<SuperVertex<V,W,WE>>",
    "MutableGraph[BaseLabeledVertex, BaseLabeledEdge]": "MutableGraph<BaseLabeledVertex,BaseLabeledEdge>",
    "SccAlgorithm[typing.Any]": "SccAlgorithm<V>",
    "DirectedGraph[typing.Any, EdgeWrapper[typing.Any]]": "DirectedGraph<V,EdgeWrapper<WE>>",
    "ShortestDistances[typing.Any, typing.Any]": "ShortestDistances<V,W>",
    "queue.Queue[typing.Any]": "java.util.Queue<E>",
    "SpanningTreeSourceSelector": "SpanningTreeSourceSelector",
    "RevertedGraph": "RevertedGraph",
    "typing.Dict[int, typing.Set[typing.Any]]": "java.util.TreeMap<Integer,Set<V>>",
    "EdmondsKarpTestCase": "EdmondsKarpTestCase",
    "typing.Dict[typing.Any, VertexPair[typing.Any]]": "java.util.Map<E,VertexPair<V>>",
    "Mapper[BaseLabeledWeightedEdge[typing.Any], typing.Any]": "Mapper<BaseLabeledWeightedEdge<W>,W>",
    "typing.Set[typing.Set[typing.Any]]": "java.util.HashSet<Set<V>>",
    "AllVertexPairsShortestPath[typing.Any, typing.Any, typing.Any]": "AllVertexPairsShortestPath<V,WE,W>",
    "AbstractColoringTest": "AbstractColoringTest",
    "ExportSelector": "ExportSelector",
    "Mapper[typing.Any, typing.Any]": "Mapper<E,N>",
    "DirectedMutableGraph[BaseLabeledVertex, BaseLabeledWeightedEdge[int]]": "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Integer>>",
    "TailVertexConnector": "TailVertexConnector",
    "VertexPair": "VertexPair",
    "MutableGraph": "MutableGraph",
    "FlowWeightedEdgesBuilder[typing.Any, typing.Any]": "FlowWeightedEdgesBuilder<V,WE>",
    "DefaultKFactorBuilder[typing.Any]": "DefaultKFactorBuilder<P>",
    "DirectedMutableGraph[BaseLabeledVertex, BaseLabeledWeightedEdge[float]]": "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>",
    "BaseGraph[typing.Any, typing.Any]": "BaseGraph<Object,Object>",
    "BaseGraph": "BaseGraph",
    "GraphSerializationTestCase": "GraphSerializationTestCase",
    "TarjanTestCase": "TarjanTestCase",
    "HeadVertexConnector[typing.Any, typing.Any]": "HeadVertexConnector<V,E>",
    "UndirectedGraph[BaseLabeledVertex, BaseLabeledWeightedEdge[float]]": "UndirectedGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>",
    "ColoringAlgorithmsSelector[typing.Any, typing.Any, typing.Any]": "ColoringAlgorithmsSelector<V,E,C>",
    "DefaultLinkedConnectionBuilder": "DefaultLinkedConnectionBuilder",
    "RankingSelector[typing.Any]": "RankingSelector<P>",
    "typing.List[BaseLabeledVertex]": "java.util.List<BaseLabeledVertex>",
    "UndirectedMutableGraph[BaseLabeledVertex, BaseLabeledEdge]": "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledEdge>",
    "InMemoryWeightedPath[BaseLabeledVertex,BaseLabeledWeightedEdge[float],float]": "InMemoryWeightedPath<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>,Double>",
    "ToTailBuilder": "ToTailBuilder",
    "SccAlgorithmSelector[typing.Any, typing.Any]": "SccAlgorithmSelector<V,E>",
    "SccAlgorithm": "SccAlgorithm",
    "BaseWeightedEdge[float]": "BaseWeightedEdge<Double>",
    "typing.OrderedDict[typing.Set[typing.Any], None]": "java.util.LinkedHashSet<Set<V>>",
    "DefaultToTailBuilder": "DefaultToTailBuilder",
    "DefaultSpanningWeightedEdgeMapperBuilder[typing.Any, typing.Any]": "DefaultSpanningWeightedEdgeMapperBuilder<V,WE>",
    "DefaultLinkedConnectionBuilder[typing.Any, typing.Any, typing.Any]": "DefaultLinkedConnectionBuilder<V,E,G>",
    "DefaultSpanningTreeAlgorithmSelector": "DefaultSpanningTreeAlgorithmSelector",
    "DefaultRankingSelector": "DefaultRankingSelector",
    "Mapper[BaseLabeledWeightedEdge[float], str]": "Mapper<BaseLabeledWeightedEdge<Double>,String>",
    "DotExporter": "DotExporter",
    "DefaultMaxFlowAlgorithmSelector[typing.Any, typing.Any, typing.Any]": "DefaultMaxFlowAlgorithmSelector<V,WE,W>",
    "VertexPair[typing.Any]": "VertexPair<V>",
    "typing.Collection[typing.List[BaseLabeledVertex]]": "java.util.Collection<List<BaseLabeledVertex>>",
    "typing.Dict[str, float]": "java.util.TreeMap<String,Double>",
    "typing.Dict[typing.Any, str]": "Mapper<V,String>",
    "Mapper": "Mapper",
    "typing.Set[BaseLabeledVertex]": "java.util.HashSet<BaseLabeledVertex>",
    "NotEnoughColorsException": "NotEnoughColorsException",
    "SynchronizedDirectedGraph": "SynchronizedDirectedGraph",
    "UndirectedMutableGraph[typing.Any, typing.Any]": "UndirectedMutableGraph<V,WE>",
    "DefaultMaxFlowAlgorithmSelector": "DefaultMaxFlowAlgorithmSelector",
    "AbstractGraphConnection[BaseLabeledVertex, BaseLabeledWeightedEdge[int]]": "AbstractGraphConnection<BaseLabeledVertex,BaseLabeledWeightedEdge<Integer>>",
    "BaseGraphVisitHandler[typing.Any, typing.Any, DirectedGraph[typing.Any, typing.Any], typing.Any]": "BaseGraphVisitHandler<V,E,DirectedGraph<V,E>,W>",
    "DefaultVisitAlgorithmsSelector": "DefaultVisitAlgorithmsSelector",
    "Graph[BaseLabeledVertex, BaseLabeledWeightedEdge[float]]": "Graph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>",
    "SynchronizedUndirectedGraph": "SynchronizedUndirectedGraph",
    "HeuristicBuilder": "HeuristicBuilder",
    "AbstractExporter[typing.Any, typing.Any, DotExporter]": "AbstractExporter<V,E,DotExporter>",
    "DefaultExportSelector[typing.Any, typing.Any]": "DefaultExportSelector<V,E>",
    "ShortestPathAlgorithmSelector[typing.Any, typing.Any, typing.Any]": "ShortestPathAlgorithmSelector<V,WE,W>",
    "DefaultWeightedEdgesSelector": "DefaultWeightedEdgesSelector",
    "ConnectivityBuilder[typing.Any, typing.Any]": "ConnectivityBuilder<V,E>",
    "Graph[typing.Any, typing.Any]": "Graph<V,WE>",
    "Mapper[typing.Any, str]": "Mapper<E,String>",
    "RevertedGraph[typing.Any, typing.Any]": "RevertedGraph<V,E>",
    "SynchronizedMutableGraph[typing.Any, typing.Any]": "SynchronizedMutableGraph<V,E>",
    "DefaultSpanningTreeSourceSelector": "DefaultSpanningTreeSourceSelector",
    "FlowWeightedEdgesBuilder": "FlowWeightedEdgesBuilder",
    "FindConnectedComponetTestCase": "FindConnectedComponetTestCase",
    "LongWeightBaseOperations": "LongWeightBaseOperations",
    "DefaultSccAlgorithmSelector": "DefaultSccAlgorithmSelector",
    "CheriyanMehlhornGabowAlgorithm": "CheriyanMehlhornGabowAlgorithm",
    "PlayersRank[typing.Any]": "PlayersRank<P>",
    "BaseLabeledEdge": "BaseLabeledEdge",
    "MutableSpanningTree": "MutableSpanningTree",
    "MaxFlowAlgorithmSelector[typing.Any, typing.Any, typing.Any]": "MaxFlowAlgorithmSelector<V,WE,W>",
    "Path[typing.Any, typing.Any]": "Path<V,E>",
    "ColoredVertices[BaseLabeledVertex,int]": "ColoredVertices<BaseLabeledVertex,Integer>",
    "GraphColoringTestCase": "GraphColoringTestCase",
    "TargetSourceSelector": "TargetSourceSelector",
    "TargetSourceSelector[typing.Any, typing.Any, typing.Any]": "TargetSourceSelector<V,WE,W>",
    "FlowNetworkHandler": "FlowNetworkHandler",
    "MaxFlowAlgorithmSelector": "MaxFlowAlgorithmSelector",
    "SCCAlgorithmBenchmarkTestCase": "SCCAlgorithmBenchmarkTestCase",
    "ColoringAlgorithmsSelector": "ColoringAlgorithmsSelector",
    "typing.Dict[typing.Any, DisjointSetNode[typing.Any]]": "java.util.Map<E,DisjointSetNode<E>>",
    "FibonacciHeap[typing.Any]": "FibonacciHeap<>",
    "FibonacciHeap": "FibonacciHeap",
    "DefaultExportSelector": "DefaultExportSelector",
    "SimplePlayersRank": "SimplePlayersRank",
    "BaseMutableGraph[typing.Any, typing.Any]": "BaseMutableGraph<V,E>",
    "KruskalTestCase": "KruskalTestCase",
    "SpanningTreeAlgorithmSelector": "SpanningTreeAlgorithmSelector",
    "typing.Iterable[BaseLabeledVertex]": "java.lang.Iterable<BaseLabeledVertex>",
    "RankingSelector": "RankingSelector",
    "typing.Dict[typing.Any, TarjanVertexMetaInfo]": "java.util.Map<V,TarjanVertexMetaInfo>",
    "Graph": "Graph",
    "typing.List[BaseException]": "java.util.ArrayList<Throwable>",
    "SpanningTree[BaseLabeledVertex, BaseLabeledWeightedEdge[float], float]": "SpanningTree<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>,Double>",
    "AbstractGraphConnection[str, GameResult]": "AbstractGraphConnection<String,GameResult>",
    "DirectedGraph[typing.Any, GameResult]": "DirectedGraph<P,GameResult>",
    "MultiThreadedTestRunner": "MultiThreadedTestRunner",
    "DefaultSpanningTreeAlgorithmSelector[typing.Any, typing.Any, typing.Any]": "DefaultSpanningTreeAlgorithmSelector<V,W,WE>",
    "SpanningTree[typing.Any, typing.Any, typing.Any]": "SpanningTree<V,WE,W>",
    "ShortestEdges": "ShortestEdges",
    "UndirectedMutableGraph[BaseLabeledVertex, BaseLabeledWeightedEdge[float]]": "UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>",
    "DefaultVisitSourceSelector": "DefaultVisitSourceSelector",
    "BaseGraphVisitHandler<typing.Any, typing.Any, Graph[typing.Any, typing.Any], typing.List[typing.Any]": "BaseGraphVisitHandler<V,E,Graph<V,E>,List<V>>",
    "SynchronizedGraph[typing.Any, typing.Any]": "SynchronizedGraph<Object,Object>",
    "WeightedEdgesComparator": "WeightedEdgesComparator",
    "LinkedConnectionBuilder[typing.Any, typing.Any, typing.Any]": "LinkedConnectionBuilder<V,E,G>",
    "GraphInsert": "GraphInsert",
    "AllVertexPairsShortestPath[BaseLabeledVertex, BaseLabeledWeightedEdge[float], float]": "AllVertexPairsShortestPath<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>,Double>",
    "VisitState": "VisitState",
    "DirectedGraph[str, GameResult]": "DirectedGraph<String,GameResult>",
    "NamedExportSelector[typing.Any, typing.Any]": "NamedExportSelector<V,E>",
    "typing.Dict[BaseLabeledVertex, float]": "java.util.Map<BaseLabeledVertex,Double>",
    "SynchronizedUndirectedGraph[typing.Any, typing.Any]": "SynchronizedUndirectedGraph<V,E>",
    "VisitTestCase": "VisitTestCase",
    "BaseLabeledWeightedEdge": "BaseLabeledWeightedEdge",
    "Path[BaseLabeledVertex, BaseLabeledWeightedEdge[float]]": "Path<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>",
    "typing.OrderedDict[typing.Any, None]": "java.util.LinkedHashSet<V>",
    "typing.List[typing.Set[typing.Any]]": "java.util.ArrayList<Set<V>>",
    "LinkedConnectionBuilder": "LinkedConnectionBuilder",
    "PlayersRank[str]": "PlayersRank<String>",
    "ReverseDeleteGraph": "ReverseDeleteGraph",
    "typing.Dict[VertexPair[typing.Any], WeightedPath[typing.Any, typing.Any, typing.Any]]": "java.util.HashMap<VertexPair<V>,WeightedPath<V,WE,W>>",
    "DirectedGraph[typing.Any, typing.Any]": "DirectedGraph<V,E>",
    "NegativeWeightedCycleException": "NegativeWeightedCycleException",
    "BaseMutableGraphTestCase": "BaseMutableGraphTestCase",
    "typing.Set[typing.Set[BaseLabeledVertex]]": "java.util.Set<Set<BaseLabeledVertex>>",
    "FromHeadBuilder": "FromHeadBuilder",
    "ConnectedComponentHandler": "ConnectedComponentHandler",
    "UndirectedMutableGraph": "UndirectedMutableGraph",
    "WeightedPath[typing.Any, typing.Any, typing.Any]": "WeightedPath<V,WE,W>",
    "WeightedPath": "WeightedPath",
    "BaseLabeledWeightedEdge[int]": "BaseLabeledWeightedEdge<Integer>",
    "GraphExportException": "GraphExportException",
    "WeightedEdgesComparator[typing.Any, typing.Any]": "WeightedEdgesComparator<W,WE>",
    "DefaultToTailBuilder[typing.Any, typing.Any, typing.Any]": "DefaultToTailBuilder<V,WE,W>",
    "DefaultColorsBuilder[typing.Any, typing.Any]": "DefaultColorsBuilder<V,E>",
    "AbstractGraphConnection[BaseLabeledVertex, BaseLabeledWeightedEdge[float]]": "AbstractGraphConnection<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>",
    "DefaultColoringAlgorithmsSelector[typing.Any, typing.Any, typing.Any]": "DefaultColoringAlgorithmsSelector<V,E,C>",
    "SccAlgorithmSelector": "SccAlgorithmSelector",
    "DirectedMutableGraph": "DirectedMutableGraph",
    "InMemoryPath": "InMemoryPath",
    "ConnectedComponentHandler[typing.Any, typing.Any]": "ConnectedComponentHandler<V,E>",
    "DotExporter[typing.Any, typing.Any]": "DotExporter<V,E>",
    "AbstractGraphConnection": "AbstractGraphConnection",
    "DefaultRankingSelector[typing.Any]": "DefaultRankingSelector<P>",
    "DefaultGrapher[typing.Any, typing.Any]": "DefaultGrapher<V,E>",
    "typing.List[FibonacciHeapNode[typing.Any]]": "java.util.ArrayList<FibonacciHeapNode<E>>",
    "MapperWrapper[typing.Any, typing.Any, typing.Any]": "MapperWrapper<WE,W,WO>",
    "GraphConnector[typing.Any, typing.Any]": "GraphConnector<V,E>",
    "DefaultFlowWeightedEdgesBuilder": "DefaultFlowWeightedEdgesBuilder",
    "ExportTestCase": "ExportTestCase",
    "SpanningTreeAlgorithmSelector[typing.Any, typing.Any, typing.Any]": "SpanningTreeAlgorithmSelector<V,W,WE>",
    "ToTailBuilder[typing.Any, typing.Any, typing.Any]": "ToTailBuilder<V,WE,W>",
    "SuperVertex": "SuperVertex",
    "DefaultSccAlgorithmSelector[typing.Any, typing.Any]": "DefaultSccAlgorithmSelector<V,E>",
    "SpanningWeightedEdgeMapperBuilder": "SpanningWeightedEdgeMapperBuilder",
    "DisjointSetNode[typing.Any]": "DisjointSetNode<E>",
    "PathSourceSelector[typing.Any, typing.Any, typing.Any]": "PathSourceSelector<V,WE,W>",
    "AStarTestCase": "AStarTestCase",
    "DefaultTailVertexConnector": "DefaultTailVertexConnector",
    "EdgeWeightMapper": "EdgeWeightMapper",
    "UncoloredOrderedVertices[typing.Any]": "UncoloredOrderedVertices<V>",
    "OrderedMonoid[float]": "OrderedMonoid<Float>",
    "EdgeWrapper[typing.Any]": "EdgeWrapper<>",
    "CommonsGraph": "CommonsGraph",
    "DefaultShortestPathAlgorithmSelector": "DefaultShortestPathAlgorithmSelector",
    "DefaultSpanningTreeSourceSelector[typing.Any, typing.Any, typing.Any]": "DefaultSpanningTreeSourceSelector<V,W,WE>",
    "DefaultKFactorBuilder": "DefaultKFactorBuilder",
    "typing.List[threading.Thread]": "java.util.List<Thread>",
    "InMemoryPath[typing.Any, typing.Any]": "InMemoryPath<V,WE>",
    "MutableGraph[typing.Any, typing.Any]": "MutableGraph<V,E>",
    "ConnectivityBuilder": "ConnectivityBuilder",
    "DefaultPathSourceSelector": "DefaultPathSourceSelector",
    "DefaultFlowWeightedEdgesBuilder[typing.Any, typing.Any]": "DefaultFlowWeightedEdgesBuilder<V,WE>",
    "ShortestEdges[typing.Any, typing.Any, typing.Any]": "ShortestEdges<V,WE,W>",
    "AllVertexPairsShortestPath": "AllVertexPairsShortestPath",
    "EdgeLabelMapper": "EdgeLabelMapper",
    "Category": "Category",
    "UndirectedGraph[typing.Any, typing.Any]": "UndirectedGraph<V,WE>",
    "ShortestDistances": "ShortestDistances",
    "KFactorBuilder": "KFactorBuilder",
    "DefaultTargetSourceSelector[typing.Any, typing.Any, typing.Any]": "DefaultTargetSourceSelector<V,WE,W>",
    "typing.Dict[int, str]": "java.util.Map<Integer,String>",
    "KosarajuSharirTestCase": "KosarajuSharirTestCase",
    "typing.Generic[typing.TypeVar('T', bound=DisjointSetNode)]": "java.lang.Comparable<DisjointSetNode>",
    "GraphBuilderTestCase": "GraphBuilderTestCase",
    "typing.List[typing.List[BaseLabeledVertex]]": "BaseLabeledVertex[][]",
    "GraphColoringBackTrackingTestCase": "GraphColoringBackTrackingTestCase",
    "PlayersRank": "PlayersRank",
    "typing.Dict[typing.Any, typing.Set[typing.Any]]": "java.util.HashMap<V,Set<V>>",
    "AbstractGraphConnection[BaseLabeledVertex, BaseLabeledEdge]": "AbstractGraphConnection<BaseLabeledVertex,BaseLabeledEdge>",
    "KosarajuSharirAlgorithm": "KosarajuSharirAlgorithm",
    "FromHeadBuilder[typing.Any, typing.Any, typing.Any]": "FromHeadBuilder<V,WE,W>",
    "HeadVertexConnector": "HeadVertexConnector",
    "DirectedGraph": "DirectedGraph",
    "FlowNetworkHandler[typing.Any, EdgeWrapper[typing.Any], typing.Any]": "FlowNetworkHandler<V,EdgeWrapper<WE>,W>",
    "DefaultFromHeadBuilder[typing.Any, typing.Any, typing.Any]": "DefaultFromHeadBuilder<V,WE,W>",
    "EloTestCase": "EloTestCase",
    "DefaultConnectivityBuilder[typing.Any, typing.Any]": "DefaultConnectivityBuilder<V,E>",
    "DefaultColoringAlgorithmsSelector": "DefaultColoringAlgorithmsSelector",
    "DisjointSet": "DisjointSet",
    "GraphVisitHandler": "GraphVisitHandler",
    "MinimumSpanningTreeBenchmarkTestCase": "MinimumSpanningTreeBenchmarkTestCase",
    "Mapper[BaseLabeledVertex, str]": "Mapper<BaseLabeledVertex,String>",
    "PredecessorsList[typing.Any, typing,Any, typing.Any]": "PredecessorsList<V,E,W>",
    "KFactorBuilder[typing.Any]": "KFactorBuilder<P>",
    "DefaultVisitAlgorithmsSelector[typing.Any, typing.Any, typing.Any]": "DefaultVisitAlgorithmsSelector<V,E,G>",
    "SuperVertex[typing.Any, typing.Any, typing.Any]": "SuperVertex<V,W,WE>",
    "DefaultVisitSourceSelector[typing.Any, typing.Any, typing.Any]": "DefaultVisitSourceSelector<V,E,G>",
    "ColorsBuilder": "ColorsBuilder",
    "GraphVisitHandler[typing.Any, typing.Any, typing.Any, typing.Any]": "GraphVisitHandler<V,E,G,O>",
    "DefaultConnectivityBuilder": "DefaultConnectivityBuilder",
    "ExportSelector[typing.Any, typing.Any]": "ExportSelector<V,E>",
    "BaseWeightedEdge[int]": "BaseWeightedEdge<Integer>",
    "ShortestPathAlgorithmSelector": "ShortestPathAlgorithmSelector",
    "FloydWarshallTestCase": "FloydWarshallTestCase",
    "typing.Callable[[int, int], int]": "java.util.Comparator<Integer>",
    "BigIntegerWeightBaseOperations": "BigIntegerWeightBaseOperations",
    "DisjointSet[typing.Any]": "DisjointSet<V>",
    "GraphConnection": "GraphConnection",
    "AbstractGraphConnection[typing.Any, EdgeWrapper[typing.Any]]": "AbstractGraphConnection<V,EdgeWrapper<WE>>",
    "GraphConnection[BaseLabeledVertex, BaseLabeledWeightedEdge[float]]": "GraphConnection<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>",
    "MutableSpanningTree[BaseLabeledVertex, BaseLabeledWeightedEdge[float], float]": "MutableSpanningTree<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>,Double>",
    "ColoredVertices[typing.Any, typing.Any]": "ColoredVertices<V,C>",
    "PathWeightedEdgesBuilder[typing.Any, typing.Any]": "PathWeightedEdgesBuilder<V,WE>",
    "PathWeightedEdgesBuilder": "PathWeightedEdgesBuilder",
    "DirectedMutableGraph[BaseLabeledVertex,BaseLabeledEdge]": "DirectedMutableGraph<BaseLabeledVertex,BaseLabeledEdge>",
    "DefaultWeightedEdgesSelector[typing.Any, typing.Any]": "DefaultWeightedEdgesSelector<V,WE>",
    "SynchronizedGraph": "SynchronizedGraph",
    "typing.Tuple[str, Mapper[typing.Any, typing.Any]]": "java.util.Entry<String,Mapper<E,?>>",
    "ColoredVertices": "ColoredVertices",
    "BigDecimalWeightBaseOperations": "BigDecimalWeightBaseOperations",
    "DirectedGraph[typing.Any]": "DirectedGraph<>",
    "VisitSourceSelector": "VisitSourceSelector",
    "DijkstraTestCase": "DijkstraTestCase",
    "InMemoryWeightedPath": "InMemoryWeightedPath",
    "DefaultHeadVertexConnector": "DefaultHeadVertexConnector",
    "GraphException": "GraphException",
    "OrderedMonoid[typing.Any]": "OrderedMonoid<W>",
    "Graph[BaseLabeledVertex,BaseLabeledEdge]": "Graph<BaseLabeledVertex,BaseLabeledEdge>",
    "PathNotFoundException": "PathNotFoundException",
    "SynchronizedDirectedGraph[typing.Any, typing.Any]": "SynchronizedDirectedGraph<V,E>",
    "ColorsBuilder[typing.Any, typing.Any]": "ColorsBuilder<V,E>",
    "MutableSpanningTree[typing.Any, typing.Any, typing.Any]": "MutableSpanningTree<V,WE,W>",
    "IntegerWeightBaseOperations": "IntegerWeightBaseOperations",
    "CheriyanMehlhornGabowAlgorithm[typing.Any, typing.Any]": "CheriyanMehlhornGabowAlgorithm<V,E>",
    "TarjanVertexMetaInfo": "TarjanVertexMetaInfo",
    "Graph[BaseLabeledVertex, typing.Any]": "Graph<BaseLabeledVertex,? extends Serializable>",
    "GraphConnection[typing.Any, typing.Any]": "GraphConnection<V,E>",
    "DefaultFromHeadBuilder": "DefaultFromHeadBuilder",
    "PrimTestCase": "PrimTestCase",
    "InMemoryWeightedPath[typing.Any, typing.Any, typing.Any]": "InMemoryWeightedPath<V,WE,W>",
    "VisitAlgorithmsSelector[typing.Any, typing.Any, typing.Any]": "VisitAlgorithmsSelector<V,E,G>",
    "MapperWrapper": "MapperWrapper",
    "PredecessorsList[typing.Any, typing.Any, typing.Any]": "PredecessorsList<V,WE,W>",
    "ReverseDeleteGraph[typing.Any, typing.Any]": "ReverseDeleteGraph<V,WE>",
    "Mapper[BaseLabeledWeightedEdge[float], float]": "Mapper<BaseLabeledWeightedEdge<Double>,Double>",
    "DefaultColorsBuilder": "DefaultColorsBuilder",
    "FibonacciHeapNode": "FibonacciHeapNode",
    "typing.Set[int]": "java.util.HashSet<Long>",
    "AbstractExporter": "AbstractExporter",
    "OrderedMonoid[int]": "OrderedMonoid<Integer>",
    "FloatWeightBaseOperations": "FloatWeightBaseOperations",
    "VisitGraphBuilder": "VisitGraphBuilder",
    "UncoloredOrderedVertices": "UncoloredOrderedVertices",
    "OrderedMonoid": "OrderedMonoid",
    "VisitSourceSelector[typing.Any, typing.Any, typing.Any]": "VisitSourceSelector<V,E,G>",
    "DefaultTailVertexConnector[typing.Any, typing.Any]": "DefaultTailVertexConnector<V,E>",
    "NamedExportSelector": "NamedExportSelector",
    "VertexLabelMapper": "VertexLabelMapper",
    "FordFulkersonTestCase": "FordFulkersonTestCase",
    "PathSourceSelector": "PathSourceSelector",
    "WeightedPath[BaseLabeledVertex, BaseLabeledWeightedEdge[float], float]": "WeightedPath<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>,Double>",
    "BaseLabeledWeightedEdge[float]": "BaseLabeledWeightedEdge<Double>",
    "DefaultGrapher": "DefaultGrapher",
    "SpanningTreeSourceSelector[typing.Any, typing.Any, typing.Any]": "SpanningTreeSourceSelector<V,W,WE>",
    "SpanningWeightedEdgeMapperBuilder[typing.Any, typing.Any]": "SpanningWeightedEdgeMapperBuilder<V,WE>",
    "VisitAlgorithmsSelector": "VisitAlgorithmsSelector",
    "Weighted[typing.Any]": "Weighted<W>",
    "collections.OrderedDict[decimal.Decimal]": "OrderedMonoid<BigDecimal>",
    "DefaultShortestPathAlgorithmSelector[typing.Any, typing.Any, typing.Any]": "DefaultShortestPathAlgorithmSelector<V,WE,W>",
    "ConnectivityAlgorithmsSelector": "ConnectivityAlgorithmsSelector",
    "SynchronizedMutableGraph": "SynchronizedMutableGraph",
    "Weighted": "Weighted",
    "UniVsBiDijkstraBenchmarkTestCase": "UniVsBiDijkstraBenchmarkTestCase",
    "HeuristicBuilder[typing.Any, typing.Any, typing.Any]": "HeuristicBuilder<V,WE,W>",
    "DefaultConnectivityAlgorithmsSelector": "DefaultConnectivityAlgorithmsSelector",
    "Heuristic": "Heuristic",
    "Heuristic[BaseLabeledVertex, float]": "Heuristic<BaseLabeledVertex,Double>",
    "TestRunner": "TestRunner",
    "typing.List[TestRunner]": "TestRunner[]",
    "Heuristic[typing.Any, typing.Any]": "Heuristic<V,W>",
    "CheriyanMehlhornGabowTestCase": "CheriyanMehlhornGabowTestCase",
    "GameResult": "GameResult",
    "DefaultTargetSourceSelector": "DefaultTargetSourceSelector",
    "BaseGraphVisitHandler[typing.Any, typing.Any, typing.Any, Graph[typing.Any, typing.Any]]": "BaseGraphVisitHandler<V,E,G,Graph<V,E>>",
    "PredecessorsList": "PredecessorsList",
    "KosarajuSharirAlgorithm[typing.Any, typing.Any]": "KosarajuSharirAlgorithm<V,E>",
    "GraphUtils": "GraphUtils",
    "BaseGraphVisitHandler[BaseLabeledVertex, BaseLabeledEdge, UndirectedMutableGraph[BaseLabeledVertex, BaseLabeledEdge], typing.List[BaseLabeledVertex]]": "BaseGraphVisitHandler<BaseLabeledVertex,BaseLabeledEdge,UndirectedMutableGraph<BaseLabeledVertex,BaseLabeledEdge>,List<BaseLabeledVertex>>",
    "DefaultHeuristicBuilder": "DefaultHeuristicBuilder",
    "Path": "Path",
    "DefaultSpanningWeightedEdgeMapperBuilder": "DefaultSpanningWeightedEdgeMapperBuilder",
    "BaseMutableGraph[BaseLabeledVertex,BaseLabeledEdge]": "BaseMutableGraph<BaseLabeledVertex,BaseLabeledEdge>",
    "EdgeWrapper": "EdgeWrapper",
    "BaseGraphVisitHandler": "BaseGraphVisitHandler",
    "BaseLabeledVertex": "BaseLabeledVertex",
    "GraphConnector": "GraphConnector",
    "BaseWeightedEdge": "BaseWeightedEdge",
    "BaseMutableGraph": "BaseMutableGraph",
    "ConnectivityAlgorithmsSelector[typing.Any, typing.Any]": "ConnectivityAlgorithmsSelector<V,E>",
    "BaseLabeledWeightedEdge[typing.Any]": "BaseLabeledWeightedEdge<W>",
    "DefaultConnectivityAlgorithmsSelector[typing.Any, typing.Any]": "DefaultConnectivityAlgorithmsSelector<V,E>",
    "DirectedMutableGraph[typing.Any, typing.Any]": "DirectedMutableGraph<V,E>",
    "GraphConnection[BaseLabeledVertex,BaseLabeledEdge]": "GraphConnection<BaseLabeledVertex,BaseLabeledEdge>",
    "ReverseDeleteTestCase": "ReverseDeleteTestCase",
    "DoubleWeightBaseOperations": "DoubleWeightBaseOperations",
    "BellmannFordTestCase": "BellmannFordTestCase",
    "UndirectedGraph[typing.Any]": "UndirectedGraph<>",
    "UndirectedGraph": "UndirectedGraph",
    "FibonacciHeapNode[typing.Any]": "FibonacciHeapNode<E>",
    "TarjanAlgorithm[typing.Any, typing.Any]": "TarjanAlgorithm<V,E>",
    "VisitGraphBuilder[typing.Any, typing.Any, typing.Any]": "VisitGraphBuilder<V,E,G>",
    "MutableGraph[BaseLabeledVertex, BaseLabeledWeightedEdge[float]]": "MutableGraph<BaseLabeledVertex,BaseLabeledWeightedEdge<Double>>",
    "TestUtil": "TestUtil",
    "CommandLauncherFactory": "CommandLauncherFactory",
    "DebugUtils": "DebugUtils",
    "ShutdownHookProcessDestroyer": "ShutdownHookProcessDestroyer",
    "MapUtils": "MapUtils",
    "DefaultProcessingEnvironment": "DefaultProcessingEnvironment",
    "Watchdog": "Watchdog",
    "Argument": "Argument",
    "DefaultExecuteResultHandler": "DefaultExecuteResultHandler",
    "typing.List[Argument]": "java.util.Vector<Argument>",
    "CommandLauncher": "CommandLauncher",
    "PrintResultHandler": "PrintResultHandler",
    "MapUtilTest": "MapUtilTest",
    "EnvironmentUtilsTest": "EnvironmentUtilsTest",
    "OS": "OS",
    "TutorialTest": "TutorialTest",
    "TimeoutObserver": "TimeoutObserver",
    "CommandLauncherImpl": "CommandLauncherImpl",
    "ExecuteException": "ExecuteException",
    "Exec34Test": "Exec34Test",
    "Exec65Test": "Exec65Test",
    "Exec44Test": "Exec44Test",
    "Java13CommandLauncher": "Java13CommandLauncher",
    "Exec57Test": "Exec57Test",
    "Exec60Test": "Exec60Test",
    "StandAloneTest": "StandAloneTest",
    "typing.Callable[[TimeoutObserver], None]": "java.util.function.Consumer<TimeoutObserver>",
    "AbstractExecTest": "AbstractExecTest",
    "LogOutputStream": "LogOutputStream",
    "Exec49Test": "Exec49Test",
    "ByteArrayOutputStreamX": "ByteArrayOutputStreamX",
    "StreamPumper": "StreamPumper",
    "Exec62Test": "Exec62Test",
    "VmsCommandLauncher": "VmsCommandLauncher",
    "DefaultExecutor": "DefaultExecutor",
    "StringUtilTest": "StringUtilTest",
    "DefaultExecutor.Builder": "DefaultExecutor.Builder<Builder>",
    "LogOutputStreamTest": "LogOutputStreamTest",
    "OS2CommandLauncher": "OS2CommandLauncher",
    "ExecuteWatchdog": "ExecuteWatchdog",
    "DaemonExecutor": "DaemonExecutor",
    "EnvironmentUtils": "EnvironmentUtils",
    "CommandLauncherProxy": "CommandLauncherProxy",
    "PumpStreamHandler": "PumpStreamHandler",
    "PumpStreamHandlerTest": "PumpStreamHandlerTest",
    "ExecuteResultHandler": "ExecuteResultHandler",
    "Executor": "Executor",
    "InputStreamPumper": "InputStreamPumper",
    "ProcessDestroyer": "ProcessDestroyer",
    "OpenVmsProcessingEnvironment": "OpenVmsProcessingEnvironment",
    "typing.Callable[[str, str], int]": "java.util.Comparator<String>",
    "ExecuteStreamHandler": "ExecuteStreamHandler",
    "ThreadUtil": "ThreadUtil",
    "DefaultExecutorTest": "DefaultExecutorTest",
    "typing.Set[typing.Tuple[str, str]]": "java.util.Set<Entry<String,String>>",
    "Exec36Test": "Exec36Test",
    "Exec41Test": "Exec41Test",
    "Exec33Test": "Exec33Test",
    "typing.Tuple[str, str]": "java.util.Entry<String,String>",
    "typing.Callable[[int], typing.List[str]]": "java.util.function.IntFunction<String[]>",
    "typing.List[subprocess.Popen]": "java.util.Vector<Process>",
    "typing.Callable[[], Watchdog]": "java.util.function.Supplier<Watchdog>",
    "typing.Dict[str, pathlib.Path]": "java.util.HashMap<String,File>",
    "WinNTCommandLauncher": "WinNTCommandLauncher",
    "typing.Callable[[], ExecuteWatchdog]": "java.util.function.Supplier<ExecuteWatchdog>",
    "typing.Callable[[subprocess.Popen], None]": "java.util.function.Consumer<Process>",
    "typing.Callable[[], str]": "java.util.function.Supplier<String>",
    "typing.List[TimeoutObserver]": "java.util.Vector<TimeoutObserver>",
    "typing.Callable[[typing.Tuple[str, str]], str]": "java.util.function.Function<Entry<String,String>,String>",
    "ProcessDestroyerThread": "ProcessDestroyerThread",
    "TimeoutError": "java.util.concurrent.TimeoutException",
    "typing.Callable[[], DefaultExecutor]": "java.util.function.Supplier<DefaultExecutor>",
    "WinSize": "WinSize",
    "Color": "Color",
    "AnsiType": "AnsiType",
    "WindowsSupport": "WindowsSupport",
    "MingwSupport": "MingwSupport",
    "OSInfo": "OSInfo",
    "WindowsAnsiProcessor": "WindowsAnsiProcessor",
    "AnsiOutputStreamTest": "AnsiOutputStreamTest",
    "AnsiConsole": "AnsiConsole",
    "WINDOW_BUFFER_SIZE_RECORD": "WINDOW_BUFFER_SIZE_RECORD",
    "WidthSupplier": "WidthSupplier",
    "AnsiMain": "AnsiMain",
    "typing.Callable[[], bool]": "java.util.concurrent.Callable<Boolean>",
    "AnsiStringTest": "AnsiStringTest",
    "Attribute": "Attribute",
    "Colors": "Colors",
    "AnsiMode": "AnsiMode",
    "AnsiRendererTest": "AnsiRendererTest",
    "COORD": "COORD",
    "AnsiRenderer": "AnsiRenderer",
    "InstallUninstallTest": "InstallUninstallTest",
    "ZeroWidthSupplier": "ZeroWidthSupplier",
    "AnsiOutputStream": "AnsiOutputStream",
    "FOCUS_EVENT_RECORD": "FOCUS_EVENT_RECORD",
    "CHAR_INFO": "CHAR_INFO",
    "EncodingTest": "EncodingTest",
    "Termios": "Termios",
    "INPUT_RECORD": "INPUT_RECORD",
    "typing.List[INPUT_RECORD]": "INPUT_RECORD[]",
    "AnsiColors": "AnsiColors",
    "CLibrary": "CLibrary",
    "JansiLoaderTest": "JansiLoaderTest",
    "Consumer": "Consumer",
    "Ansi": "Ansi",
    "AnsiConsoleExample": "AnsiConsoleExample",
    "KEY_EVENT_RECORD": "KEY_EVENT_RECORD",
    "Erase": "Erase",
    "SMALL_RECT": "SMALL_RECT",
    "ColorsAnsiProcessor": "ColorsAnsiProcessor",
    "Code": "Code",
    "FastBufferedOutputStream": "FastBufferedOutputStream",
    "JansiLoader": "JansiLoader",
    "MENU_EVENT_RECORD": "MENU_EVENT_RECORD",
    "AnsiTest": "AnsiTest",
    "AnsiPrintStream": "AnsiPrintStream",
    "CONSOLE_SCREEN_BUFFER_INFO": "CONSOLE_SCREEN_BUFFER_INFO",
    "IoRunnable": "IoRunnable",
    "NoAnsi": "NoAnsi",
    "MOUSE_EVENT_RECORD": "MOUSE_EVENT_RECORD",
    "AnsiConsoleExample2": "AnsiConsoleExample2",
    "Kernel32Test": "Kernel32Test",
    "Kernel32.CONSOLE_SCREEN_BUFFER_INFO": "Kernel32.CONSOLE_SCREEN_BUFFER_INFO",
    "io.RawIOBase": "java.io.FileDescriptor",
    "AnsiOutputStream.IoRunnable": "AnsiOutputStream.IoRunnable",
    "contextvars.ContextVar[typing.TypeVar('T', bound=bool)]": "java.lang.InheritableThreadLocal<Boolean>",
    "Kernel32": "Kernel32",
    "typing.Generic[typing.TypeVar('T', bound=str)]": "java.util.concurrent.atomic.AtomicReference<String>",
    "Ansi.Color": "Ansi.Color",
    "AnsiOutputStream.ZeroWidthSupplier": "AnsiOutputStream.ZeroWidthSupplier",
    "CLibrary.WinSize": "CLibrary.WinSize",
    "AnsiOutputStream.WidthSupplier": "AnsiOutputStream.WidthSupplier",
    "AnsiProcessor": "AnsiProcessor",
    "BenchmarkSkippable": "BenchmarkSkippable",
    "BenchmarkOffsettedSeries": "BenchmarkOffsettedSeries",
    "IntegratedIntegerCODEC": "IntegratedIntegerCODEC",
    "S9": "S9",
    "BenchmarkBitPacking": "BenchmarkBitPacking",
    "OptPFDS9": "OptPFDS9",
    "TestUtils": "TestUtils",
    "LongAs2IntsCodec": "LongAs2IntsCodec",
    "BasicTest": "BasicTest",
    "IntegerCODEC": "IntegerCODEC",
    "UniformDataGenerator": "UniformDataGenerator",
    "DeltaZigzagVariableByte": "DeltaZigzagVariableByte",
    "SpotChecker": "SpotChecker",
    "ByteLongCODEC": "ByteLongCODEC",
    "SkippableIntegerCODEC": "SkippableIntegerCODEC",
    "VariableByte": "VariableByte",
    "FastPFOR128": "FastPFOR128",
    "SkippableLongCODEC": "SkippableLongCODEC",
    "UncompressibleInputException": "UncompressibleInputException",
    "IntegratedBitPacking": "IntegratedBitPacking",
    "IntegratedVariableByte": "IntegratedVariableByte",
    "SkippableIntegratedIntegerCODEC": "SkippableIntegratedIntegerCODEC",
    "XorBinaryPackingTest": "XorBinaryPackingTest",
    "IntCompressor": "IntCompressor",
    "PForDeltaUnpack128": "PForDeltaUnpack128",
    "IntegratedLongCODEC": "IntegratedLongCODEC",
    "LongClusteredDataGenerator": "LongClusteredDataGenerator",
    "LongComposition": "LongComposition",
    "ClusteredDataGenerator": "ClusteredDataGenerator",
    "GroupSimple9": "GroupSimple9",
    "BitPacking": "BitPacking",
    "Timer": "Timer",
    "IntegratedIntCompressor": "IntegratedIntCompressor",
    "Format": "Format",
    "ResourcedTest": "ResourcedTest",
    "typing.List[IntegratedIntegerCODEC]": "IntegratedIntegerCODEC[]",
    "ByteBasicTest": "ByteBasicTest",
    "ByteIntegerCODEC": "ByteIntegerCODEC",
    "TestLongAs2IntsCodec": "TestLongAs2IntsCodec",
    "OptPFDS16": "OptPFDS16",
    "IntegratedComposition": "IntegratedComposition",
    "RoaringIntPacking": "RoaringIntPacking",
    "PForDeltaUnpack128WIthIntBuffer": "PForDeltaUnpack128WIthIntBuffer",
    "NewPFDS9": "NewPFDS9",
    "SkippableLongBasicTest": "SkippableLongBasicTest",
    "LongVariableByte": "LongVariableByte",
    "LongTestUtils": "LongTestUtils",
    "NewPFDS16": "NewPFDS16",
    "Simple16": "Simple16",
    "LongDelta": "LongDelta",
    "OptPFD": "OptPFD",
    "io.BytesIO": "java.nio.ByteOrder",
    "Simple16WithHardCodes": "Simple16WithHardCodes",
    "NewPFD": "NewPFD",
    "Delta": "Delta",
    "ExampleTest": "ExampleTest",
    "Benchmark": "Benchmark",
    "BinaryPacking": "BinaryPacking",
    "DeltaZigzagBinaryPacking": "DeltaZigzagBinaryPacking",
    "BenchmarkCSV": "BenchmarkCSV",
    "LCPForDelta": "LCPForDelta",
    "SkippableIntegratedComposition": "SkippableIntegratedComposition",
    "SkippableBasicTest": "SkippableBasicTest",
    "JustCopy": "JustCopy",
    "BoundaryTest": "BoundaryTest",
    "PerformanceLogger": "PerformanceLogger",
    "IntegratedBinaryPacking": "IntegratedBinaryPacking",
    "Kamikaze": "Kamikaze",
    "XorBinaryPacking": "XorBinaryPacking",
    "LongBasicTest": "LongBasicTest",
    "S16": "S16",
    "LongUniformDataGenerator": "LongUniformDataGenerator",
    "IntegratedByteIntegerCODEC": "IntegratedByteIntegerCODEC",
    "PForDelta": "PForDelta",
    "LongUtil": "LongUtil",
    "Composition": "Composition",
    "IntCompressorTest": "IntCompressorTest",
    "IntWrapper": "IntWrapper",
    "FastPFOR": "FastPFOR",
    "CompressionMode": "CompressionMode",
    "DeltaZigzagEncodingTest": "DeltaZigzagEncodingTest",
    "SkippableLongComposition": "SkippableLongComposition",
    "Simple9": "Simple9",
    "LongJustCopy": "LongJustCopy",
    "DeltaZigzagEncoding": "DeltaZigzagEncoding",
    "SkippableComposition": "SkippableComposition",
    "TestLongVariableByte": "TestLongVariableByte",
    "LongCODEC": "LongCODEC",
    "typing.Union[array.array, typing.List[int]]": "java.nio.IntBuffer",
    "typing.Callable[[int], int]": "java.util.function.LongUnaryOperator",
    "typing.List[IntegerCODEC]": "IntegerCODEC[]",
    "AdhocTest": "AdhocTest",
    "typing.List[LongCODEC]": "LongCODEC[]",
    "typing.List[SkippableIntegerCODEC]": "SkippableIntegerCODEC[]",
    "typing.List[IntCompressor]": "IntCompressor[]",
    "typing.List[ByteIntegerCODEC]": "ByteIntegerCODEC[]",
    "typing.List[IntegratedByteIntegerCODEC]": "IntegratedByteIntegerCODEC[]",
    "typing.List[SkippableLongCODEC]": "SkippableLongCODEC[]",
    "typing.List[IntegratedIntCompressor]": "IntegratedIntCompressor[]"
}